{
  "course_name": "Appml",
  "description": "AppML Brings Data to HTML \"No Nonsense Web Applications\" The Web is growing fast, and the amount of data in Cyberspace is growing even faster. Every day new information systems are developed, and every day new users are connected, and data can be accessed 24/7 from anywhere in the world. Faster and better software development methods are desperately needed. Along these lines, W3Schools has developed a very flexible technique for retrieving, displaying, and manipulate data, without the need for traditional programming. Cooperating with Jan Egil Refsnes, W3schools has developed a vocabulary for defining Web applications. The vocabulary is called AppML (Application Modeling Language). AppML uses the most up-to-date techniques and ideas of modern Web development with focus on: AppML supports the functions you find in other frameworks like React, Angular, and Vue, but AppML is much easier to use, and much easier to understand.",
  "course_summary": [
    {
      "title": "AppML How To",
      "summary": "How to build an AppML Application in 2 easy steps.\n1. Create a Page Using HTML and CSS\nHTML\nThe {{ }} brackets are placeholders for AppML data.\nCSS\nFeel free to replace the CSS with your own favorite style sheet.\nREMOVE ADS\n2. Add AppML\nUse AppML to add data to your page:\nExample\nAppML Explained:\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"> adds AppML to your page.\nappml-data=\"customers.js\" connects AppML data (customers.js) to an HTML element (<table>).\nIn this case we have used a JSON file: customers.js\nappml-repeat=\"records\" repeats an HTML element (<tr>) for each item (records) in a data object.\nThe {{ }} brackets are placeholders for AppML data.",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<link rel=\"stylesheet\" href=\"style.css\">\n<title>Customers</title>\n<body>\n\n<h1>Customers</h1>\n\n<table>\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr>\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\n</body>\n</html>",
        "body {\nfont: 14px Verdana, sans-serif;\n}\n\nh1 {\ncolor: #996600;\n}\n\ntable {\nwidth: 100%;\nborder-collapse: collapse;\n}\n\nth, td {\nborder: 1px solid grey;\npadding: 5px;\ntext-align: left;\n}\n\ntable tr:nth-child(odd) {\nbackground-color: #f1f1f1;\n}",
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"style.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<h1>Customers</h1>\n\n<table appml-data=\"customers.js\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\n</body>\n</html>"
      ]
    },
    {
      "title": "AppML Data",
      "summary": "The main purpose of AppML is to provide data to HTML pages.\nConnecting AppML to Data\nAppML can display data from variables\nAppML can display data from files\nAppML can display data from databases\nAppML Using a JavaScript Object\nA common way to separate HTML and Data, is to store the data in a JavaScript object.\nExample\nREMOVE ADS\nAppML Using a JSON File\nAnother common way to separate HTML and Data, is to store the data in a JSON file:\ncustomers.js\nWith AppML, you can specify a JSON file as the data source in the appml-data attribute:\nExample\nAppML Using a Database\nWith a little help from a web server, you can feed your application with SQL data.\nThis example uses PHP to read data from a MySQL database:\nExample\nThe Power of AppML\nYou are about to discover the power of AppML.\nAppML can provide you with data, controllers, and models for:\nSuper-easy HTML Application Development\nSuper-easy Modeling, Prototyping, and Testing\nYou can put as many AppML applications as you like inside an HTML page.\nAppML does not interfere with other parts of the page.\nYou have full HTML, CSS, and JavaScript freedom.\nAppML can be used to develop full scale CRUD web applications.\nCRUD: Create, Read, Update, Delete.\nTo discover the power of AppML: View an AppML Demo.",
      "examples": [
        "<table appml-data=\"dataObj\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\n<script>\nvar dataObj = {\n\"records\":[\n{\"CustomerName\":\"Alfreds Futterkiste\",\"City\":\"Berlin\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Ana Trujillo Emparedados y helados\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Antonio Moreno Taquería\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Around the Horn\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"B's Beverages\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"Berglunds snabbköp\",\"City\":\"Luleå\",\"Country\":\"Sweden\"},\n{\"CustomerName\":\"Blauer See Delikatessen\",\"City\":\"Mannheim\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Blondel père et fils\",\"City\":\"Strasbourg\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bólido Comidas preparadas\",\"City\":\"Madrid\",\"Country\":\"Spain\"},\n{\"CustomerName\":\"Bon app'\",\"City\":\"Marseille\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bottom-Dollar Marketse\",\"City\":\"Tsawassen\",\"Country\":\"Canada\"},\n{\"CustomerName\":\"Cactus Comidas para llevar\",\"City\":\"Buenos Aires\",\"Country\":\"Argentina\"},\n{\"CustomerName\":\"Centro comercial Moctezuma\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Chop-suey Chinese\",\"City\":\"Bern\",\"Country\":\"Switzerland\"},\n{\"CustomerName\":\"Comércio Mineiro\",\"City\":\"São Paulo\",\"Country\":\"Brazil\"}\n]};\n</script>",
        "{\n\"records\":[\n{\"CustomerName\":\"Alfreds Futterkiste\",\"City\":\"Berlin\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Ana Trujillo Emparedados y helados\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Antonio Moreno Taquería\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Around the Horn\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"B's Beverages\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"Berglunds snabbköp\",\"City\":\"Luleå\",\"Country\":\"Sweden\"},\n{\"CustomerName\":\"Blauer See Delikatessen\",\"City\":\"Mannheim\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Blondel père et fils\",\"City\":\"Strasbourg\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bólido Comidas preparadas\",\"City\":\"Madrid\",\"Country\":\"Spain\"},\n{\"CustomerName\":\"Bon app'\",\"City\":\"Marseille\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bottom-Dollar Marketse\",\"City\":\"Tsawassen\",\"Country\":\"Canada\"},\n{\"CustomerName\":\"Cactus Comidas para llevar\",\"City\":\"Buenos Aires\",\"Country\":\"Argentina\"},\n{\"CustomerName\":\"Centro comercial Moctezuma\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Chop-suey Chinese\",\"City\":\"Bern\",\"Country\":\"Switzerland\"},\n{\"CustomerName\":\"Comércio Mineiro\",\"City\":\"São Paulo\",\"Country\":\"Brazil\"}\n]\n}",
        "<table appml-data=\"customers.js\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>",
        "<table appml-data=\"https://www.w3schools.com/appml/customers.php\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>"
      ]
    },
    {
      "title": "AppML HTML Includes",
      "summary": "With AppML, you can include HTML in HTML.\nIncluding HTML in HTML\nA good example of this, is to include a standard HTML footer in all your HTML pages.\nThis is an example of a file containing a standard footer:\ninc_footer.htm\nIn this example the appml-include-html attribute is used to include the file \"inc_footer.htm\":\nExample",
      "examples": [
        "<hr style=\"margin-top:10px;\">\n<p style=\"font-size:11px\">2016&copy; W3Schools. All rights reserved.</p>\n<hr>",
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"style.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n\n<body>\n\n<h1>Customers</h1>\n<table appml-data=\"customers.js\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\n<div appml-include-html=\"inc_footer.htm\"></div>\n\n</body>\n</html>"
      ]
    },
    {
      "title": "AppML Controllers",
      "summary": "The purpose of an AppML controller, is to let you control your application.\nWhat Can a Controller Do?\nSet initial data\nChange application data\nHandle input and output\nValidate data\nSummarize data\nHandle errors\nStart and stop applications\nAnd much more\nWithout a Controller\nBy default AppML applications run without a controller:\nExample\nREMOVE ADS\nWith a Controller\nWith an AppML controller, you can control your application with JavaScript.\nThe controller is a JavaScript function, provided by you.\nThe appml-controller attribute is used to refer to a controller function.\nExample\nThe controller (myController) in the example above, changes the value of \"CustomerName\" to uppercase, before it is displayed.\nIf you have a controller, AppML will send the application object ($appml) to the controller, for every important action.\nOne of the application properties is a message ($appml.message), describing the application state.\nMessages are explained in the next chapter.",
      "examples": [
        "<table appml-data=\"customers.js\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>",
        "<h1>Customers</h1>\n<table appml-data=\"customers.js\" appml-controller=\"myController\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\n<script>\nfunction myController($appml) {\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"CustomerName\") {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}\n</script>"
      ]
    },
    {
      "title": "AppML Messages",
      "summary": "AppML Messages and Actions\nWhen AppML is about to perform an action, it sends the application object ($appml) to the controller.\nOne of the application object's properties is a message ($appml.message), describing the application state.\nTesting this message, enables you to add your own JavaScript code, depending on the action.\nExample\nAppML Messages\nThis is a list of AppML messages that can be received:\nThe \"ready\" Message\nWhen an AppML application is ready to load data, it will send a \"ready\" message.\nThis is the perfect place to provide the application with initial data (start values):\nExample\nIn the example above, when the $appml.message is \"ready\", the controller adds two new properties to the application (today and copyright).\nWhen the application runs, the new properties are available to the application.\nREMOVE ADS\nThe \"loaded\" Message\nWhen an AppML application is loaded with data (ready to display), it will send a \"loaded\" message.\nThis is the perfect place to provide changes (if necessary) to the loaded data.\nExample\nThe \"display\" Message\nEach time AppML is displaying a data item, it will send a \"display\" message.\nThis is the perfect place to modify the output:\nExample\nIn the example above, \"CustomerName\" is truncated to 15 characters, and \"Country\" is converted to upper case.\nThe \"done\" Message\nWhen an AppML application has finished displaying data, it will send a \"done\" message.\nThis is the perfect place to clean up or calculate application data (after display).\nExample\nThe \"submit\" Message\nWhen an AppML application is ready to submit data, it will send a \"submit\" message.\nThis is the perfect place to validate application input.\nExample\nThe \"error\" Message\nIf an error occurs, AppML will send an \"error\" message.\nThis is the perfect place to handle errors.\nExample\nAppML Properties\nThis is a list of some commonly used AppML properties:",
      "examples": [
        "function myController($appml) {\nif ($appml.message == \"ready\") {alert (\"Hello Application\");}\n}",
        "<div appml-controller=\"myController\" appml-data=\"customers.js\">\n<h1>Customers</h1>\n<p>{{today}}</p>\n<table>\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n<p>Copyright {{copyright}}</p>\n</div>\n\n<script>\nfunction myController($appml) {\nif ($appml.message == \"ready\") {\n$appml.today = new Date();\n$appml.copyright = \"W3Schools\"\n}\n}\n</script>",
        "function myController($appml) {\nif ($appml.message == \"loaded\") {\n// compute your values here before display\n}\n}",
        "<div appml_app=\"myController\" appml-data=\"customers.js\">\n<h1>Customers</h1>\n<table>\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n<script>\nfunction myController($appml) {\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"CustomerName\") {\n$appml.display.value = $appml.display.value.substr(0,15);\n}\nif ($appml.display.name == \"Country\") {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}\n</script>",
        "<script>\nfunction myController($appml) {\nif ($appml.message == \"done\") {\ncalculate data here\n}\n}\n</script>",
        "<script>\nfunction myController($appml) {\nif ($appml.message == \"submit\") {\nvalidate data here\n}\n}\n</script>",
        "<script>\nfunction myController($appml) {\nif ($appml.message == \"error\") {\nalert ($appml.error.number + \" \" + $appml.error.description)\n}\n}\n</script>"
      ]
    },
    {
      "title": "AppML Models",
      "summary": "An AppML model describes an application.\nWhat Is an AppML Model?\nAn AppML model is a JavaScript object (JSON) describing an application.\nThis small model describes a full application for retrieving data from a database:\nWhat Can an AppML Model Do?\nWith an AppML model you can:\nDefine connections to databases like MySQL, SQL Server, Access, and Oracle.\nDefine connections to data files like JSON, XML, and other text files.\nDefine SQL statements for retrieving data.\nDefine filter and sorting restrictions.\nDefine data types, data formats, and update restrictions.\nDefine application security, users, and user groups.\nExamples\nTo allow users to filter data (search ,sort), you can add filter information to the model:\nExample\nTo allow users to update data, you can add update information to the model:\nExample\nWithout a Model\nThe applications you have seen earlier in this tutorial, did not use any models.\nIn later chapters, we will connect to databases, read, filter, and update data, as specified in a model.",
      "examples": [
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Customers\"}\n}",
        "\"filteritems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n]",
        "\"updateItems\" : [\n{\"item\" : \"CustomerName\"},\n{\"item\" : \"Address\"},\n{\"item\" : \"PostalCode\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n]"
      ]
    },
    {
      "title": "AppML API",
      "summary": "The AppML API defines the methods and properties of AppML\nWhat Can Methods and Properties Do?\nWith methods and properties you can:\nCreate AppML applications\nFeed applications with data\nFetch application data for use in your web page\nExample\nnew AppML() creates a new AppML object.\ndataSource sets the data source of the AppML object.\ngetData() gets the data.\ndata.records contains the data records.\nYou can loop the records and display the content in an HTML element:\nExample\nResult\nREMOVE ADS\nSome AppML Methods\nSome AppML Properties\nSome Data Object Properties",
      "examples": [
        "// Create an AppML object and fetch the data\nmyObj = new AppML();\nmyObj.dataSource = \"https://www.w3schools.com/appml/customers.php\";\nmyObj.getData();\n\n// Locate the data records\nmyArr = myObj.data.records;\nlen = myArr.length;\n\n// Display the records\nfor (i = 0; i < len; i++) {\ntxt += myArr[i].CustomerName + \"<br>\";\n}\ndocument.getElementById(\"demo\").innerHTML = txt;",
        "Alfreds Futterkiste\nBerglunds snabbköp\nCentro comercial Moctezuma\nErnst Handel\nFISSA Fabrica Inter. Salchichas S.A.\nGalería del gastrónomo\nIsland Trading\nKöniglich Essen\nLaughing Bacchus Wine Cellars\nMagazzini Alimentari Riuniti\nNorth/South\nParis spécialités\nRattlesnake Canyon Grocery\nSimons bistro\nThe Big Cheese\nVaffeljernet\nWolski Zajazd"
      ]
    },
    {
      "title": "AppML Cases",
      "summary": "This case study demonstrates how to build Internet applications using AppML.\nPart I: Accessing Internet Files\nAccessing a TEXT file\nAccessing an XML file\nAccessing a JSON file\nPart II: Accessing Internet Databases\nListing database data\nFiltering database data\nEditing database data\nAppML Browser and AppML Server\nIn this case study, AppML runs both in the browser (appml.js) and on the server (appml.php).\nWe will use a web server located at https://www.w3schools.com.\nAll the files and databases are located on the server.\nLater in this tutorial you will learn how to simulate a web server in the browser.\nText Files\nTo demonstrate how to access text files, we have used files like this:\ncd_catalog.txt\nXML Files\nTo demonstrate how to access XML files, we have used a files like this:\ncd_catalog.xml\nREMOVE ADS\nJSON Files\nTo demonstrate how to access JSON files, we have used files like this:\ncd_catalog.js\nDatabases\nOur test database contains several tables like this:\nCustomers\nSuppliers\nProducts",
      "examples": [
        "Empire Burlesque,Bob Dylan,USA,Columbia,10.90,1985\nHide your heart,Bonnie Tyler,UK,CBS Records,9.90,1988\nGreatest Hits,Dolly Parton,USA,RCA,9.90,1982\nStill got the blues,Gary Moore,UK,Virgin records,10.20,1990\n.\n.",
        "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<CATALOG>\n<CD>\n<TITLE>Empire Burlesque</TITLE>\n<ARTIST>Bob Dylan</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>Columbia</COMPANY>\n<PRICE>10.90</PRICE>\n<PUBLISHED>1985</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Hide your heart</TITLE>\n<ARTIST>Bonnie Tyler</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>CBS Records</COMPANY>\n<PRICE>9.90</PRICE>\n<PUBLISHED>1988</PUBLISHED>\n</CD>\n.\n.",
        "{\n\"cd\" : [\n{ \"title\" : \"Empire Burlesque\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.90\" },\n{ \"title\" : \"Hide your heart\", \"artist\" : \"Bonnie Tyler\", \"price\" : \"9.90\" },\n{ \"title\" : \"Greatest Hits\", \"artist\" : \"Dolly Parton\", \"price\" : \"9.90\" },\n{ \"title\" : \"Still got the blues\", \"artist\" : \"Gary Moore\", \"price\" : \"10.20\" },\n.\n."
      ]
    },
    {
      "title": "AppML Case Study - Text Files",
      "summary": "The HTML Page\nThis is the HTML source:\nThe Model\nThis is the model used in the application:\nModel\nREMOVE ADS\nThe File\nThis is the comma separated text file:\ncd_catalog.txt",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div class=\"w3-container\" appml-data=\"appml.php?model=model_cd_from_txt\">\n<h1>CD Collection</h1>\n<h3>Extracted from a comma separated text file</h3>\n\n<div appml-include-html=\"inc_listcommands_nofilter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th>Title</th>\n<th>Artist</th>\n<th>Price</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{Title}}</td>\n<td>{{Artist}}</td>\n<td>{{Price}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>",
        "{\n\"rowsperpage\" : 7,\n\"data\" : {\n\"type\" : \"csvfile\",\n\"filename\" : \"cd_catalog.txt\",\n\"items\" : [\n{\"name\" : \"Title\", \"index\" : 1},\n{\"name\" : \"Artist\", \"index\" : 2},\n{\"name\" : \"Price\", \"index\" : 5}\n]\n}\n}",
        "Empire Burlesque,Bob Dylan,USA,Columbia,10.90,1985\nHide your heart,Bonnie Tyler,UK,CBS Records,9.90,1988\nGreatest Hits,Dolly Parton,USA,RCA,9.90,1982\nStill got the blues,Gary Moore,UK,Virgin records,10.20,1990\nEros,Eros Ramazzotti,EU,BMG,9.90,1997\nOne night only,Bee Gees,UK,Polydor,10.90,1998\nSylvias Mother,Dr.Hook,UK,CBS,8.10,1973\nMaggie May,Rod Stewart,UK,Pickwick,8.50,1990\nEmpire Burlesque,Bob Dylan,USA,Columbia,10.90,1985\nHide your heart,Bonnie Tyler,UK,CBS Records,9.90,1988\nGreatest Hits,Dolly Parton,USA,RCA,9.90,1982\nStill got the blues,Gary Moore,UK,Virgin records,10.20,1990\nEros,Eros Ramazzotti,EU,BMG,9.90,1997\nOne night only,Bee Gees,UK,Polydor,10.90,1998\nSylvias Mother,Dr.Hook,UK,CBS,8.10,1973\nMaggie May,Rod Stewart,UK,Pickwick,8.50,1990\nEmpire Burlesque,Bob Dylan,USA,Columbia,10.90,1985\nHide your heart,Bonnie Tyler,UK,CBS Records,9.90,1988\nGreatest Hits,Dolly Parton,USA,RCA,9.90,1982\nStill got the blues,Gary Moore,UK,Virgin records,10.20,1990\nEros,Eros Ramazzotti,EU,BMG,9.90,1997\nOne night only,Bee Gees,UK,Polydor,10.90,1998\nSylvias Mother,Dr.Hook,UK,CBS,8.10,1973\nMaggie May,Rod Stewart,UK,Pickwick,8.50,1990\nEmpire Burlesque,Bob Dylan,USA,Columbia,10.90,1985\nHide your heart,Bonnie Tyler,UK,CBS Records,9.90,1988\nGreatest Hits,Dolly Parton,USA,RCA,9.90,1982\nStill got the blues,Gary Moore,UK,Virgin records,10.20,1990\nEros,Eros Ramazzotti,EU,BMG,9.90,1997\nOne night only,Bee Gees,UK,Polydor,10.90,1998\nSylvias Mother,Dr.Hook,UK,CBS,8.10,1973\nMaggie May,Rod Stewart,UK,Pickwick,8.50,1990"
      ]
    },
    {
      "title": "AppML Case Study - XML Files",
      "summary": "The HTML Page\nThis is the HTML source:\nThe Model\nThis is the model used in the application:\nModel\nREMOVE ADS\nThe File\nThis is the XML file:\ncd_catalog.xml",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n<meta charset=\"utf-8\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container\" appml-data=\"appml.php?model=model_cd_from_xml\">\n<h1>CD Collection</h1>\n<h3>Extracted from an XML file</h3>\n\n<div appml-include-html=\"inc_listcommands_nofilter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th>Title</th>\n<th>Artist</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{Title}}</td>\n<td>{{Artist}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>",
        "{\n\"rowsperpage\" : 7,\n\"data\" : {\n\"type\" : \"xmlfile\",\n\"filename\" : \"cd_catalog.xml\",\n\"record\" : \"CD\",\n\"items\" : [\n{\"name\" : \"Artist\", \"nodename\" : \"ARTIST\"},\n{\"name\" : \"Title\", \"nodename\" : \"TITLE\"},\n{\"name\" : \"Country\", \"nodename\" : \"COUNTRY\"}\n]\n}\n}",
        "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<CATALOG>\n<CD>\n<TITLE>Empire Burlesque</TITLE>\n<ARTIST>Bob Dylan</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>Columbia</COMPANY>\n<PRICE>10.90</PRICE>\n<PUBLISHED>1985</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Hide your heart</TITLE>\n<ARTIST>Bonnie Tyler</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>CBS Records</COMPANY>\n<PRICE>9.90</PRICE>\n<PUBLISHED>1988</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Greatest Hits</TITLE>\n<ARTIST>Dolly Parton</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>RCA</COMPANY>\n<PRICE>9.90</PRICE>\n<PUBLISHED>1982</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Still got the blues</TITLE>\n<ARTIST>Gary Moore</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Virgin records</COMPANY>\n<PRICE>10.20</PRICE>\n<PUBLISHED>1990</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Eros</TITLE>\n<ARTIST>Eros Ramazzotti</ARTIST>\n<COUNTRY>EU</COUNTRY>\n<COMPANY>BMG</COMPANY>\n<PRICE>9.90</PRICE>\n<PUBLISHED>1997</PUBLISHED>\n</CD>\n<CD>\n<TITLE>One night only</TITLE>\n<ARTIST>Bee Gees</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Polydor</COMPANY>\n<PRICE>10.90</PRICE>\n<PUBLISHED>1998</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Sylvias Mother</TITLE>\n<ARTIST>Dr.Hook</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>CBS</COMPANY>\n<PRICE>8.10</PRICE>\n<PUBLISHED>1973</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Maggie May</TITLE>\n<ARTIST>Rod Stewart</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Pickwick</COMPANY>\n<PRICE>8.50</PRICE>\n<PUBLISHED>1990</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Romanza</TITLE>\n<ARTIST>Andrea Bocelli</ARTIST>\n<COUNTRY>EU</COUNTRY>\n<COMPANY>Polydor</COMPANY>\n<PRICE>10.80</PRICE>\n<PUBLISHED>1996</PUBLISHED>\n</CD>\n<CD>\n<TITLE>When a man loves a woman</TITLE>\n<ARTIST>Percy Sledge</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>Atlantic</COMPANY>\n<PRICE>8.70</PRICE>\n<PUBLISHED>1987</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Black angel</TITLE>\n<ARTIST>Savage Rose</ARTIST>\n<COUNTRY>EU</COUNTRY>\n<COMPANY>Mega</COMPANY>\n<PRICE>10.90</PRICE>\n<PUBLISHED>1995</PUBLISHED>\n</CD>\n<CD>\n<TITLE>1999 Grammy Nominees</TITLE>\n<ARTIST>Many</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>Grammy</COMPANY>\n<PRICE>10.20</PRICE>\n<PUBLISHED>1999</PUBLISHED>\n</CD>\n<CD>\n<TITLE>For the good times</TITLE>\n<ARTIST>Kenny Rogers</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Mucik Master</COMPANY>\n<PRICE>8.70</PRICE>\n<PUBLISHED>1995</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Big Willie style</TITLE>\n<ARTIST>Will Smith</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>Columbia</COMPANY>\n<PRICE>9.90</PRICE>\n<PUBLISHED>1997</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Tupelo Honey</TITLE>\n<ARTIST>Van Morrison</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Polydor</COMPANY>\n<PRICE>8.20</PRICE>\n<PUBLISHED>1971</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Soulsville</TITLE>\n<ARTIST>Jorn Hoel</ARTIST>\n<COUNTRY>Norway</COUNTRY>\n<COMPANY>WEA</COMPANY>\n<PRICE>7.90</PRICE>\n<PUBLISHED>1996</PUBLISHED>\n</CD>\n<CD>\n<TITLE>The very best of</TITLE>\n<ARTIST>Cat Stevens</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Island</COMPANY>\n<PRICE>8.90</PRICE>\n<PUBLISHED>1990</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Stop</TITLE>\n<ARTIST>Sam Brown</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>A and M</COMPANY>\n<PRICE>8.90</PRICE>\n<PUBLISHED>1988</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Bridge of Spies</TITLE>\n<ARTIST>T'Pau</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Siren</COMPANY>\n<PRICE>7.90</PRICE>\n<PUBLISHED>1987</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Private Dancer</TITLE>\n<ARTIST>Tina Turner</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>Capitol</COMPANY>\n<PRICE>8.90</PRICE>\n<PUBLISHED>1983</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Midt om natten</TITLE>\n<ARTIST>Kim Larsen</ARTIST>\n<COUNTRY>EU</COUNTRY>\n<COMPANY>Medley</COMPANY>\n<PRICE>7.80</PRICE>\n<PUBLISHED>1983</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Pavarotti Gala Concert</TITLE>\n<ARTIST>Luciano Pavarotti</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>DECCA</COMPANY>\n<PRICE>9.90</PRICE>\n<PUBLISHED>1991</PUBLISHED>\n</CD>\n<CD>\n<TITLE>The dock of the bay</TITLE>\n<ARTIST>Otis Redding</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>Atlantic</COMPANY>\n<PRICE>7.90</PRICE>\n<PUBLISHED>1987</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Picture book</TITLE>\n<ARTIST>Simply Red</ARTIST>\n<COUNTRY>EU</COUNTRY>\n<COMPANY>Elektra</COMPANY>\n<PRICE>7.20</PRICE>\n<PUBLISHED>1985</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Red</TITLE>\n<ARTIST>The Communards</ARTIST>\n<COUNTRY>UK</COUNTRY>\n<COMPANY>London</COMPANY>\n<PRICE>7.80</PRICE>\n<PUBLISHED>1987</PUBLISHED>\n</CD>\n<CD>\n<TITLE>Unchain my heart</TITLE>\n<ARTIST>Joe Cocker</ARTIST>\n<COUNTRY>USA</COUNTRY>\n<COMPANY>EMI</COMPANY>\n<PRICE>8.20</PRICE>\n<PUBLISHED>1987</PUBLISHED>\n</CD>\n</CATALOG>"
      ]
    },
    {
      "title": "AppML Case Study - JSON Files",
      "summary": "The HTML Page\nThis is the HTML source:\nThe Model\nThis is the model used in the application:\nModel\nREMOVE ADS\nThe File\nThis is the JSON file:\ncd_catalog.js",
      "examples": [
        "<<!DOCTYPE html>\n<html lang=\"en-US\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div class=\"w3-container\" appml-data=\"appml.php?model=model_cd_from_json\">\n<h1>CD Collection</h1>\n<h3>Extracted from a JSON text file</h3>\n\n<div appml-include-html=\"inc_listcommands_nofilter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th>Title</th>\n<th>Artist</th>\n<th>Price</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{Title}}</td>\n<td>{{Artist}}</td>\n<td>{{Price}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>",
        "{\n\"rowsperpage\" : 7,\n\"data\" : {\n\"type\" : \"jsonfile\",\n\"filename\" : \"cd_catalog.js\",\n\"record\" : \"cd\",\n\"items\" : [\n{\"name\" : \"Title\", \"nodename\" : \"title\"},\n{\"name\" : \"Artist\", \"nodename\" : \"artist\"},\n{\"name\" : \"Price\", \"nodename\" : \"price\"}\n]\n}\n}",
        "{\n\"cd\" : [\n{ \"title\" : \"Empire Burlesque\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.90\" },\n{ \"title\" : \"Hide your heart\", \"artist\" : \"Bonnie Tyler\", \"price\" : \"9.90\" },\n{ \"title\" : \"Greatest Hits\", \"artist\" : \"Dolly Parton\", \"price\" : \"9.90\" },\n{ \"title\" : \"Still got the blues\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.20\" },\n{ \"title\" : \"Eros\", \"artist\" : \"Eros Ramazzotti\", \"price\" : \"9.90\" },\n{ \"title\" : \"One night only\", \"artist\" : \"Bee Gees\", \"price\" : \"10.90\" },\n{ \"title\" : \"Sylvias Mother\", \"artist\" : \"Dr.Hook\", \"price\" : \"8.10\" },\n{ \"title\" : \"Maggie May\", \"artist\" : \"Rod Stewart\", \"price\" : \"8.50\" },\n{ \"title\" : \"Empire Burlesque\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.90\" },\n{ \"title\" : \"Hide your heart\", \"artist\" : \"Bonnie Tyler\", \"price\" : \"9.90\" },\n{ \"title\" : \"Greatest Hits\", \"artist\" : \"Dolly Parton\", \"price\" : \"9.90\" },\n{ \"title\" : \"Still got the blues\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.20\" },\n{ \"title\" : \"Eros\", \"artist\" : \"Eros Ramazzotti\", \"price\" : \"9.90\" },\n{ \"title\" : \"One night only\", \"artist\" : \"Bee Gees\", \"price\" : \"10.90\" },\n{ \"title\" : \"Sylvias Mother\", \"artist\" : \"Dr.Hook\", \"price\" : \"8.10\" },\n{ \"title\" : \"Maggie May\", \"artist\" : \"Rod Stewart\", \"price\" : \"8.50\" },\n{ \"title\" : \"Empire Burlesque\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.90\" },\n{ \"title\" : \"Hide your heart\", \"artist\" : \"Bonnie Tyler\", \"price\" : \"9.90\" },\n{ \"title\" : \"Greatest Hits\", \"artist\" : \"Dolly Parton\", \"price\" : \"9.90\" },\n{ \"title\" : \"Still got the blues\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.20\" },\n{ \"title\" : \"Eros\", \"artist\" : \"Eros Ramazzotti\", \"price\" : \"9.90\" },\n{ \"title\" : \"One night only\", \"artist\" : \"Bee Gees\", \"price\" : \"10.90\" },\n{ \"title\" : \"Sylvias Mother\", \"artist\" : \"Dr.Hook\", \"price\" : \"8.10\" },\n{ \"title\" : \"Maggie May\", \"artist\" : \"Rod Stewart\", \"price\" : \"8.50\" },\n{ \"title\" : \"Empire Burlesque\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.90\" },\n{ \"title\" : \"Hide your heart\", \"artist\" : \"Bonnie Tyler\", \"price\" : \"9.90\" },\n{ \"title\" : \"Greatest Hits\", \"artist\" : \"Dolly Parton\", \"price\" : \"9.90\" },\n{ \"title\" : \"Still got the blues\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.20\" },\n{ \"title\" : \"Eros\", \"artist\" : \"Eros Ramazzotti\", \"price\" : \"9.90\" },\n{ \"title\" : \"One night only\", \"artist\" : \"Bee Gees\", \"price\" : \"10.90\" },\n{ \"title\" : \"Sylvias Mother\", \"artist\" : \"Dr.Hook\", \"price\" : \"8.10\" },\n{ \"title\" : \"Maggie May\", \"artist\" : \"Rod Stewart\", \"price\" : \"8.50\" },\n{ \"title\" : \"Empire Burlesque\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.90\" },\n{ \"title\" : \"Hide your heart\", \"artist\" : \"Bonnie Tyler\", \"price\" : \"9.90\" },\n{ \"title\" : \"Greatest Hits\", \"artist\" : \"Dolly Parton\", \"price\" : \"9.90\" },\n{ \"title\" : \"Still got the blues\", \"artist\" : \"Bob Dylan\", \"price\" : \"10.20\" },\n{ \"title\" : \"Eros\", \"artist\" : \"Eros Ramazzotti\", \"price\" : \"9.90\" },\n{ \"title\" : \"One night only\", \"artist\" : \"Bee Gees\", \"price\" : \"10.90\" },\n{ \"title\" : \"Sylvias Mother\", \"artist\" : \"Dr.Hook\", \"price\" : \"8.10\" },\n{ \"title\" : \"Maggie May\", \"artist\" : \"Rod Stewart\", \"price\" : \"8.50\" }\n]\n}"
      ]
    },
    {
      "title": "AppML Case Study - Customers",
      "summary": "The HTML Page\nThis is the HTML source:\nREMOVE ADS\nModels\nThese are the models used in the application:\nList Model\nForm Model",
      "examples": [
        "<!DOCTYPE html>\n<html>\n<head>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container w3-content\">\n<h1>Customers</h1>\n\n<div class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" appml-data=\"appml.php?model=model_customersform\" appml-controller=\"myFormController\" id=\"Form01\" style=\"display:none;\">\n<div appml-include-html=\"inc_formcommands.htm\"></div>\n<p>\n<label>CustomerName:</label>\n<input id=\"customername\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>ContactName:</label>\n<input id=\"contactname\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Address:</label>\n<input id=\"address\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>City:</label>\n<input id=\"city\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>PostalCode:</label>\n<input id=\"postalcode\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Country:</label>\n<input id=\"country\" class=\"w3-input w3-border\">\n</p>\n</div>\n\n<div appml-data=\"appml.php?model=model_customerslist\">\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<div appml-include-html=\"inc_filter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th></th>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td style=\"cursor:pointer;width:40px;\" onclick=\"appml('Form01').run({{CustomerID}});\">&#9998;</td>\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n</div>\n\n<script>\nfunction myFormController($appml) {\nif ($appml.message == \"ready\") {return -1; }\nif ($appml.message == \"loaded\") {\ndocument.getElementById(\"Form01\").style.display = \"\";\n}\n}\n</script>\n\n</body>\n</html>",
        "{\n\"rowsperpage\" : 10,\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Customers\",\n\"orderby\" : \"CustomerName\"\n},\n\"filteritems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n],\n\"sortitems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n]\n}",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"maintable\" : \"Customers\",\n\"keyfield\" : \"CustomerID\",\n\"sql\" : \"SELECT * FROM Customers\"\n},\n\"updateItems\" : [\n{\"item\" : \"CustomerName\"},\n{\"item\" : \"Address\"},\n{\"item\" : \"PostalCode\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n]\n}"
      ]
    },
    {
      "title": "AppML Case Study - Products",
      "summary": "The HTML Page\nThis is the HTML source:\nREMOVE ADS\nModels\nThese are the models used in the application:\nList Model\nForm Model",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n<meta charset=\"utf-8\">\n<title>Products</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container w3-content\">\n<h1>Products</h1>\n\n<div id=\"Form01\" class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" style=\"display:none;\" appml-controller=\"myFormController\">\n<div appml-include-html=\"inc_formcommands.htm\"></div>\n<p>\n<label>ProductName:</label>\n<input id=\"ProductName\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Supplier:</label>\n<div appml-data=\"appml.php?model=model_dropdown_suppliers\">\n<select id=\"SupplierID\" class=\"w3-select w3-border\">\n<option appml-repeat=\"records\" value=\"{{SupplierID}}\">{{SupplierName}}</option>\n</select>\n</div>\n</p>\n<p>\n<label>Category:</label>\n<div appml-data=\"appml.php?model=model_dropdown_categories\">\n<select id=\"CategoryID\" class=\"w3-select w3-border\">\n<option appml-repeat=\"records\" value=\"{{CategoryID}}\">{{CategoryName}}</option>\n</select>\n</div>\n</p>\n<p>\n<label>Unit:</label>\n<input id=\"Unit\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Price:</label>\n<input id=\"Price\" onchange=\"myValidator(this)\" class=\"w3-input w3-border\">\n</p>\n</div>\n\n<div appml-data=\"appml.php?model=model_productslist\" appml-controller=\"myListController\">\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<div appml-include-html=\"inc_productsquery.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th></th>\n<th>Product Name</th>\n<th>Category</th>\n<th>Supplier</th>\n<th>Price</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td style=\"cursor:pointer\" onclick=\"appml('Form01').run({{ProductID}})\">&#9998;</td>\n<td>{{ProductName}}</td>\n<td>{{CategoryName}}</td>\n<td>{{SupplierName}}</td>\n<td>{{Price}}</td>\n</tr>\n</table>\n</div>\n<h3 id=\"sumprice\"></h3>\n</div>\n\n<script>\nfunction myValidator(item) {\nvar obj = appml(\"Form01\");\nobj.message = \"validate\";\nobj.validate = {};\nobj.validate.item = item.id;\nobj.validate.value = item.value;\nmyFormController(obj);\n}\n\nfunction myListController($appml) {\nif ($appml.message == \"done\") {\nvar i, x, tot = 0;\nx = $appml.data.records;\nfor (i = 0; i < x.length; i++) {\ntot += Number(x[i].Price);\n}\ndocument.getElementById(\"sumprice\").innerHTML = x.length + \" products. Total price: $\" + tot.toFixed(2);\n}\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"ProductName\") {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}\n\nfunction myFormController($appml) {\nif ($appml.message == \"ready\") {\n$appml.appName = \"Form01\";\n$appml.dataSource = \"appml.php?model=model_productsform\";\nreturn -1;\n}\nif ($appml.message == \"loaded\") {\ndocument.getElementById(\"Form01\").style.display = \"\";\n}\nif ($appml.message == \"submit\") {\nif (isNaN(document.getElementById(\"Price\").value)) {\n$appml.setError(15, \"Price must be a number\");\nreturn -1;\n}\n}\nif ($appml.message == \"validate\") {\nif ($appml.validate.item == \"Price\") {\nif (isNaN($appml.validate.value)) {\n$appml.setError(15, \"Price must be a number\");\nreturn;\n}\n}\n}\n}\n</script>\n</body>\n</html>",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT ProductID,ProductName,CategoryName,SupplierName,Price FROM ((Products LEFT JOIN Suppliers ON Products.SupplierID=Suppliers.SupplierID) LEFT JOIN Categories ON Products.CategoryID=Categories.CategoryID)\",\n\"orderby\" : \"ProductName\"\n},\n\"filteritems\" : [\n{\"item\" : \"ProductName\", \"label\" : \"Name\"},\n{\"item\" : \"Products.SupplierID\", \"type\" : \"number\", \"hidden\" : \"true\"},\n{\"item\" : \"Suppliers.SupplierID\", \"label\" : \"Supplier\"},\n{\"item\" : \"Categories.CategoryID\", \"label\" : \"Category\"}\n],\n\"sortitems\" : [\n{\"item\" : \"ProductName\"}\n]",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Products\",\n\"maintable\" : \"Products\",\n\"keyfield\" : \"ProductID\"\n},\n\"updateItems\" : [\n{\"item\" : \"ProductName\"},\n{\"item\" : \"SupplierID\"},\n{\"item\" : \"CategoryID\"},\n{\"item\" : \"Unit\"},\n{\"item\" : \"Price\"}\n]\n}"
      ]
    },
    {
      "title": "AppML Case Study - Suppliers",
      "summary": "The HTML Page\nThis is the HTML source:\nREMOVE ADS\nModels\nThese are the models used in the application:\nList Model\nForm Model",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n<meta charset=\"utf-8\">\n<title>Suppliers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container w3-content\">\n<h1>Suppliers</h1>\n\n<div id=\"Form01\" class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" appml-data=\"appml.php?model=model_suppliersform\" appml-controller=\"myFormController\" style=\"display:none;\">\n<div appml-include-html=\"inc_formcommands.htm\"></div>\n<p>\n<label>SupplierID:</label>\n<input id=\"SupplierID\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>SupplierName:</label>\n<input id=\"SupplierName\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>ContactName:</label>\n<input id=\"ContactName\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Address:</label>\n<input id=\"Address\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>PostalCode:</label>\n<input id=\"PostalCode\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>City:</label>\n<input id=\"City\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Country:</label>\n<input id=\"Country\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Phone:</label>\n<input id=\"Phone\" class=\"w3-input w3-border\">\n</p>\n</div>\n\n<div appml-data=\"appml.php?model=model_supplierslist\">\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<div appml-include-html=\"inc_filter.htm\"></div>\n<div class=\"w3-responsive\">\n<table class=\"w3-table-all\">\n<tr>\n<th></th>\n<th>Supplier</th>\n<th>City</th>\n<th>Country</th>\n<th></th>\n</tr>\n<tr appml-repeat=\"records\">\n<td style=\"cursor:pointer\" onclick=\"appml('Form01').run({{SupplierID}})\">&#9998;</td>\n<td>{{SupplierName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n<td><a href='' onclick=\"openProducts({{SupplierID}});return false;\">Products</a></td>\n</tr>\n</table>\n</div>\n</div>\n\n<div id=\"ProductsSection\" class=\"w3-container w3-light-grey\" appml-data=\"appml.php?model=model_productslist\" appml-controller=\"myProductsController\" style=\"display:none;padding:50px;margin-top:30px;\">\n<span onclick=\"document.getElementById('ProductsSection').style.display='none';\" class=\"w3-button w3-xxlarge w3-right\">&times;</span>\n<h2>{{records[0]['SupplierName']}}</h2>\n<div class=\"w3-responsive\">\n<table class=\"w3-table-all\">\n<tr>\n<th>Product</th>\n<th>Category</th>\n<th>Supplier</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{ProductName}}</td>\n<td>{{CategoryName}}</td>\n<td>{{SupplierName}}</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n\n<script>\nfunction openProducts(id) {\nappml(\"ProductsSection\").clearQuery();\nappml(\"ProductsSection\").setQuery(\"Products.SupplierID\", id);\nappml(\"ProductsSection\").run();\ndocument.getElementById(\"ProductsSection\").style.display = \"\";\n}\nfunction myFormController($appml) {\nif ($appml.message == \"ready\") {return -1;}\nif ($appml.message == \"loaded\") {\ndocument.getElementById(\"Form01\").style.display = \"\";\n}\n}\nfunction myProductsController($appml) {\nif ($appml.message == \"ready\") {return -1;}\n}\n</script>\n</body>\n</html>",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Suppliers\",\n\"orderby\" : \"SupplierName\"\n},\n\"filteritems\" : [\n{\"item\" : \"SupplierName\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n],\n\"sortitems\" : [\n{\"item\" : \"SupplierName\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n],\n\"rowsperpage\" : 10\n}",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Suppliers\",\n\"maintable\" : \"Suppliers\",\n\"keyfield\" : \"SupplierID\"\n},\n\"updateItems\" : [\n{\"item\" : \"SupplierID\"},\n{\"item\" : \"SupplierName\"},\n{\"item\" : \"ContactName\"},\n{\"item\" : \"Address\"},\n{\"item\" : \"PostalCode\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"},\n{\"item\" : \"Phone\"}\n]\n}"
      ]
    },
    {
      "title": "AppML Case Study - Shippers",
      "summary": "The HTML Page\nThis is the HTML source:\nREMOVE ADS\nModels\nThese are the models used in the application:\nList Model\nForm Model",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n<meta charset=\"utf-8\">\n<title>Shippers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container w3-content\">\n<h1>Shippers</h1>\n\n<div id=\"Form01\" class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" appml-data=\"appml.php?model=model_shippersform\" appml-controller=\"myFormController\" style=\"display:none;\">\n<div appml-include-html=\"inc_formcommands.htm\"></div>\n<p>\n<label>ShipperName:</label>\n<input id=\"ShipperName\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Phone:</label>\n<input id=\"Phone\" class=\"w3-input w3-border\">\n</p>\n</div>\n\n<div appml-data=\"appml.php?model=model_shipperslist\">\n<div appml-include-html=\"inc_listcommands_nofilter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th></th>\n<th>Shipper</th>\n<th>Phone</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td style=\"cursor:pointer\" onclick=\"appml('Form01').run({{ShipperID}})\">&#9998;</td>\n<td>{{ShipperName}}</td>\n<td>{{Phone}}</td>\n</tr>\n</table>\n</div>\n</div>\n\n<script>\nfunction myFormController($appml) {\nif ($appml.message == \"ready\") {return -1;}\nif ($appml.message == \"loaded\") {\ndocument.getElementById(\"Form01\").style.display = \"\";\n}\n}\n</script>\n</body>\n</html>",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Shippers\"\n}\n}",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Shippers\",\n\"maintable\" : \"Shippers\",\n\"keyfield\" : \"ShipperID\"\n},\n\"updateItems\" : [\n{\"item\" : \"ShipperName\"},\n{\"item\" : \"Phone\"}\n]\n}"
      ]
    },
    {
      "title": "AppML Case Study - Categories",
      "summary": "The HTML Page\nThis is the HTML source:\nREMOVE ADS\nModels\nThese are the models used in the application:\nList Model\nForm Model",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n<meta charset=\"utf-8\">\n<title>Categories</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container w3-content\">\n<h1>Categories</h1>\n<div id=\"Form01\" class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" appml-data=\"appml.php?model=model_categoriesform\" appml-controller=\"myFormController\" style=\"display:none;\">\n<div appml-include-html=\"inc_formcommands.htm\"></div>\n<p>\n<label>CategoryName:</label>\n<input id=\"CategoryName\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Description:</label>\n<input id=\"Description\" class=\"w3-input w3-border\">\n</p>\n</div>\n\n<div appml-data=\"appml.php?model=model_categorieslist\">\n<div appml-include-html=\"inc_listcommands_nofilter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th></th>\n<th>Category</th>\n<th>Description</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td style=\"cursor:pointer\" onclick=\"appml('Form01').run({{CategoryID}})\">&#9998;</td>\n<td>{{CategoryName}}</td>\n<td>{{Description}}</td>\n</tr>\n</table>\n</div>\n</div>\n\n<script>\nfunction myFormController($appml) {\nif ($appml.message == \"ready\") {return -1;}\nif ($appml.message == \"loaded\") {\ndocument.getElementById(\"Form01\").style.display = \"\";\n}\n}\n</script>\n\n</body>\n</html>",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Categories\"\n}\n}",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Categories\",\n\"maintable\" : \"Categories\",\n\"keyfield\" : \"CategoryID\"\n},\n\"updateItems\" : [\n{\"item\" : \"CategoryName\"},\n{\"item\" : \"Description\"}\n]\n}"
      ]
    },
    {
      "title": "AppML Case Study - Employees",
      "summary": "The HTML Page\nThis is the HTML source:\nREMOVE ADS\nModels\nThese are the models used in the application:\nList Model\nForm Model",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n<meta charset=\"utf-8\">\n<title>Employees</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container w3-content\">\n<h1>Employees</h1>\n<div id=\"Form01\" class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" appml-data=\"appml.php?model=model_employeesform\" appml-controller=\"myFormController\" style=\"display:none;\">\n<div appml-include-html=\"inc_formcommands.htm\"></div>\n<p>\n<label>Last Name:</label>\n<input id=\"LastName\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>First Name:</label>\n<input id=\"FirstName\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Date of Birth:</label>\n<input id=\"BirthDate\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Photo:</label>\n<input id=\"Photo\" class=\"w3-input w3-border\">\n</p>\n<p>\n<label>Notes:</label>\n<input id=\"Notes\" class=\"w3-input w3-border\">\n</p>\n</div>\n\n<div appml-data=\"appml.php?model=model_employeeslist\">\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<div appml-include-html=\"inc_filter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th></th>\n<th>Last Name</th>\n<th>First Name</th>\n<th>Date of Birth</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td style=\"cursor:pointer\" onclick=\"appml('Form01').run({{EmployeeID}})\">&#9998;</td>\n<td>{{LastName}}</td>\n<td>{{FirstName}}</td>\n<td>{{BirthDate}}</td>\n</tr>\n</table>\n</div>\n</div>\n\n<script>\nfunction myFormController($appml) {\nif ($appml.message == \"ready\") {return -1;}\nif ($appml.message == \"loaded\") {\ndocument.getElementById(\"Form01\").style.display = \"\";\n}\n}\n</script>\n\n</body>\n</html>",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Employees\",\n\"orderby\" : \"LastName\"\n},\n\"filteritems\" : [\n{\"item\" : \"LastName\"},\n{\"item\" : \"FirstName\"}\n],\n\"sortitems\" : [\n{\"item\" : \"LastName\"},\n{\"item\" : \"FirstName\"}\n]\n}",
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Employees\",\n\"maintable\" : \"Employees\",\n\"keyfield\" : \"EmployeeID\"\n},\n\"updateItems\" : [\n{\"item\" : \"LastName\"},\n{\"item\" : \"FirstName\"},\n{\"item\" : \"BirthDate\"},\n{\"item\" : \"Photo\"},\n{\"item\" : \"Notes\"}\n]\n}"
      ]
    },
    {
      "title": "The AppML Client",
      "summary": "In the following chapters, we will build a web application in the web browser.\nAppML Client\nThe AppML client is a JavaScript that runs in any web browser.\nIt can easily be added to any HTML page with a single line of code:\nThe AppML client lets you add external data to any HTML element, using HTML attributes:\nIt has a built in function for displaying data anywhere in the HTML:\n{{ ... }} Are placeholders for AppML data.\nIt also has built in functions for repeating HTML elements, using any array found in the data:\nThe AppML client will not interfere with the existing HTML or CSS.\nIt works well with any existing CSS. We have used W3.CSS in our examples.\nAppML Web Applications\nAppML is extremely efficient for building web applications.\nOne of the most powerful features is the ability to develop prototype applications in the web browser, including database CRUD applications, without the need of any web server.\nCRUD: Create, Read, Update, Delete.\nAppML Server\nAppML comes with two server scripts (PHP and .NET) designed to provide server data.\nWith AppML server scripts, you can easily access SQL databases, like mySQL and SQL server.\nThe server scripts are very powerful, and can easily be installed on any PHP or .NET server.\nAppML Web SQL\nIn addition, for rapid application development and prototyping, AppML can also simulate a web server in the browser, using Web SQL.\nWeb SQL is a web page API for storing data in the browser using SQL. The API is supported by Google Chrome, Opera, Safari, and the Android Browser.\nJust add the following script to your web page:",
      "examples": [
        "<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>",
        "<table appml-data=\"customers.js\">",
        "<td>{{CustomerName}}</td>",
        "<tr appml-repeat=\"records\">\n..\n.\n</tr>",
        "<script src=\"https://www.w3schools.com/appml/2.0.3/appml_sql.js\"></script>"
      ]
    },
    {
      "title": "AppML Prototype",
      "summary": "In this chapter, we will build a prototype for a web application.\nCreate an HTML Prototype\nFirst, create a decent HTML prototype, using your favorite CSS.\nWe have used W3.CSS in this example:\nExample\n{{ ... }} Are placeholders for future data.\nAdd AppML\nAfter you have created an HTML prototype, you can add AppML:\nExample\nAdd AppML:\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\">\nAdd a local WebSQL database:\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml_sql.js\">\nDefine a data source:\nappml-data=\"customers.js\"\nDefine the HTML element to be repeated for each record in records:\nappml_repeat=\"records\"\nTo make it simple, start with local data like customers.js before connecting to a database.\nREMOVE ADS\nCreate an AppML Model\nTo be able to use a database, you will need an AppML database model:\nproto_customers.js\nIf you don't have a local database, you can use the AppML model to create a Web SQL database.\nTo create a table with a single record, use a model like this: proto_customers_single.js.\nCreating a local database does not work in IE or Firefox. Use Chrome or Safari.\nUse the model in your application. Change the data source to local?model=proto_customers_single:\nExample\nCreate a Local Database with Multiple Records\nTo create a table with multiple records, use a model like this: proto_customers_all.js.\nChange the data source to local?model=proto_customers_all\nExample\nAdd a Navigation Template\nSuppose you want all your applications to have a common navigation toolbar:\nCreate an HTML template for it:\ninc_listcommands.htm\nSave the template in a file with a proper name like \"inc_listcommands.htm\".\nInclude the template in your prototype with the attribute appml-include-html:\nExample",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n\n<body>\n\n<div class=\"w3-container\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr>\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>",
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml_sql.js\"></script>\n<body>\n\n<div class=\"w3-container\" appml-data=\"customers.js\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>",
        "{\n\"rowsperpage\" : 10,\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"Select * from Customers\",\n\"orderby\" : \"CustomerName\",\n}",
        "<div class=\"w3-container\" appml-data=\"local?model=proto_customers_single\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>",
        "<div class=\"w3-container\" appml-data=\"local?model=proto_customers_all\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>",
        "<div class=\"w3-bar w3-border w3-section\">\n<button class=\"w3-button\" id='appmlbtn_first'>&#10094;&#10094;</button>\n<button class=\"w3-button\" id='appmlbtn_previous'>&#10094;</button>\n<button class=\"w3-button w3-hover-none\" id='appmlbtn_text'></button>\n<button class=\"w3-button\" id='appmlbtn_next'>&#10095;</button>\n<button class=\"w3-button\" id='appmlbtn_last'>&#10095;&#10095;</button>\n<button class=\"w3-btn ws-green\" id='appmlbtn_query'>Filter</button>\n</div>\n\n<div id=\"appmlmessage\"></div>",
        "<div class=\"w3-container\" appml-data=\"local?model=proto_customers_all\">\n<h1>Customers</h1>\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>"
      ]
    },
    {
      "title": "AppML Lists",
      "summary": "In this chapter, we will list records from a database.\nThe examples on this page use a local SQL database.\nLocal SQL databases does not work in IE or Firefox. Use Chrome or Safari.\nCreate a New Model\nIn the previous chapter, you used a model to create a database.\nNow create a new model, including filter and sort definitions:\nmodel_customerslist.js\nUse the model in your application:\nExample\nREMOVE ADS\nCreate an HTML Filter Template\nCreate the HTML for your filters:\ninc_filter.htm\nSave the filter HTML in a file with a proper name like \"inc_filter.htm\".\nInclude the filter HTML in your prototype with appml-include-html:\nExample",
      "examples": [
        "{\n\"rowsperpage\" : 10,\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT * FROM Customers\",\n\"orderby\" : \"CustomerName\"\n},\n\"filteritems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n],\n\"sortitems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n]\n}",
        "<div appml-data=\"local?model=model_customerslist\">\n<h1>Customers</h1>\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>",
        "<div id=\"appml_filtercontainer\" class=\"w3-container w3-light-grey w3-section w3-padding-large\" style=\"display:none;\">\n<span id=\"appmlbtn_queryClose\" onclick=\"this.parentNode.style.display='none';\" class=\"w3-button w3-large w3-right\">&times;</span>\n<h2>Filter</h2>\n<div id=\"appml_filter\">\n<div appml-repeat=\"filteritems\">\n<div class=\"w3-row\">\n<div class=\"w3-col m4\">\n<label>{{label||item}}:</label>\n</div>\n<div class=\"w3-col m2\">\n<input id=\"appml_datatype_{{item}}\" type='hidden'>\n<select id=\"appml_operator_{{item}}\" class=\"w3-select w3-border\">\n<option value=\"0\">=</option>\n<option value=\"1\">&lt;&gt;</option>\n<option value=\"2\">&lt;</option>\n<option value=\"3\">&gt;</option>\n<option value=\"4\">&lt;=</option>\n<option value=\"5\">&gt;=</option>\n<option value=\"6\">%</option>\n</select>\n</div>\n<div class=\"w3-col m6\">\n<input id=\"appml_query_{{item}}\" class=\"w3-input w3-border\">\n</div>\n</div>\n</div>\n</div>\n<div id=\"appml_orderby\">\n<h2>Order By</h2>\n<div class=\"w3-row\">\n<div class=\"w3-col m5\">\n<select id='appml_orderselect' class=\"w3-select w3-border\">\n<option value=''></option>\n<option appml-repeat=\"sortitems\" value=\"{{item}}\">{{label || item}}</option>\n</select>\n</div>\n<div class=\"w3-col m7\">\nASC <input type='radio' id=\"appml_orderdirection_asc\" name='appml_orderdirection' value='asc' class=\"w3-radio\">\nDESC <input type='radio' id=\"appml_orderdirection_desc\" name='appml_orderdirection' value='desc' class=\"w3-radio\">\n</div>\n</div>\n</div>\n<br>\n<button id=\"appmlbtn_queryOK\" type=\"button\" class=\"w3-btn w3-green\">OK</button>\n</div>",
        "<div appml-data=\"local?model=model_customerslist\">\n<h1>Customers</h1>\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<div appml-include-html=\"inc_filter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>"
      ]
    },
    {
      "title": "AppML Forms",
      "summary": "This chapter demonstrates how to construct an input form against a database.\nThe examples on this page use a local SQL database.\nLocal SQL databases does not work in IE or Firefox. Use Chrome or Safari.\nCreate a Form Model\nmodel_customersform.js\nCreate an HTML Form\nIn the previous chapter, you created an application for listing records from a database.\nNow add a form application to the page:\nHTML Form\nHTML Form Explained\nappml-data=\"local?model=model_customersform\" defines the AppML application for the form.\nREMOVE ADS\nCreate HTML Form Commands\nUse your favorite style sheet (we use bootstrap), and create your wanted form commands:\ninc_formcommands.htm\nInclude the Form Commands\nInclude the form commands in in your form:\nHTML Form\nAdd a Clickable Column to the Table\nIn the previous chapter, you created an application for listing records from a database.\nNow add a new column to the table:\nHTML Source\nThe onclick event (in the new column) triggers a call to run an AppML application located in the HTML element with id=\"Form01\":\nappml('Form01') returns the AppML application\nrun({{CustomerID}}) runs the applications with CustomerID as parameter.\nFinally, Hide the Form\nAdd a style to the form to make it invisible:\nHTML\nAdd a controller to the form, to display the form only when it is loaded and ready to display data:\nController",
      "examples": [
        "{\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"maintable\" : \"Customers\",\n\"keyfield\" : \"CustomerID\",\n\"sql\" : \"SELECT * FROM Customers\"},\n\"updateItems\" : [\n{\"item\" : \"CustomerName\"},\n{\"item\" : \"Address\"},\n{\"item\" : \"PostalCode\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}]\n}",
        "<div id=\"Form01\" class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" appml-data=\"local?model=model_customersform\">\n\n<p>\n<label for=\"customername\">Customer:</label>\n<input id=\"customername\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"address\">Address:</label>\n<input id=\"address\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"city\">City:</label>\n<input id=\"city\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"postalcode\">Postal Code:</label>\n<input id=\"postalcode\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"country\">Country:</label>\n<input id=\"country\" class=\"w3-input w3-border\">\n</p>\n\n</div>",
        "<span onclick=\"document.getElementById('Form01').style.display='none'\" class=\"w3-button w3-xlarge w3-right\">&times;</span>\n\n<div class=\"w3-bar w3-border w3-white\">\n<button onclick=\"appml('Form01').newRecord();\" class=\"w3-btn\">New</button>\n<button onclick=\"appml('Form01').saveRecord();\" class=\"w3-btn w3-green\">Save</button>\n<button onclick=\"appml('Form01').deleteRecord();\" class=\"w3-btn\">Delete</button>\n</div>\n\n<div id=\"appmlmessage\" class=\"w3-container w3-pale-yellow w3-padding\" style=\"display:none;\">\n<span onclick=\"this.parentNode.style.display='none';\" class=\"w3-button w3-xlarge w3-right\">&times;</span>\n<div id=\"message\"></div>\n</div>",
        "<div id=\"Form01\" class=\"w3-container w3-light-grey w3-padding-large w3-margin-bottom\" appml-data=\"local?model=model_customersform\">\n\n<div appml-include-html=\"inc_formcommands.htm\"></div>\n\n<p>\n<label for=\"customername\">Customer:</label>\n<input id=\"customername\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"address\">Address:</label>\n<input id=\"address\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"city\">City:</label>\n<input id=\"city\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"postalcode\">Postal Code:</label>\n<input id=\"postalcode\" class=\"w3-input w3-border\">\n</p>\n\n<p>\n<label for=\"country\">Country:</label>\n<input id=\"country\" class=\"w3-input w3-border\">\n</p>\n\n</div>",
        "<div appml-data=\"local?model=model_customerslist\">\n\n<h1>Customers</h1>\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<div appml-include-html=\"inc_filter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th></th>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td style=\"cursor:pointer;width:34px;\" onclick=\"appml('Form01').run({{CustomerID}})\">&#9998;</td>\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\n</div>",
        "<div id=\"Form01\" appml-data=\"local?model=model_customersform\"\nappml-controller=\"myFormController\"\nclass=\"jumbotron\" style=\"display:none\">",
        "<script>\nfunction myFormController($appml) {\nif ($appml.message == \"ready\") {return -1;}\nif ($appml.message == \"loaded\") {\ndocument.getElementById(\"Form01\").style.display=\"\";\n}\n}\n</script>"
      ]
    },
    {
      "title": "AppML Database",
      "summary": "Create Your Own Web SQL Database\nWith the small utility below, you can use AppML to create your own Web SQL database.\nWrite your own SQL, or use the buttons to import existing SQL.\nWebSQL only works in Chrome and Safari.\nCustomers Products Suppliers Shippers Categories Employees Orders\nRun SQL",
      "examples": []
    },
    {
      "title": "AppML PHP",
      "summary": "If you have access to a PHP server, follow the instructions below to create an AppML server application.\nCreate a Test Page\nCreate a test page and save on your PHP server as customers.htm (or anything you like):\ncustomers.htm\nTest the web page in your browser.\nREMOVE ADS\nCreate a Database Connection\nIf you have access to a Database, follow the instructions below to create an AppML database connection.\nDefine a database connection, and save it on the server as appml_config.php:\nappml_config.php\nThe connection above is not real. Names and passwords are examples.\nConfiguration File Explained:\nCopy AppML\nDownload the file: https://www.w3schools.com/appml/2.0.3/appml.php.txt.\nCopy the file to your web site. Rename it to appml.php.\nCreate a Database Table\nCreate a model for creating a Customers table in the database. Save it as create_customers.js:\ncreate_customers.js\nCreate an HTML page for running the create_customers.js model:\ncreate_customers.htm\nRun the HTML page in your browser.\nCreate an Application Model\nCreate a model for the customers application. Save it as model_customers.js:\nmodel_customers.js\nCreate an HTML page for running the customers application:\ncustomers.htm\nRun the HTML in your browser.",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n</head>\n<body>\n\n<div class=\"w3-container\" appml-data=\"customers\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}} </td>\n<td>{{Country}} </td>\n</tr>\n</table>\n</div>\n\n<script>\nvar customers = {\n\"records\":[\n{\"CustomerName\":\"Alfreds Futterkiste\",\"City\":\"Berlin\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Ana Trujillo Emparedados y helados\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Antonio Moreno Taquería\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Around the Horn\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"B's Beverages\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"Berglunds snabbköp\",\"City\":\"Luleå\",\"Country\":\"Sweden\"},\n{\"CustomerName\":\"Blauer See Delikatessen\",\"City\":\"Mannheim\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Blondel père et fils\",\"City\":\"Strasbourg\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bólido Comidas preparadas\",\"City\":\"Madrid\",\"Country\":\"Spain\"},\n{\"CustomerName\":\"Bon app'\",\"City\":\"Marseille\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bottom-Dollar Marketse\",\"City\":\"Tsawassen\",\"Country\":\"Canada\"},\n{\"CustomerName\":\"Cactus Comidas para llevar\",\"City\":\"Buenos Aires\",\"Country\":\"Argentina\"},\n{\"CustomerName\":\"Centro comercial Moctezuma\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Chop-suey Chinese\",\"City\":\"Bern\",\"Country\":\"Switzerland\"},\n{\"CustomerName\":\"Comércio Mineiro\",\"City\":\"São Paulo\",\"Country\":\"Brazil\"}\n]};\n</script>\n\n</body>\n</html>",
        "<?php echo(\"Access Forbidden\");exit();?>\n{\n\"dateformat\" : \"yyyy-mm-dd\",\n\"databases\" : [{\n\"connection\" : \"mydatabase\",\n\"host\" : \"localhost\",\n\"dbname\" : \"DemoDB\",\n\"username\" : \"DemoDBUkbn5\",\n\"password\" : \"l6|U6=V(*T+P\"\n}]\n}",
        "{\n\"database\" : {\n\"connection\" : \"mydatabase\",\n\"execute\" : [\n\"DROP TABLE IF EXISTS Customers\",\n\"CREATE TABLE IF NOT EXISTS Customers (CustomerID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,(CustomerID),CustomerName NVARCHAR(255),ContactName NVARCHAR(255),Address NVARCHAR(255),City NVARCHAR(255),PostalCode NVARCHAR(255),Country NVARCHAR(255))\",\n\"INSERT INTO Customers(CustomerName,ContactName,Address,City,PostalCode,Country)VALUES (\\\"Alfreds Futterkiste\\\",\\\"Maria Anders\\\",\\\"Obere Str. 57\\\",\\\"Berlin\\\",\\\"12209\\\",\\\"Germany\\\")\",\n\"INSERT INTO Customers(CustomerName,ContactName,Address,City,PostalCode,Country)VALUES (\\\"Around the Horn\\\",\\\"Thomas Hardy\\\",\\\"120 Hanover Sq.\\\",\\\"London\\\",\\\"WA1 1DP\\\",\\\"UK\\\")\",\n\"INSERT INTO Customers(CustomerName,ContactName,Address,City,PostalCode,Country)VALUES (\\\"Blauer See Delikatessen\\\",\\\"Hanna Moos\\\",\\\"Forsterstr. 57\\\",\\\"Mannheim\\\",\\\"68306\\\",\\\"Germany\\\")\"\n]\n}}",
        "<!DOCTYPE html>\n<html>\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div appml-data=\"appml.php?model=create_customers\"></div>\n\n</body>\n</html>",
        "{\n\"rowsperpage\" : 10,\n\"database\" : {\n\"connection\" : \"mydatabase\",\n\"sql\" : \"SELECT * FROM Customers\",\n\"orderby\" : \"CustomerName\"\n}\n}",
        "<!DOCTYPE html>\n<html lang=\"en\">\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div class=\"w3-container\" appml-data=\"appml.php?model=model_customers\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>"
      ]
    },
    {
      "title": "AppML .NET",
      "summary": "If you have access to a .NET server, follow the instructions below to create an AppML server application.\nCreate a Test Page\nCreate a test page and save on your PHP server as customers.htm (or anything you like):\ncustomers.htm\nTest the web page in your browser.\nREMOVE ADS\nCreate a Database Connection\nIf you have access to an SQL Server database, or any other OLEDB databases (like MS Acess) define the database connections, and save it on the server as appml_config.aspx:\nappml_config.aspx (SQL Server Example)\nappml_config.aspx (MS Access Example)\nThe connection above is not real. Names and passwords are examples.\nConfiguration File Explained:\nCopy AppML\nDownload the file: https://www.w3schools.com/appml/2.0.3/appml.aspx.txt.\nCopy the file to your web site. Rename it to appml.aspx.\nCreate a Database Table\nCreate a model for creating a Customers table in the database.\ncreate_customers.js\nCreate an HTML page for running the create_customers.js model:\ncreate_customers.htm\nRun the HTML page in your browser.\nCreate an Application\nCreate a model for the customers application. Save it as customers.js:\ncustomers.js\nCreate an HTML page for running the customers application:\ncustomers.htm\nRun the HTML in your browser.",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en\">\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div class=\"w3-container\" appml-data=\"customers\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}} </td>\n<td>{{Country}} </td>\n</tr>\n</table>\n</div>\n\n<script>\nvar customers = {\n\"records\":[\n{\"CustomerName\":\"Alfreds Futterkiste\",\"City\":\"Berlin\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Ana Trujillo Emparedados y helados\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Antonio Moreno Taquería\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Around the Horn\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"B's Beverages\",\"City\":\"London\",\"Country\":\"UK\"},\n{\"CustomerName\":\"Berglunds snabbköp\",\"City\":\"Luleå\",\"Country\":\"Sweden\"},\n{\"CustomerName\":\"Blauer See Delikatessen\",\"City\":\"Mannheim\",\"Country\":\"Germany\"},\n{\"CustomerName\":\"Blondel père et fils\",\"City\":\"Strasbourg\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bólido Comidas preparadas\",\"City\":\"Madrid\",\"Country\":\"Spain\"},\n{\"CustomerName\":\"Bon app'\",\"City\":\"Marseille\",\"Country\":\"France\"},\n{\"CustomerName\":\"Bottom-Dollar Marketse\",\"City\":\"Tsawassen\",\"Country\":\"Canada\"},\n{\"CustomerName\":\"Cactus Comidas para llevar\",\"City\":\"Buenos Aires\",\"Country\":\"Argentina\"},\n{\"CustomerName\":\"Centro comercial Moctezuma\",\"City\":\"México D.F.\",\"Country\":\"Mexico\"},\n{\"CustomerName\":\"Chop-suey Chinese\",\"City\":\"Bern\",\"Country\":\"Switzerland\"},\n{\"CustomerName\":\"Comércio Mineiro\",\"City\":\"São Paulo\",\"Country\":\"Brazil\"}\n]};\n</script>\n\n</body>\n</html>",
        "<%\nResponse.write(\"Access Forbidden\")\nResponse.end\n%>\n{\n\"dateformat\" : \"yyyy-mm-dd\",\n\"databases\" : [{\n\"connection\" : \"mydatabase\",\n\"provider\"   : \"SQLOLEDB\",\n\"host\"       : \"myserver\",\n\"dbname\"     : \"DemoDB\",\n\"username\"   : \"DemoDBUkbn5\",\n\"password\"   : \"l6|U6=V(*T+P\"\n}]\n}",
        "<%\nResponse.write(\"Access Forbidden\")\nResponse.end\n%>\n{\n\"dateformat\" : \"yyyy-mm-dd\",\n\"databases\" : [{\n\"connection\" : \"mydatabase\",\n\"connectionstring\" :\n\"Provider=Microsoft.Jet.OLEDB.4.0;data source=C:\\\\database\\\\Northwind.mdb\"\n}]\n}",
        "{\n\"database\" : {\n\"connection\" : \"mydatabase\",\n\"execute\" : [\n\"DROP TABLE IF EXISTS Customers\",\n\"CREATE TABLE IF NOT EXISTS Customers (CustomerID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,(CustomerID),CustomerName NVARCHAR(255),ContactName NVARCHAR(255),Address NVARCHAR(255),City NVARCHAR(255),PostalCode NVARCHAR(255),Country NVARCHAR(255))\",\n\"INSERT INTO Customers(CustomerName,ContactName,Address,City,PostalCode,Country)VALUES (\\\"Alfreds Futterkiste\\\",\\\"Maria Anders\\\",\\\"Obere Str. 57\\\",\\\"Berlin\\\",\\\"12209\\\",\\\"Germany\\\")\",\n\"INSERT INTO Customers(CustomerName,ContactName,Address,City,PostalCode,Country)VALUES (\\\"Around the Horn\\\",\\\"Thomas Hardy\\\",\\\"120 Hanover Sq.\\\",\\\"London\\\",\\\"WA1 1DP\\\",\\\"UK\\\")\",\n\"INSERT INTO Customers(CustomerName,ContactName,Address,City,PostalCode,Country)VALUES (\\\"Blauer See Delikatessen\\\",\\\"Hanna Moos\\\",\\\"Forsterstr. 57\\\",\\\"Mannheim\\\",\\\"68306\\\",\\\"Germany\\\")\"\n]\n}}",
        "<!DOCTYPE html>\n<html>\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div appml-data=\"appml.aspx?model=create_customers\"></div>\n\n</body>\n</html>",
        "{\n\"rowsperpage\" : 10,\n\"database\" : {\n\"connection\" : \"mydatabase\",\n\"sql\" : \"SELECT * FROM Customers\",\n\"orderby\" : \"CustomerName\"\n}\n}",
        "<!DOCTYPE html>\n<html lang=\"en\">\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div class=\"w3-container\" appml-data=\"appml.aspx?model=model_customers\">\n<h1>Customers</h1>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>"
      ]
    },
    {
      "title": "AppML using Google Cloud SQL",
      "summary": "Google Cloud SQL is a database cloud service.\nIt is easy to set up and manage.\nIt is FREE to try!\nWhat is Google Cloud SQL\nGoogle Cloud SQL is a cloud based database service.\nWhy use Google Cloud SQL?\nGoogle Cloud SQL offers MySQL databases deployed in the cloud without a fuss.\nGoogle offers powerful databases that run fast, and flexible charging (pay per use).\nGoogle manages automated backups, patching, and recovery.\nGetting Started\nBefore you can start using Google Cloud SQL, you need a Google account, and sign up for Google Developers Console.\nIf you do not have a Google account you can sign up for one here: Create your Google Account\nSign Up for Google Developers Console\nWhen you sign up for Google Developers Console, your Google account is automatically signed up for all services in Google Cloud, including SQL.\nIf you are a new Cloud Platform user, you can get started with a trial period for free.\nThe Cloud Platform free trial allows you to try Cloud SQL for free for 60 days. For more information, see Cloud Platform Free Trial.\nIf you decide to continue with Cloud Platform after your free period (or if you need more storage or performance than the free usage tier offers), you only pay for the resources you use.\nTo create an Google Developers Console account go to: https://console.developers.google.com/freetrial, and follow the on-screen instructions.\nCreate a MySQL Database Instance\nIn this example we will set up a Database instance running MySQL.\nCreate a MySQL DB instance:\nOnce you have created your account Google will automatically create a new project for you called \"My First Project\". In this example we will just use that project.\nIn the menu, click \"Storage\", and then \"Cloud SQL\"\nClick \"Create an instance\"\nOn the \"Create Cloud SQL instance\" page select a name, region and performance tier for your DB instance. In this example we will skip the advanced options.\nClick \"Create\"\nThe new DB instance appears in the list of DB instances (when it has the status \"Runnable\" it is ready for use)\nClick on the name of the instance, and click \"Access Control\" on the navigation pane\nClick \"IP address\" in the sub-navigation pane, and click the \"Request IPv4 address\" button\nKeep this IP address, as it will be the IP address you use to connect to your database\nClick \"Users\" in the sub-navigation pane, and click the \"New user\" button\nSpecify a username and password for your database\nClick \"Authorization\" in the sub-navigation pane, and click the \"+ Add item\" button under Allowed Networks\nHere you can specify who has access to your database, It can be:\nYour own IP, or the IP of your server. This way only you have access to your database\nor 0.0.0.0/0, which allows all external IP addresses to connect (this can be a security risk, and cause extra costs)\nYour own IP, or the IP of your server. This way only you have access to your database\nor 0.0.0.0/0, which allows all external IP addresses to connect (this can be a security risk, and cause extra costs)\nClick \"Save\"\nClick \"Databases\" in the navigation pane, and click the \"New database\" button\nSpecify a name for your database (you can leave the other options as they are unless you have specific requirements)\nNow you have a Google Cloud SQL database, with an IP that you can connect to.\nREMOVE ADS\nConfigure Database Connection in AppML\nTo configure the database connection, edit the appml_config file:\nPHP example: appml_config.php\nEdit the following:\nmydatabase - change to whatever you want the database connection to be called in your application\nyourDatabaseURL - change to the IP from the previous step, and add the port 3306 (like this 192.168.1.1:3306)\nyourDatabaseName - change to the name of your database instance in Google Cloud SQL\nyourUserName - change to the username you specified for your database in Google Cloud SQL\nyourPassword - change to the password you specified for your database in Google Cloud SQL\nAppML should now be configured to connect to your Google Cloud SQL database.\nYou can now fill your database with data:\nIf you have access to a PHP server, this is described in the AppML PHP chapter\nIf you have access to an ASP.NET server, this is described in the AppML .NET chapter",
      "examples": [
        "<?php echo(\"Access Forbidden\");exit();?>\n{\n\"dateformat\" : \"yyyy-mm-dd\",\n\"databases\" : [{\n\"connection\" : \"mydatabase\",\n\"host\" : \"yourDatabaseURL\",\n\"dbname\" : \"yourDatabaseName\",\n\"username\" : \"yourUserName\",\n\"password\" : \"yourPassword\"\n}]\n}"
      ]
    },
    {
      "title": "AppML using Amazon Database",
      "summary": "Amazon RDS is a database cloud service.\nIt is easy to set up and manage.\nIt is FREE to try!\nWhat is Amazon Relational Database Service (RDS)\nAmazon Relational Database Service (RDS) is a cloud based database service.\nWhy use Amazon RDS?\nAmazon RDS manages many of the challenges of running a database.\nWith Amazon RDS you can scale performance and storage as you need it.\nAmazon RDS manages automated backups, patching, and recovery.\nIt supports popular database products like:\nMySQL\nPostgreSQL\nOracle\nMicrosoft SQL Server\nand the new, MySQL-compatible Amazon Aurora DB engine\nGetting Started\nBefore you can start using RDS, you need to sign up for Amazon Web Services, and set up a database user and security group.\nSign Up for Amazon Web Services\nWhen you sign up for Amazon Web Services (AWS), your AWS account is automatically signed up for all services in AWS, including Amazon RDS.\nIf you are a new AWS customer, you can get started with Amazon RDS for free.\nThe AWS Free Tier is allows you to try AWS for free for 12 months after you sign up. For more information, see AWS Free Usage Tier.\nIf you decide to continue with AWS after your free period (or if you need more storage or performance than the free usage tier offers), you only pay for the resources you use.\nTo create an AWS account go to: https://aws.amazon.com/, and then click Sign Up.\nFollow the on-screen instructions. Note your AWS account number, because you'll need it later.\nCreate a MySQL Database Instance\nIn this example we will set up a free Database instance running MySQL. (This is free because it is intended for testing).\nCreate a MySQL DB instance:\nGo to Amazon RDS console: https://console.aws.amazon.com/rds/\nIn the navigation pane, click Instances.\nClick Launch DB Instance\nOn the Select Engine page, click the MySQL icon and then click Select for the MySQL DB engine\nOn the Production? page, click checkbox next to \"No, this instance is intended for use outside of production.......\", and then click Next Step\nOn the Specify DB Details page follow the instructions (follow these instructions for setting up a free test database)\nFor this option:\nTypical Input\nLicense Model\ngeneral-public-license\nDB Engine Version\nSelect the default version of MySQL\nDB Instance Class\nSelect db.t2.micro to select a configuration that is eligible for free test usage\nMulti-AZ Deployment\nSelect No\nStorage Type\nMagnetic (Standard)\nAllocated Storage\n5\nDB Instance Identifier\nType the name of your database instance (this is not the name of your database)\nMaster Username\nType the master username for your database\nMaster Password\nType the password for your master user\nConfirm Password\nConform the password\nOn the Configure Advanced Settings page follow the instructions (follow these instructions for setting up a free test database)\nFor this option:\nTypical Input\nVPC\nDefault VPC\nSubnet Group\ndefault\nPublicly Accessible\nYes\nAvailability Zone\nNo Preference\nVPC Security Group(s)\ndefault\nDatabase Name\nType the name of your database (in this example, we will show you how to create the northwind database we use for examples in the AppML tutorial)\nDatabase Port\n3306 (unless you need it to run on a specific port)\nDB Parameter Group\nKeep the default value\nOption Group\nKeep the default value\nEnable Encryption\nNo\nBackup Retention Period\n7\nBackup Window\nNo Preference\nAuto Minor Version Upgrade\nYes\nMaintenance Window\nNo Preference\nClick Launch DB Instance\nClick View Your DB Instances\nThe new DB instance appears in the list of DB instances (it will have a \"creating\" status until it is ready for use)\nWhen the status changes to \"available\", you can connect to the database\nClick the details icon to view details and copy the URL from \"Endpoint\", including the port\nThe Endpoint URL should look something like this:\nREMOVE ADS\nConfigure Database Connection in AppML\nTo configure the database connection, edit the appml_config file:\nPHP example: appml_config.php\nEdit the following:\nmydatabase - change to whatever you want the database connection to be called in your application\nyourDatabaseURL - change to the endpoint URL from the previous step\nyourDatabaseName - change to the name you specified for your database in Amazon RDS\nyourUserName - change to the username you specified for your database in Amazon RDS\nyourPassword - change to the password you specified for your database in Amazon RDS\nAppML should now be configured to connect to your Amazon RDS database.\nYou can now fill your database with data:\nIf you have access to a PHP server, this is described in the AppML PHP chapter\nIf you have access to an ASP.NET server, this is described in the AppML .NET chapter\nOptional: Create an IAM User for increased security\nAmazon RDS, require that you provide username and password when you access it.\nYou can access the account with your Amazon username, but for security purposes we recommend that you create an Identity and Access Management (IAM) user, for your database.\nFirst, create the Administrators group:\nSign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/iam/\nIn the menu, click Groups, then click Create New Group\nIn the Group Name box, type Administrators and then click Next Step\nIn the list of policies, select the check box next to the AdministratorAccess policy\nClick Next Step, then click Create Group\nThen create the IAM user, and add it to the Administrators group:\nIn the menu, click Users, then click Create New User\nIn box 1, enter a user name\nClear the check box next to \"Generate an access key for each user\", then click Create\nIn the list of users, click the name (not the check box) of the user you just created\nIn the Groups section, click Add User to Groups\nSelect the check box next to the Administrators group, then click Add to Groups\nScroll down to the Security Credentials section, and click Manage Password\nSelect Assign a custom password, then enter a password in the Password and Confirm Password boxes, click Apply\nTo sign in as this new IAM user, sign out of the AWS console, then use the following URL:\nLogin with IAM\nReplace your_aws_account_id with your AWS account number without the hyphens (if your account number is 1234-5678-9012, your AWS account ID is 123456789012)",
      "examples": [
        "databasename.aaabbbcccddd.region.rds.amazonaws.com:3306",
        "<?php echo(\"Access Forbidden\");exit();?>\n{\n\"dateformat\" : \"yyyy-mm-dd\",\n\"databases\" : [{\n\"connection\" : \"mydatabase\",\n\"host\" : \"yourDatabaseURL\",\n\"dbname\" : \"yourDatabaseName\",\n\"username\" : \"yourUserName\",\n\"password\" : \"yourPassword\"\n}]\n}",
        "https://your_aws_account_id.signin.aws.amazon.com/console/"
      ]
    },
    {
      "title": "AppML Reference",
      "summary": "AppML HTML Attributes\nExample\nAppML Messages\nExample\nAppML messages are explained in the chapter about AppML messages.\nREMOVE ADS\nAppML Models\nExample\nAppML Model Properties\nApplication Security\nYou have to be logged in as a member of the \"admin\" group, to access this application:\nExample\nPrivate Models\nYou can add your own private data to the model.\nThis example suggests restrictions to data:\nExample\nModel data can be used by server applications, and by your AppML controller.\nThis example uses model data to validate input:\nExample",
      "examples": [
        "<div appml-include-html=\"inc_header.htm\"></div>\n\n<h1>Customers</h1>\n<table appml-data=\"customers.js\" appml-controller=\"myController\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n\n<div appml-include-html=\"inc_footer.htm\"></div>",
        "function myController($appml) {\nif ($appml.message == \"display\") {\nif ($appml.display.name == \"CustomerName\") {\n$appml.display.value = $appml.display.value.toUpperCase();\n}\n}\n}",
        "{\n\"security\": \"admin\",\n\"rowsperpage\" : 10,\n\n\"database\": {\n\"connection\": \"mysql\",\n\"sql\"       : \"SELECT * FROM Customers\",\n\"orderby\"   : \"CustomerName\"}},\n\n\"filteritems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}],\n\n\"sortitems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}]\n}",
        "{\n\"security\": \"admin\",\n\"database\": {\n\"connection\": \"mysql\",\n\"sql\"       : \"SELECT * FROM Customers\",\n\"orderby\"   : \"CustomerName\"}\n}",
        "\"restrictions\" : {\n\"fname\" : {\"maxlength\": 40},\n\"price\" : {\"max\": 999,\"min\": 100}\n}",
        "function myController($appml) {\nif ($appml.message == \"submit\") {\nvar price = document.getElementById(\"price\").value;\nif (price < $appml.model.restrictions.price.min) {\n$appml.displayError(15, \"Price too low!\");\nreturn;\n}\n}"
      ]
    },
    {
      "title": "AppML Reference - Data Files",
      "summary": "The \"data\" Property\nThe \"data\" property defines a data file as the data source. It has the following sub properties:\nData From a Text File\nThis model fetches records containing Title, Artist, and Price (as item 1, 2, and 5) from a comma separated text file:\nModel\nExample explained: Case Text Files.\nData From an XML File\nThis model fetches records containing Title, Artist, and Price from CD nodes in an XML file:\nModel\nExample explained: Case XML Files.\nREMOVE ADS\nData From a JSON File\nThis model fetches records containing Title, Artist, and Price from an array of CD objects in a JSON file:\nModel\nExample explained: Case JSON Files.",
      "examples": [
        "{\n\"data\": {\n\"type\"    : \"csvfile\",\n\"filename\": \"cd_catalog.txt\",\n\"items\"   : [\n{\"name\": \"Title\", \"index\": 1},\n{\"name\": \"Artist\",\"index\": 2},\n{\"name\": \"Price\", \"index\": 5}\n]\n}\n}",
        "{\n\"data\": {\n\"type\"    : \"xmlfile\",\n\"filename\": \"cd_catalog.xml\",\n\"record\"  : \"CD\",\n\"items\"   : [\n{\"name\": \"Artist\", \"nodename\": \"ARTIST\"},\n{\"name\": \"Title\",  \"nodename\": \"TITLE\"},\n{\"name\": \"Country\",\"nodename\": \"COUNTRY\"}\n]\n}\n}",
        "{\n\"data\" : {\n\"type\" : \"jsonfile\",\n\"filename\" : \"cd_catalog.js\",\n\"record\" : \"cd\",\n\"items\" : [\n{\"name\" : \"Title\", \"nodename\" : \"title\"},\n{\"name\" : \"Artist\", \"nodename\" : \"artist\"},\n{\"name\" : \"Price\", \"nodename\" : \"price\"}\n]\n}\n}"
      ]
    },
    {
      "title": "AppML Reference - Databases",
      "summary": "The \"database\" Property\nThe \"database\" property defines a database as the data source. It has the following sub properties:\nData From a Database\nThis model fetches records containing Customer, City, and Country from a Customer table in an SQL database:\nExample\nFilter Restrictions\nTo allow users to filter data, you can add filter information to the model:\nSorting Restrictions\nTo allow users to sort data, you can add sort information to the model:\nUpdate Restrictions\nTo allow users to update data, you can include update information in the model:\nExample\nBy default, AppML will let you filter, sort, or update data, only it is specified in the model.\nREMOVE ADS\nDatabase Connections\nDatabase connections are defined in appml_config.php:\nappml_config.php\nThe configuration file can contain many database connections.\nCreating Databases\nSince AppML allows you to execute SQL statements before the application is started, you can use this to create a database if needed:\nModel\nPerfect for rapid prototyping!",
      "examples": [
        "{\n\"database\": {\n\"connection\": \"mysql\",\n\"sql\"       : \"SELECT CustomerName, City, Country FROM Customers\",\n\"orderby\"   : \"CustomerName\"\n}\n}",
        "\"filteritems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}]",
        "\"sortitems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}]",
        "\"updateItems\" : [\n{\"item\" : \"CustomerName\"},\n{\"item\" : \"Address\"},\n{\"item\" : \"PostalCode\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}]",
        "<?php echo(\"Access Forbidden\");exit();?>\n{\n\"dateformat\" : \"yyyy-mm-dd\",\n\"databases\": [\n{\n\"connection\" : \"mysql\",\n\"host\"       : \"127.0.0.1:3306\",\n\"dbname\"     : \"Northwind\",\n\"username\"   : \"myUserId\",\n\"password\"   : \"myPassword\"\n},\n{\n\"connection\" : \"googleDB\",\n\"host\"       : \"192.168.1.1:3306\",\n\"dbname\"     : \"Northwind\",\n\"username\"   : \"myUserId\",\n\"password\"   : \"myPassword\"\n},\n{\n\"connection\" : \"amazonDB\",\n\"host\"       : \"mydbinstance.amazon.com:3306\",\n\"dbname\"     : \"Northwind\",\n\"username\"   : \"myUserId\",\n\"password\"   : \"myPassword\"\n},\n{\n\"connection\" : \"azureDB\",\n\"host\"       : \"azure.cloudapp.net\",\n\"dbname\"     : \"Northwind\",\n\"username\"   : \"myUserId\",\n\"password\"   : \"myPassword\"\n}\n]\n}",
        "{\n\"database\" : {\n\"connection\" : \"myCDs\",\n\"execute\" : [\n\"DROP TABLE IF EXISTS CD_Catalog\",\n\"CREATE TABLE IF NOT EXISTS CD_Catalog (CDID INT NOT NULL AUTO_INCREMENT,PRIMARY KEY (CDID),Title NVARCHAR(255),Artist NVARCHAR(255),Country NVARCHAR(255),Price NUMBER)\"\n]\n}}"
      ]
    },
    {
      "title": "AppML Reference - API",
      "summary": "AppML Methods\nAppML Properties\nData Object Properties\nAppML Form Methods\nAppML Filter Properties",
      "examples": []
    },
    {
      "title": "AppML Architecture",
      "summary": "Modern Web Architecture\nAppML combines the most up-to-date techniques and ideas of modern web development.\nAppML focus on speed, simplicity, and low cost:\nLow Cost\nRapid and Agile Web Develoment\nOptimized for Cloud Computing\nHigh Speed and Low Bandwidth Consumption\nMVC (Model Viev Controller) Architecture\nFull Separation of Content from Presentation\nHighly Scalable and Testable\nEasy Configuration and Reconfiguration\nReconfiguration while applications are running\nSmart Support for User Accounts and Roles\nMVC Architecture\nAppML uses an MVC Architecture\nMVC stands for Model, View, Controller\nThe Model describes your application.\nThe View displays your data.\nThe Controller controls your application (of course).\nWikipedia: Model, View, Controller\nThe MODEL - Just JSON\nThe model describes the application.\nThe model is reusable on different hardware and software platforms (Server, PC, iPhone, Tablets, etc.).\nThe model is not concerned with presentation or user interface (UI).\nThe model is written in JSON:\nModel\nThe VIEW - Just HTML\nThe view is the UI (User Interface) for displaying (and input) data.\nThe view is written in HTML and CSS:\nHTML View\nREMOVE ADS\nThe CONTROLLER - Client and/or Server Scripts\nA client script in the web page can control the application:\nAppML can display data as defined in the model\nAppML can display data as defined by HTML attributes.\nAppML applications can run independent of HTML (hidden)\n(Optionally) AppML can request model data from a web server (SQL server)\n(Optionally) AppML users can edit data\n(Optionally) AppML can send data to a web server\nA server script can control the application by:\nReceiving requests from the client (browser)\nReturning data to the client\nReceiving data from the client\nUpdating data on the server\nTaking care of authentication and security\nThe Art of Programming\nKeeping application size and complexity low, is the main problem of all programming.\nControlling computer application complexity, is the true art of programming.\nDeclarative Programming\nSoftware development often breaks deadlines and budgets. Finished software is often full of coding errors. This is because computer code is difficult to develop, test, and maintain.\nCoding is Out. You should describe more What to do, less How to do it.\nWith AppML you Declare your application in the Model and in the View.\nWith AppML there is less (sometimes nothing) to code.\nWikipedia: Declarative Programming\nRapid and Agile Application Development\nControlling computer application complexity is the true art of programming.\nKeeping application size and complexity under under control is the main problem of all programming.\nRAD is a software development method that uses minimal planning in favor of rapid prototyping.\nAppML delivers super-fast prototyping, up to 100 times faster than traditional development methods.\nApplication prototypes can run directly from the application model, without any coding.\nWikipedia: Rapid Application Development\nAgile software development is a method based on step-by-step development, where solutions are created by users and developers in collaboration.\nWith AppML, applications can be written step by step, in small increments, from prototypes to full applications.\nWikipedia: Agile Software Development\nCode First\nA web application can be developed in two different ways:\n1. Code First: Using pre-programmed, pre-tested code, adding only new application descriptions.\n2. Contract First: Coding the application from scratch using the full application requirement description.\nAppML uses the most rational concept: Code First.\nService Oriented Architecture (SOA)\nService Oriented Architecture (SOA) is an architecture for building web applications.\nSOA offers low development costs and high flexibility.\nWith SOA, applications can be created from scratch, or from existing IT infrastructures, and be used, by different applications, on different hardware and software.\nSOA is a perfect fit for MVC and Declarative Programming, where data can be easily consumed without the concern about how.\nWeb Services\nA Web Service is an interface to data, identified by a URL, just like a web page.\nA Web Service differs from a web page, only in the way it communicates information.\nA typical Web Service only provides data to a web page.\nWith AppML, HTML is the user interface, a Web Service provides the data.\nOriginal Web Services were designed to use XML standards like SOAP, WSDL, and UDDI.\nModern Web Services like AppML are much easier to use.\nSimpler to understand - Can be read by humans\nLightweight - no unnecessary code or markup\nEasy to implement - no development tools required\nBenefits of Web Services\nWeb services are small units of code\nWeb services are designed to handle a limited set of tasks\nWeb services use HTTP based communicating protocols\nWeb services are independent of operating systems\nWeb services are independent of programming languages\nWeb services can connect different applications, systems, and devices\nWeb Services makes it easy to distribute information\nWeb Services favors rapid application development\nExample: A small program designed to supply other applications with the stock exchange prices.\nExample: Flight schedules and ticket reservation systems.\nSince web services use HTTP, they are independent of both operating systems and programming languages.\nCloud Computing\nCloud Computing is an extension of SOA: Application-as-a service, Storage-as-a-service, Data-as-a-service.\nFor most people, Cloud Computing is about storing data on the web:\nEmails and calendars\nDocuments and spreadsheets\nBooks, notes, and to do lists\nMusic, pictures and movies\nDatabases and applications\nThe reasons are pretty obvious:\nTo have access to data from everywhere\nTo share my data with others\nTo survive hardware changes or crashes\nWith AppML, it is very easy to put both databases and applications in the cloud.",
      "examples": [
        "{\n\"rowsperpage\" : 10,\n\"database\" : {\n\"connection\" : \"localmysql\",\n\"sql\" : \"SELECT CustomerName, City, Country FROM Customers\",\n\"orderby\" : \"CustomerName\"\n},\n\"filteritems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n],\n\"sortitems\" : [\n{\"item\" : \"CustomerName\", \"label\" : \"Customer\"},\n{\"item\" : \"City\"},\n{\"item\" : \"Country\"}\n]\n}",
        "<!DOCTYPE html>\n<html lang=\"en-US\">\n<title>Customers</title>\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n<script src=\"https://www.w3schools.com/appml/2.0.3/appml.js\"></script>\n<body>\n\n<div class=\"w3-container\" appml-data=\"local?model=model_customers\">\n<h1>Customers</h1>\n<div appml-include-html=\"inc_listcommands.htm\"></div>\n<div appml-include-html=\"inc_filter.htm\"></div>\n<table class=\"w3-table-all\">\n<tr>\n<th>Customer</th>\n<th>City</th>\n<th>Country</th>\n</tr>\n<tr appml-repeat=\"records\">\n<td>{{CustomerName}}</td>\n<td>{{City}}</td>\n<td>{{Country}}</td>\n</tr>\n</table>\n</div>\n\n</body>\n</html>"
      ]
    },
    {
      "title": "AppML History",
      "summary": "In 1999 Refsnes Data developed the first version of AppML.\nAlready then,  AppML was based on HTTP request communication between web client and the web server. Later this method became well known as AJAX.\nIn September 2000, a development project for a large Norwegian customer was started. The goal of the project was to convert a huge information system (about 300 applications) from a Windows desktop application to a modern Internet application, using only AppML.\nThe AppML-based system was launched in 2001, several months before schedule, as the world's first commercial AJAX application. The project was a huge success, with development time reduced by 75% compared to ordinary web development. Since then, new applications have been added, and the system now covers over 1000 running applications.\nIn February 2015, W3Schools re-launched AppML as a new product, open to the public.\nAppML design goals:\nAppML applications must run over the Internet\nAppML applications must be platform independent\nAppML applications must use Internet standards only (HTML, CSS, JavaScript)\nAppML applications must support a variety of application needs\nAppML applications must be self-describing\nAppML applications must be easy to develop, maintain and change\nAppML applications must be future proof\nThe paragraphs below describes Refsnes Data's original visions (1999) about future web applications.\nExecutables Will Die, JavaScript Will Live\nCompiled executables (compiled from languages like C or Java) cannot run on different hardware.\nExecutables (EXE files, ActiveX and COM objects, DLL-files) are components that prevent the development of applications that can run over the internet.\nFuture application will not use, or rely on, executables or any other components installed on the client's computer.\nOur suggestions:\nWrite your future applications using only HTML, CSS and JavaScript.\nMake sure your future applications run in any web browser.\nWeb Applications Will be Internet Services\nThe history is full of large, purpose built, applications. Many of these died very quickly, because they could not survive requirements changes.\nApplications should be flexible, generalized, and gracefully adjust to changes, without being crumbled or destroyed.\nApplications should be able to scale from supporting a few to millions of requests per day.\nApplications should be able to spread from one server to many, or to move between servers, without breaking the application.\nApplications should be able to cooperate with other applications.\nApplications should not contain large masses of code.\nApplications should be broken down into smaller services, that are easy to create and easy to maintain.\nApplications should be a set of Internet services that can return data to submitted Internet requests.\nApplications should request services via standard Internet protocols without maintaining a permanent connection to the server.\nOur suggestions:\nWrite your future applications using Internet based SOA (Service Oriented Architecture).\nMake your application services general and flexible, and ready to serve different types of requests.\nREMOVE ADS\nFuture Applications Will be Easy to Create and Edit\nClients and servers will exchange data in an easy understandable way.\nApplications will not be coded, if it can be avoided.\nApplications will be created and modified, by editing models, not by editing code.\nApplication descriptions will be readable by humans.\nApplication descriptions will be self describing.\nApplications will be written by users, not programmers.\nOur suggestions:\nUse human readable text files to describe services, and provide services by executing these descriptions.\nUse text files (like JSON files) to describe applications.\nUse text files (like JSON files) to exchange data.\nUse HTML, CSS, and JavaScript to execute applications.\nThree Little Web Developers...\nOnce upon a time there were three little web developers developing a new web site.\n1. The first web developer was using AppML.\n2. The second web developer was using his favorite server programming language.\n3. The third was using a professional enterprise web development framework.\nThe first web developer had a demo up and running in two days. After collaboration with the users, an exiting prototype was ready in a week. And after two weeks of testing, an intelligent, fast and easy to use, web site, was ready to publish.\nThe second web developer had his web site ready after 6 months. But the WWW had changed its requirements, and was not satisfied. The web developer could not make major changes to his project because it contained too much code. So he started the development of version 2.\nThe third web developer never managed to complete his work. The professional web development framework was very difficult to use, very hard to understand, and almost impossible to test.\nTake a look at how the first developer did it.",
      "examples": []
    }
  ],
  "glossary": [
    "app",
    "appml api",
    "appml architecture",
    "appml asp",
    "appml cases",
    "appml client",
    "appml cloud",
    "appml controllers",
    "appml data",
    "appml databases",
    "appml datafiles",
    "appml forms",
    "appml history",
    "appml home",
    "appml includes",
    "appml lists",
    "appml messages",
    "appml models",
    "appml php",
    "appml prototype",
    "appml reference",
    "appml server",
    "appml websql",
    "attributes",
    "backend",
    "case categories",
    "case customers",
    "case employees",
    "case intro",
    "case products",
    "case shippers",
    "case suppliers",
    "controllers",
    "exercises",
    "free",
    "javascript",
    "programs",
    "references",
    "report error",
    "w3schools spaces",
    "why appml"
  ],
  "objectives": [
    "Low Cost",
    "Rapid and Agile Web Develoment",
    "Optimized for Cloud Computing",
    "High Speed and Low Bandwidth Consumption",
    "MVC (Model View Controller) Architecture",
    "Full Separation of Content from Presentation",
    "Highly Scalable and Testable",
    "Easy Configuration and Reconfiguration"
  ]
}