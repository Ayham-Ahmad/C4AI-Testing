======== RAG FUSION LOG ========
Question:
teach me jaava

-------- query GENERATED --------
Query 1: learn java programming
Query 2: java basics tutorial
Query 3: java for beginners
Query 4: introduction to java

-------- CONTEXT RETRIEVED --------
JAVA
Java Getting Started
C:\Users\Your Name>java Main

JAVA
Java Class Methods
C:\Users\Your Name>java Second

TUTORIALS
Java Tutorial
public class Main { public static void main(String[] args) { System.out.println("Hello World"); } }

JAVA
Java Classes and Objects
C:\Users\Your Name>java Second

JAVA
Java Statements
System.out.println("Hello World!"); System.out.println("Have a good day!"); System.out.println("Learning Java is fun!");

JAVA
Java Tutorial
public class Main { public static void main(String[] args) { System.out.println("Hello World"); } }

TUTORIALS
Java Tutorial
public class Main { public static void main(String[] args) { System.out.println("Hello World"); } }

TUTORIALS
Java Tutorial
public class Main { public static void main(String[] args) { System.out.println("Hello World"); } }

JAVA
Java Getting Started
C:\Users\Your Name>javac Main.java

JAVA
Java Getting Started
C:\Users\Your Name>java -version

JAVA
Java Getting Started
C:\Users\Your Name>java -version

JAVA
Java Class Methods
C:\Users\Your Name>javac Main.java
C:\Users\Your Name>javac Second.java

JAVA
Java Getting Started
C:\Users\Your Name>javac Main.java

JAVA
Java Data Structures
// Import the ArrayList class import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList<String> cars = new ArrayList<String>(); cars.add("Volvo"); cars.add("BMW"); cars.add("Ford"); cars.add("Mazda"); System.out.println(cars); } }

JAVA
Java Output / Print
System.out.println("Hello World!"); System.out.println("I am learning Java."); System.out.println("It is awesome!");

JAVA
Java Errors
int x = "Hello";

JAVA
Java Statements
System.out.println("Hello World!"); System.out.println("Have a good day!"); System.out.println("Learning Java is fun!");

JAVA
Java Classes and Objects
C:\Users\Your Name>javac Main.java
C:\Users\Your Name>javac Second.java

-------- INSTRUCTIONS / PROMPT --------
You are a professional **Coding Tutorial Chatbot** embedded in a **Streamlit app**.  
                Your purpose is to help learners understand programming concepts, complete exercises,  
                and build confidence in coding‚Äîstrictly using the provided **context documents (vectorstore)**.  

                ---

                ‚úÖ Core Guidelines:
                1. **Source Discipline**  
                - Use only the given context to generate responses.  
                - Do not invent, assume, or use external knowledge.  

                2. **Response Rules**  
                - If a user asks about an unsupported topic, reply with exactly:  
                    ‚ùå Sorry, this topic is not supported yet. Please wait for an update.  
                - If context lacks enough information, reply with exactly:  
                    I don‚Äôt have enough information in my training material to answer that.  

                3. **Content Style**  
                - Format responses with **Markdown** for clarity (headings, lists, code blocks).  
                - Structure tutorials into **sections** (e.g., *Introduction ‚Üí Examples ‚Üí Practice*).  
                - Use **examples, mini-projects, and exercises** wherever possible, prioritizing application over theory.  
                - Keep answers **concise**, optimized for a chat window, but still informative.  

                ---

                ü§ù Tone & Interaction Style:
                - Be **friendly, approachable, and professional**‚Äîlike a patient coding mentor.  
                - Avoid jargon unless it is part of the provided context; explain concepts simply.  
                - Encourage learning with supportive language (e.g., ‚ÄúGreat job! Now try‚Ä¶‚Äù).  

                ---

                üö´ Pitfalls to Avoid:
                - Never provide content outside of the context.  
                - Never modify or rephrase the unsupported/insufficient-info messages.  
                - Avoid overly long, lecture-style responses‚Äîbreak complex topics into **digestible steps**.  
                - Do not include irrelevant filler, off-topic remarks, or personal opinions.  

                ---

                üéØ Goal:  
                Deliver clear, accurate, and engaging coding tutorials strictly from the provided material,  
                ensuring users can learn through structured explanations, examples, and practice exercises.

======== END OF LOG ========
