{
  "course_name": "How",
  "description": "Code snippets for HTML, CSS and JavaScript. Learn How To » Learn How To » Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Learn How To » Learn How To » REMOVE ADS Learn How To » Learn How To » Learn How To » Open Modal Hello World! Modals are awesome!",
  "course_summary": [
    {
      "title": "How TO - Icon Bar",
      "summary": "Learn how to create icon bars with CSS.\nVertical:\nTry it Yourself »\nHorizontal:\nTry it Yourself »\nHow To Create an Icon Bar\nExample\nREMOVE ADS\nVertical Example\nHorizontal Example\nRelated Pages\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nTip: Go to our Icons Tutorial to learn more about icons.",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<div class=\"icon-bar\">\n<a class=\"active\" href=\"#\"><i class=\"fa fa-home\"></i></a>\n<a href=\"#\"><i class=\"fa fa-search\"></i></a>\n<a href=\"#\"><i class=\"fa fa-envelope\"></i></a>\n<a href=\"#\"><i class=\"fa fa-globe\"></i></a>\n<a href=\"#\"><i class=\"fa fa-trash\"></i></a>\n</div>",
        ".icon-bar {\nwidth: 90px; /* Set a specific width */\nbackground-color: #555; /* Dark-grey background */\n}\n\n.icon-bar a {\ndisplay: block; /* Make the links appear below each other instead of side-by-side */\ntext-align: center; /* Center-align text */\npadding: 16px; /* Add some padding */\ntransition: all 0.3s ease; /* Add transition for hover effects */\ncolor: white; /* White text color */\nfont-size: 36px; /* Increased font-size */\n}\n\n.icon-bar a:hover {\nbackground-color: #000; /* Add a hover color */\n}\n\n.active {\nbackground-color: #04AA6D; /* Add an active/current color */\n}",
        ".icon-bar {\nwidth: 100%; /* Full-width */\nbackground-color: #555; /* Dark-grey background */\noverflow: auto; /* Overflow due to float */\n}\n\n.icon-bar a {\nfloat: left; /* Float links side by side */\ntext-align: center; /* Center-align text */\nwidth: 20%; /* Equal width (5 icons with 20% width each = 100%) */\npadding: 12px 0; /* Some top and bottom padding */\ntransition: all 0.3s ease; /* Add transition for hover effects */\ncolor: white; /* White text color */\nfont-size: 36px; /* Increased font size */\n}\n\n.icon-bar a:hover {\nbackground-color: #000; /* Add a hover color */\n}\n\n.active {\nbackground-color: #04AA6D; /* Add an active/current color */\n}"
      ]
    },
    {
      "title": "How TO - Menu Icon",
      "summary": "Learn how to create a menu icon with CSS.\nHow To Create a Menu Icon\nIf you are not using an icon library, you can create a basic menu icon with CSS:\nMenu Icon:\nTry it Yourself »\nAnimated Menu Icon (click on it):\nTry it Yourself »\nExample\nExample\nExample Explained\nThe width and the height property specifies the width and height of each bar.\nWe have added a black background-color, and the top and bottom margin is used to create some distance between each bar.\nREMOVE ADS\nAnimated Icon\nUse CSS and JavaScript to change the menu icon to a \"cancel/remove\" icon when it is clicked on:\nExample\nExample\nExample\nExample Explained\nHTML & CSS: We use the same styles as before, only this time, we wrap a container element around each <div> element and we specify a class name for each.\nThe container element is used to show a pointer symbol when the user moves the mouse over the divs (bars). When it is clicked on, it will execute a JavaScript function that adds a new class name to it, which will change the styles of each horizontal bar: the first and the last bar is transformed and rotated to the letter \"x\". The bar in the middle fades out and becomes invisible.",
      "examples": [
        "<div></div>\n<div></div>\n<div></div>",
        "div {\nwidth: 35px;\nheight: 5px;\nbackground-color: black;\nmargin: 6px 0;\n}",
        "<div class=\"container\" onclick=\"myFunction(this)\">\n<div class=\"bar1\"></div>\n<div class=\"bar2\"></div>\n<div class=\"bar3\"></div>\n</div>",
        ".container {\ndisplay: inline-block;\ncursor: pointer;\n}\n\n.bar1, .bar2, .bar3 {\nwidth: 35px;\nheight: 5px;\nbackground-color: #333;\nmargin: 6px 0;\ntransition: 0.4s;\n}\n\n/* Rotate first bar */\n.change .bar1 {\ntransform: translate(0, 11px) rotate(-45deg);\n}\n\n/* Fade out the second bar */\n.change .bar2 {opacity: 0;}\n\n/* Rotate last bar */\n.change .bar3 {\ntransform: translate(0, -11px) rotate(45deg);\n}",
        "function myFunction(x) {\nx.classList.toggle(\"change\");\n}",
        "width",
        "height",
        "background-color",
        "margin"
      ]
    },
    {
      "title": "How TO - Collapsibles/Accordion",
      "summary": "Learn how to create an accordion (collapsible content).\nAccordion\nAccordions are useful when you want to toggle between hiding and showing large amount of content:\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nTry it Yourself »\nCreate An Accordion\nExample\nStyle the accordion:\nExample\nREMOVE ADS\nExample\nAnimated Accordion (Slide Down)\nTo make an animated accordion, add max-height: 0, overflow: hidden and a transition for the max-height property, to the panel class.\nThen, use JavaScript to slide down the content by setting a calculated max-height, depending on the panel's height on different screen sizes:\nExample\nAdd Icons\nAdd a symbol to each button to indicate whether the collapsible content is open or closed:\nExample",
      "examples": [
        "<button class=\"accordion\">Section 1</button>\n<div class=\"panel\">\n<p>Lorem ipsum...</p>\n</div>\n\n<button class=\"accordion\">Section 2</button>\n<div class=\"panel\">\n<p>Lorem ipsum...</p>\n</div>\n\n<button class=\"accordion\">Section 3</button>\n<div class=\"panel\">\n<p>Lorem ipsum...</p>\n</div>",
        "/* Style the buttons that are used to open and close the accordion panel */\n.accordion {\nbackground-color: #eee;\ncolor: #444;\ncursor: pointer;\npadding: 18px;\nwidth: 100%;\ntext-align: left;\nborder: none;\noutline: none;\ntransition: 0.4s;\n}\n\n/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n.active, .accordion:hover {\nbackground-color: #ccc;\n}\n\n/* Style the accordion panel. Note: hidden by default */\n.panel {\npadding: 0 18px;\nbackground-color: white;\ndisplay: none;\noverflow: hidden;\n}",
        "var acc = document.getElementsByClassName(\"accordion\");\nvar i;\n\nfor (i = 0; i < acc.length; i++) {\nacc[i].addEventListener(\"click\", function() {\n/* Toggle between adding and removing the \"active\" class,\nto highlight the button that controls the panel */\nthis.classList.toggle(\"active\");\n\n/* Toggle between hiding and showing the active panel */\nvar panel = this.nextElementSibling;\nif (panel.style.display === \"block\") {\npanel.style.display = \"none\";\n} else {\npanel.style.display = \"block\";\n}\n});\n}",
        "<style>\n.panel {\npadding: 0 18px;\nbackground-color: white;\nmax-height: 0;\noverflow: hidden;\ntransition: max-height 0.2s ease-out;\n}\n</style>\n\n<script>\nvar acc = document.getElementsByClassName(\"accordion\");\nvar i;\n\nfor (i = 0; i < acc.length; i++) {\nacc[i].addEventListener(\"click\", function() {\nthis.classList.toggle(\"active\");\nvar panel = this.nextElementSibling;\nif (panel.style.maxHeight) {\npanel.style.maxHeight = null;\n} else {\npanel.style.maxHeight = panel.scrollHeight + \"px\";\n}\n});\n}\n</script>",
        ".accordion:after {\ncontent: '\\02795'; /* Unicode character for \"plus\" sign (+) */\nfont-size: 13px;\ncolor: #777;\nfloat: right;\nmargin-left: 5px;\n}\n\n.active:after {\ncontent: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n}",
        "max-height: 0",
        "overflow: hidden",
        "transition",
        "panel",
        "max-height"
      ]
    },
    {
      "title": "How TO - Tabs",
      "summary": "Learn how to create tabs with CSS and JavaScript.\nTabs\nTabs are perfect for single page web applications, or for web pages capable of displaying different subjects:\nLondon\nParis\nTokyo\nLondon\nLondon is the capital city of England.\nParis\nParis is the capital of France.\nTokyo\nTokyo is the capital of Japan.\nTry it Yourself »\nCreate Toggleable Tabs\nExample\nCreate buttons to open specific tab content. All <div> elements with class=\"tabcontent\" are hidden by default (with CSS & JS). When the user clicks on a button - it will open the tab content that \"matches\" this button.\nStyle the buttons and the tab content:\nExample\nREMOVE ADS\nExample\nFade in Tabs:\nIf you want to fade in the tab content, add the following CSS:\nExample\nShow a tab by default\nTo open a specific tab on page load, use JavaScript to \"click\" on the specified tab button:\nExample\nClose a tab\nIf you want to close a specific tab, use JavaScript to hide the tab with a click of a button:\nExample\nTip: Also check out How To - Vertical Tabs.",
      "examples": [
        "<!-- Tab links -->\n<div class=\"tab\">\n<button class=\"tablinks\" onclick=\"openCity(event, 'London')\">London</button>\n<button class=\"tablinks\" onclick=\"openCity(event, 'Paris')\">Paris</button>\n<button class=\"tablinks\" onclick=\"openCity(event, 'Tokyo')\">Tokyo</button>\n</div>\n\n<!-- Tab content -->\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n</div>\n\n<div id=\"Paris\" class=\"tabcontent\">\n<h3>Paris</h3>\n<p>Paris is the capital of France.</p>\n</div>\n\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h3>Tokyo</h3>\n<p>Tokyo is the capital of Japan.</p>\n</div>",
        "/* Style the tab */\n.tab {\noverflow: hidden;\nborder: 1px solid #ccc;\nbackground-color: #f1f1f1;\n}\n\n/* Style the buttons that are used to open the tab content */\n.tab button {\nbackground-color: inherit;\nfloat: left;\nborder: none;\noutline: none;\ncursor: pointer;\npadding: 14px 16px;\ntransition: 0.3s;\n}\n\n/* Change background color of buttons on hover */\n.tab button:hover {\nbackground-color: #ddd;\n}\n\n/* Create an active/current tablink class */\n.tab button.active {\nbackground-color: #ccc;\n}\n\n/* Style the tab content */\n.tabcontent {\ndisplay: none;\npadding: 6px 12px;\nborder: 1px solid #ccc;\nborder-top: none;\n}",
        "function openCity(evt, cityName) {\n// Declare all variables\nvar i, tabcontent, tablinks;\n\n// Get all elements with class=\"tabcontent\" and hide them\ntabcontent = document.getElementsByClassName(\"tabcontent\");\nfor (i = 0; i < tabcontent.length; i++) {\ntabcontent[i].style.display = \"none\";\n}\n\n// Get all elements with class=\"tablinks\" and remove the class \"active\"\ntablinks = document.getElementsByClassName(\"tablinks\");\nfor (i = 0; i < tablinks.length; i++) {\ntablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n}\n\n// Show the current tab, and add an \"active\" class to the button that opened the tab\ndocument.getElementById(cityName).style.display = \"block\";\nevt.currentTarget.className += \" active\";\n}",
        ".tabcontent {\nanimation: fadeEffect 1s; /* Fading effect takes 1 second */\n}\n\n/* Go from zero to full opacity */\n@keyframes fadeEffect {\nfrom {opacity: 0;}\nto {opacity: 1;}\n}",
        "<button class=\"tablinks\" onclick=\"openCity(event, 'London')\" id=\"defaultOpen\">London</button>\n\n<script>\n// Get the element with id=\"defaultOpen\" and click on it\ndocument.getElementById(\"defaultOpen\").click();\n</script>",
        "<!-- Click on the <span> element to close the tab -->\n\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n<span onclick=\"this.parentElement.style.display='none'\">x</span>\n</div>",
        "class=\"tabcontent\""
      ]
    },
    {
      "title": "How TO - Vertical Tabs",
      "summary": "Learn how to create a vertical tab menu with CSS and JavaScript.\nVertical Tabs\nTabs are perfect for single page web applications, or for web pages capable of displaying different subjects.\nTry it Yourself »\nCreate Togglable Vertical Tabs\nExample\nCreate buttons to open the specific tab content. All <div> elements with class=\"tabcontent\" are hidden by default (with CSS & JS) - when the user clicks on a button - it will open the tab content that \"matches\" this button.\nStyle the buttons and the tab content:\nExample\nREMOVE ADS\nExample\nTip: Also check out How To - Horizontal Tabs.",
      "examples": [
        "<div class=\"tab\">\n<button class=\"tablinks\" onclick=\"openCity(event, 'London')\">London</button>\n<button class=\"tablinks\" onclick=\"openCity(event, 'Paris')\">Paris</button>\n<button class=\"tablinks\" onclick=\"openCity(event, 'Tokyo')\">Tokyo</button>\n</div>\n\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n</div>\n\n<div id=\"Paris\" class=\"tabcontent\">\n<h3>Paris</h3>\n<p>Paris is the capital of France.</p>\n</div>\n\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h3>Tokyo</h3>\n<p>Tokyo is the capital of Japan.</p>\n</div>",
        "* {box-sizing: border-box}\n\n/* Style the tab */\n.tab {\nfloat: left;\nborder: 1px solid #ccc;\nbackground-color: #f1f1f1;\nwidth: 30%;\nheight: 300px;\n}\n\n/* Style the buttons that are used to open the tab content */\n.tab button {\ndisplay: block;\nbackground-color: inherit;\ncolor: black;\npadding: 22px 16px;\nwidth: 100%;\nborder: none;\noutline: none;\ntext-align: left;\ncursor: pointer;\ntransition: 0.3s;\n}\n\n/* Change background color of buttons on hover */\n.tab button:hover {\nbackground-color: #ddd;\n}\n\n/* Create an active/current \"tab button\" class */\n.tab button.active {\nbackground-color: #ccc;\n}\n\n/* Style the tab content */\n.tabcontent {\nfloat: left;\npadding: 0px 12px;\nborder: 1px solid #ccc;\nwidth: 70%;\nborder-left: none;\nheight: 300px;\n}",
        "function openCity(evt, cityName) {\n// Declare all variables\nvar i, tabcontent, tablinks;\n\n// Get all elements with class=\"tabcontent\" and hide them\ntabcontent = document.getElementsByClassName(\"tabcontent\");\nfor (i = 0; i < tabcontent.length; i++) {\ntabcontent[i].style.display = \"none\";\n}\n\n// Get all elements with class=\"tablinks\" and remove the class \"active\"\ntablinks = document.getElementsByClassName(\"tablinks\");\nfor (i = 0; i < tablinks.length; i++) {\ntablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n}\n\n// Show the current tab, and add an \"active\" class to the link that opened the tab\ndocument.getElementById(cityName).style.display = \"block\";\nevt.currentTarget.className += \" active\";\n}",
        "class=\"tabcontent\""
      ]
    },
    {
      "title": "How TO - Tab Headers London Paris Tokyo Oslo",
      "summary": "Learn how to create tab headers with CSS and JavaScript.\nTab Headers\nClick on the \"city\" buttons to display the appropriate header:\nLondon is the capital city of England.\nParis is the capital of France.\nTokyo is the capital of Japan.\nOslo is the capital of Norway.\nTry it Yourself »\nCreate Togglable Tab Headers\nExample\nCreate buttons to open specific tab content. All <div> elements with class=\"tabcontent\" are hidden by default (with CSS & JS). When the user clicks on a button - it will open the tab content that \"matches\" this button.\nStyle the buttons and the tab content:\nExample\nREMOVE ADS\nExample\nTip: Also check out How To - Tabs.",
      "examples": [
        "<div id=\"London\" class=\"tabcontent\">\n<h1>London</h1>\n<p>London is the capital city of England.</p>\n</div>\n\n<div id=\"Paris\" class=\"tabcontent\">\n<h1>Paris</h1>\n<p>Paris is the capital of France.</p>\n</div>\n\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h1>Tokyo</h1>\n<p>Tokyo is the capital of Japan.</p>\n</div>\n\n<div id=\"Oslo\" class=\"tabcontent\">\n<h1>Oslo</h1>\n<p>Oslo is the capital of Norway.</p>\n</div>\n\n<button class=\"tablink\" onclick=\"openCity('London', this, 'red')\" id=\"defaultOpen\">London</button>\n<button class=\"tablink\" onclick=\"openCity('Paris', this, 'green')\">Paris</button>\n<button class=\"tablink\" onclick=\"openCity('Tokyo', this, 'blue')\">Tokyo</button>\n<button class=\"tablink\" onclick=\"openCity('Oslo', this, 'orange')\">Oslo</button>",
        "/* Style the tab buttons */\n.tablink {\nbackground-color: #555;\ncolor: white;\nfloat: left;\nborder: none;\noutline: none;\ncursor: pointer;\npadding: 14px 16px;\nfont-size: 17px;\nwidth: 25%;\n}\n\n/* Change background color of buttons on hover */\n.tablink:hover {\nbackground-color: #777;\n}\n\n/* Set default styles for tab content */\n.tabcontent {\ncolor: white;\ndisplay: none;\npadding: 50px;\ntext-align: center;\n}\n\n/* Style each tab content individually */\n#London {background-color:red;}\n#Paris {background-color:green;}\n#Tokyo {background-color:blue;}\n#Oslo {background-color:orange;}",
        "function openCity(cityName, elmnt, color) {\n// Hide all elements with class=\"tabcontent\" by default */\nvar i, tabcontent, tablinks;\ntabcontent = document.getElementsByClassName(\"tabcontent\");\nfor (i = 0; i < tabcontent.length; i++) {\ntabcontent[i].style.display = \"none\";\n}\n\n// Remove the background color of all tablinks/buttons\ntablinks = document.getElementsByClassName(\"tablink\");\nfor (i = 0; i < tablinks.length; i++) {\ntablinks[i].style.backgroundColor = \"\";\n}\n\n// Show the specific tab content\ndocument.getElementById(cityName).style.display = \"block\";\n\n// Add the specific color to the button used to open the tab content\nelmnt.style.backgroundColor = color;\n}\n\n// Get the element with id=\"defaultOpen\" and click on it\ndocument.getElementById(\"defaultOpen\").click();",
        "class=\"tabcontent\""
      ]
    },
    {
      "title": "How TO - Full Page Tabs Home News Contact About",
      "summary": "Learn how to create full page tabs, that covers the entire browser window, with CSS and JavaScript.\nFull Page Tabs\nClick on the links to display the \"current\" page:\nHome is where the heart is..\nSome news this fine day!\nGet in touch, or swing by for a cup of coffee.\nWho we are and what we do.\nTry it Yourself »\nCreate One Page Tabs\nExample\nCreate buttons to open specific tab content. All <div> elements with class=\"tabcontent\" are hidden by default (with CSS & JS). When the user clicks on a button - it will open the tab content that \"matches\" this button.\nStyle the links and the tab content (full page):\nExample\nREMOVE ADS\nExample\nTip: Also check out How To - Tabs.",
      "examples": [
        "<button class=\"tablink\" onclick=\"openPage('Home', this, 'red')\">Home</button>\n<button class=\"tablink\" onclick=\"openPage('News', this, 'green')\" id=\"defaultOpen\">News</button>\n<button class=\"tablink\" onclick=\"openPage('Contact', this, 'blue')\">Contact</button>\n<button class=\"tablink\" onclick=\"openPage('About', this, 'orange')\">About</button>\n\n<div id=\"Home\" class=\"tabcontent\">\n<h3>Home</h3>\n<p>Home is where the heart is..</p>\n</div>\n\n<div id=\"News\" class=\"tabcontent\">\n<h3>News</h3>\n<p>Some news this fine day!</p>\n</div>\n\n<div id=\"Contact\" class=\"tabcontent\">\n<h3>Contact</h3>\n<p>Get in touch, or swing by for a cup of coffee.</p>\n</div>\n\n<div id=\"About\" class=\"tabcontent\">\n<h3>About</h3>\n<p>Who we are and what we do.</p>\n</div>",
        "/* Set height of body and the document to 100% to enable \"full page tabs\" */\nbody, html {\nheight: 100%;\nmargin: 0;\nfont-family: Arial;\n}\n\n/* Style tab links */\n.tablink {\nbackground-color: #555;\ncolor: white;\nfloat: left;\nborder: none;\noutline: none;\ncursor: pointer;\npadding: 14px 16px;\nfont-size: 17px;\nwidth: 25%;\n}\n\n.tablink:hover {\nbackground-color: #777;\n}\n\n/* Style the tab content (and add height:100% for full page content) */\n.tabcontent {\ncolor: white;\ndisplay: none;\npadding: 100px 20px;\nheight: 100%;\n}\n\n#Home {background-color: red;}\n#News {background-color: green;}\n#Contact {background-color: blue;}\n#About {background-color: orange;}",
        "function openPage(pageName, elmnt, color) {\n// Hide all elements with class=\"tabcontent\" by default */\nvar i, tabcontent, tablinks;\ntabcontent = document.getElementsByClassName(\"tabcontent\");\nfor (i = 0; i < tabcontent.length; i++) {\ntabcontent[i].style.display = \"none\";\n}\n\n// Remove the background color of all tablinks/buttons\ntablinks = document.getElementsByClassName(\"tablink\");\nfor (i = 0; i < tablinks.length; i++) {\ntablinks[i].style.backgroundColor = \"\";\n}\n\n// Show the specific tab content\ndocument.getElementById(pageName).style.display = \"block\";\n\n// Add the specific color to the button used to open the tab content\nelmnt.style.backgroundColor = color;\n}\n\n// Get the element with id=\"defaultOpen\" and click on it\ndocument.getElementById(\"defaultOpen\").click();",
        "class=\"tabcontent\""
      ]
    },
    {
      "title": "How TO - Hover Tabs",
      "summary": "Learn how to change tabs on hover, with CSS and JavaScript.\nHover Tabs\nMove the mouse over one of the menu buttons to show the tab content:\nLondon\nLondon is the capital city of England.\nParis\nParis is the capital of France.\nTokyo\nTokyo is the capital of Japan.\nCreate Hoverable Vertical Tabs\nExample\nCreate buttons to open the specific tab content. All <div> elements with class=\"tabcontent\" are hidden by default (with CSS & JS) - when the user move the mouse over a button - it will open the tab content that \"matches\" this button.\nStyle the buttons and the tab content:\nExample\nREMOVE ADS\nExample\nTip: Also check out How To - Tabs.",
      "examples": [
        "<div class=\"tab\">\n<button class=\"tablinks\" onmouseover=\"openCity(event, 'London')\">London</button>\n<button class=\"tablinks\" onmouseover=\"openCity(event, 'Paris')\">Paris</button>\n<button class=\"tablinks\" onmouseover=\"openCity(event, 'Tokyo')\">Tokyo</button>\n</div>\n\n<div id=\"London\" class=\"tabcontent\">\n<h3>London</h3>\n<p>London is the capital city of England.</p>\n</div>\n\n<div id=\"Paris\" class=\"tabcontent\">\n<h3>Paris</h3>\n<p>Paris is the capital of France.</p>\n</div>\n\n<div id=\"Tokyo\" class=\"tabcontent\">\n<h3>Tokyo</h3>\n<p>Tokyo is the capital of Japan.</p>\n</div>",
        "/* Style the tab */\n.tab {\nfloat: left;\nborder: 1px solid #ccc;\nbackground-color: #f1f1f1;\nwidth: 30%;\nheight: 300px;\n}\n\n/* Style the buttons that are used to open the tab content */\n.tab button {\ndisplay: block;\nbackground-color: inherit;\ncolor: black;\npadding: 22px 16px;\nwidth: 100%;\nborder: none;\noutline: none;\ntext-align: left;\ncursor: pointer;\n}\n\n/* Change background color of buttons on hover */\n.tab button:hover {\nbackground-color: #ddd;\n}\n\n/* Create an active/current \"tab button\" class */\n.tab button.active {\nbackground-color: #ccc;\n}\n\n/* Style the tab content */\n.tabcontent {\nfloat: left;\npadding: 0px 12px;\nborder: 1px solid #ccc;\nwidth: 70%;\nborder-left: none;\nheight: 300px;\ndisplay: none;\n}",
        "function openCity(evt, cityName) {\n// Declare all variables\nvar i, tabcontent, tablinks;\n\n// Get all elements with class=\"tabcontent\" and hide them\ntabcontent = document.getElementsByClassName(\"tabcontent\");\nfor (i = 0; i < tabcontent.length; i++) {\ntabcontent[i].style.display = \"none\";\n}\n\n// Get all elements with class=\"tablinks\" and remove the class \"active\"\ntablinks = document.getElementsByClassName(\"tablinks\");\nfor (i = 0; i < tablinks.length; i++) {\ntablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n}\n\n// Show the current tab, and add an \"active\" class to the link that opened the tab\ndocument.getElementById(cityName).style.display = \"block\";\nevt.currentTarget.className += \" active\";\n}",
        "class=\"tabcontent\""
      ]
    },
    {
      "title": "How TO - Top Navigation",
      "summary": "Learn how to create a top navigation bar with CSS.\nTop Navigation Bar\nHome\nNews\nContact\nAbout\nTry it Yourself »\nCreate A Top Navigation Bar\nExample\nExample\nTip: To create mobile-friendly, responsive navigation bars, read our How To - Responsive Top Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div class=\"topnav\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n</div>",
        "/* Add a black background color to the top navigation */\n.topnav {\nbackground-color: #333;\noverflow: hidden;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Add a color to the active/current link */\n.topnav a.active {\nbackground-color: #04AA6D;\ncolor: white;\n}"
      ]
    },
    {
      "title": "How TO - Responsive Top Navigation",
      "summary": "Learn how to create a responsive top navigation menu with CSS and JavaScript.\nResponsive Navigation Bar\nResize the browser window to see how the responsive navigation menu works:\nHome\nNews\nContact\nAbout\nTry it Yourself »\nCreate A Responsive Topnav\nExample\nThe link with class=\"icon\" is used to open and close the topnav on small screens.\nExample\nREMOVE ADS\nAdd media queries:\nExample\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<!-- Load an icon library to show a hamburger menu (bars) on small screens -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<div class=\"topnav\" id=\"myTopnav\">\n<a href=\"#home\" class=\"active\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n<a href=\"javascript:void(0);\" class=\"icon\" onclick=\"myFunction()\">\n<i class=\"fa fa-bars\"></i>\n</a>\n</div>",
        "/* Add a black background color to the top navigation */\n.topnav {\nbackground-color: #333;\noverflow: hidden;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ndisplay: block;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Add an active class to highlight the current page */\n.topnav a.active {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Hide the link that should open and close the topnav on small screens */\n.topnav .icon {\ndisplay: none;\n}",
        "/* When the screen is less than 600 pixels wide, hide all links, except for the first one (\"Home\"). Show the link that contains should open and close the topnav (.icon) */\n@media screen and (max-width: 600px) {\n.topnav a:not(:first-child) {display: none;}\n.topnav a.icon {\nfloat: right;\ndisplay: block;\n}\n}\n\n/* The \"responsive\" class is added to the topnav with JavaScript when the user clicks on the icon. This class makes the topnav look good on small screens (display the links vertically instead of horizontally) */\n@media screen and (max-width: 600px) {\n.topnav.responsive {position: relative;}\n.topnav.responsive a.icon {\nposition: absolute;\nright: 0;\ntop: 0;\n}\n.topnav.responsive a {\nfloat: none;\ndisplay: block;\ntext-align: left;\n}\n}",
        "/* Toggle between adding and removing the \"responsive\" class to topnav when the user clicks on the icon */\nfunction myFunction() {\nvar x = document.getElementById(\"myTopnav\");\nif (x.className === \"topnav\") {\nx.className += \" responsive\";\n} else {\nx.className = \"topnav\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Split Navigation",
      "summary": "Learn how to create a \"split navigation\" bar with CSS.\nSplit Navigation\nHome\nNews\nContact\nHelp\nTry it Yourself »\nCreate A Split Navigation Bar\nExample\nExample\nTip: To create mobile-friendly, responsive navigation bars, read our How To - Responsive Top Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div class=\"topnav\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\" class=\"split\">Help</a>\n</div>",
        "/* Create a top navigation bar with a black background color  */\n.topnav {\nbackground-color: #333;\noverflow: hidden;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Create a right-aligned (split) link inside the navigation bar */\n.topnav a.split {\nfloat: right;\nbackground-color: #04AA6D;\ncolor: white;\n}"
      ]
    },
    {
      "title": "How TO - Navbar with Icons",
      "summary": "Learn how to create a responsive navigation menu with icons, using CSS.\nNavigation Bar With Icons\nTry it Yourself »\nCreate A Responsive Navbar with Icons\nExample\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nTip: If you want to create a navigation bar that only contains icons, read our How To - Icon Bar Tutorial.",
      "examples": [
        "<!-- Load an icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<div class=\"navbar\">\n<a class=\"active\" href=\"#\"><i class=\"fa fa-fw fa-home\"></i> Home</a>\n<a href=\"#\"><i class=\"fa fa-fw fa-search\"></i> Search</a>\n<a href=\"#\"><i class=\"fa fa-fw fa-envelope\"></i> Contact</a>\n<a href=\"#\"><i class=\"fa fa-fw fa-user\"></i> Login</a>\n</div>",
        "/* Style the navigation bar */\n.navbar {\nwidth: 100%;\nbackground-color: #555;\noverflow: auto;\n}\n\n/* Navbar links */\n.navbar a {\nfloat: left;\ntext-align: center;\npadding: 12px;\ncolor: white;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Navbar links on mouse-over */\n.navbar a:hover {\nbackground-color: #000;\n}\n\n/* Current/active navbar link */\n.active {\nbackground-color: #04AA6D;\n}\n\n/* Add responsiveness - will automatically display the navbar vertically instead of horizontally on screens less than 500 pixels */\n@media screen and (max-width: 500px) {\n.navbar a {\nfloat: none;\ndisplay: block;\n}\n}"
      ]
    },
    {
      "title": "How TO - Search Menu",
      "summary": "Learn how to create a search menu to filter links with JavaScript.\nSearch/Filter Menu\nHow to search for links in a navigation menu:\nMenu\nHTML\nCSS\nJavaScript\nPHP\nPython\njQuery\nSQL\nBootstrap\nNode.js\nPage Content\nStart to type for a specific category/link inside the search bar to \"filter\" the search options.\nSome text..Some text..Some text..Some text..Some text..Some text..Some text..Some text..\nSome other text..Some text..Some text..Some text..Some text..Some text..Some text..Some text..\nSome text..\nTry it Yourself »\nCreate A Search Menu\nExample\nNote: We use href=\"#\" in this demo since we do not have a page to link it to. In real life this should be a real URL to a specific page.\nStyle the search box and the navigation menu:\nExample\nREMOVE ADS\nExample\nTip: Remove toUpperCase() if you want to perform a case-sensitive search.\nTip: Also check out How To Filter Tables.\nTip: Also check out How To Filter Lists.",
      "examples": [
        "<input type=\"text\" id=\"mySearch\" onkeyup=\"myFunction()\" placeholder=\"Search..\" title=\"Type in a category\">\n\n<ul id=\"myMenu\">\n<li><a href=\"#\">HTML</a></li>\n<li><a href=\"#\">CSS</a></li>\n<li><a href=\"#\">JavaScript</a></li>\n<li><a href=\"#\">PHP</a></li>\n<li><a href=\"#\">Python</a></li>\n<li><a href=\"#\">jQuery</a></li>\n<li><a href=\"#\">SQL</a></li>\n<li><a href=\"#\">Bootstrap</a></li>\n<li><a href=\"#\">Node.js</a></li>\n</ul>",
        "/* Style the search box */\n#mySearch {\nwidth: 100%;\nfont-size: 18px;\npadding: 11px;\nborder: 1px solid #ddd;\n}\n\n/* Style the navigation menu */\n#myMenu {\nlist-style-type: none;\npadding: 0;\nmargin: 0;\n}\n\n/* Style the navigation links */\n#myMenu li a {\npadding: 12px;\ntext-decoration: none;\ncolor: black;\ndisplay: block\n}\n\n#myMenu li a:hover {\nbackground-color: #eee;\n}",
        "<script>\nfunction myFunction() {\n// Declare variables\nvar input, filter, ul, li, a, i;\ninput = document.getElementById(\"mySearch\");\nfilter = input.value.toUpperCase();\nul = document.getElementById(\"myMenu\");\nli = ul.getElementsByTagName(\"li\");\n\n// Loop through all list items, and hide those who don't match the search query\nfor (i = 0; i < li.length; i++) {\na = li[i].getElementsByTagName(\"a\")[0];\nif (a.innerHTML.toUpperCase().indexOf(filter) > -1) {\nli[i].style.display = \"\";\n} else {\nli[i].style.display = \"none\";\n}\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Search Bar",
      "summary": "Learn how to add a search box inside a responsive navigation menu.\nSearch Bar\nTry it Yourself »\nCreate A Search Bar\nExample\nExample\nREMOVE ADS\nExample with Submit Button\nExample\nExample with Submit Icon\nExample\nTip: To create mobile-friendly, responsive navigation bars, read our How To - Responsive Top Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"topnav\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#about\">About</a>\n<a href=\"#contact\">Contact</a>\n<input type=\"text\" placeholder=\"Search..\">\n</div>",
        "/* Add a black background color to the top navigation bar */\n.topnav {\noverflow: hidden;\nbackground-color: #e9e9e9;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ndisplay: block;\ncolor: black;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Style the \"active\" element to highlight the current page */\n.topnav a.active {\nbackground-color: #2196F3;\ncolor: white;\n}\n\n/* Style the search box inside the navigation bar */\n.topnav input[type=text] {\nfloat: right;\npadding: 6px;\nborder: none;\nmargin-top: 8px;\nmargin-right: 16px;\nfont-size: 17px;\n}\n\n/* When the screen is less than 600px wide, stack the links and the search field vertically instead of horizontally */\n@media screen and (max-width: 600px) {\n.topnav a, .topnav input[type=text] {\nfloat: none;\ndisplay: block;\ntext-align: left;\nwidth: 100%;\nmargin: 0;\npadding: 14px;\n}\n.topnav input[type=text] {\nborder: 1px solid #ccc;\n}\n}"
      ]
    },
    {
      "title": "How TO - Fixed Sidebar",
      "summary": "Learn how to create a fixed side navigation menu with CSS.\nFull height:\nAuto height:\nCreate a Fixed Sidebar\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Navbar tutorial to learn more about navigation bars.\nTip: Go to our How To - Side Navigation tutorial to learn how to create an animated, closable side navigation.",
      "examples": [
        "<!-- Side navigation -->\n<div class=\"sidenav\">\n<a href=\"#\">About</a>\n<a href=\"#\">Services</a>\n<a href=\"#\">Clients</a>\n<a href=\"#\">Contact</a>\n</div>\n\n<!-- Page content -->\n<div class=\"main\">\n...\n</div>",
        "/* The sidebar menu */\n.sidenav {\nheight: 100%; /* Full-height: remove this if you want \"auto\" height */\nwidth: 160px; /* Set the width of the sidebar */\nposition: fixed; /* Fixed Sidebar (stay in place on scroll) */\nz-index: 1; /* Stay on top */\ntop: 0; /* Stay at the top */\nleft: 0;\nbackground-color: #111; /* Black */\noverflow-x: hidden; /* Disable horizontal scroll */\npadding-top: 20px;\n}\n\n/* The navigation menu links */\n.sidenav a {\npadding: 6px 8px 6px 16px;\ntext-decoration: none;\nfont-size: 25px;\ncolor: #818181;\ndisplay: block;\n}\n\n/* When you mouse over the navigation links, change their color */\n.sidenav a:hover {\ncolor: #f1f1f1;\n}\n\n/* Style page content */\n.main {\nmargin-left: 160px; /* Same as the width of the sidebar */\npadding: 0px 10px;\n}\n\n/* On smaller screens, where height is less than 450px, change the style of the sidebar (less padding and a smaller font size) */\n@media screen and (max-height: 450px) {\n.sidenav {padding-top: 15px;}\n.sidenav a {font-size: 18px;}\n}"
      ]
    },
    {
      "title": "How TO - Side Navigation",
      "summary": "Learn how to create an animated, closable side navigation menu.\nCreate an Animated Side Navigation\nExample\nExample\nREMOVE ADS\nThe example below slides in the side navigation, and makes it 250px wide:\nSidenav Overlay Example\nThe example below slides in the side navigation, and pushes the page content to the right (the value used to set the width of the sidenav is also used to set the left margin of the \"page content\"):\nSidenav Push Content\nThe example below also slides in the side navigation, and pushes the page content to the right, only this time, we add a black background color with a 40% opacity to the body element, to \"highlight\" the side navigation:\nSidenav Push Content w/ opacity\nThe example below slides in the side navigation from the left and covers the whole page (100% width):\nSidenav Full-width:\nThe example below opens and close the side navigation menu without animations:\nSidenav without Animation\nThe example below shows how to create a right-sided navigation menu:\nRight-sided navigation:\nThe example below shows how to create a side navigation menu that is always shown (fixed):\nAlways show sidenav:\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div id=\"mySidenav\" class=\"sidenav\">\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\n<a href=\"#\">About</a>\n<a href=\"#\">Services</a>\n<a href=\"#\">Clients</a>\n<a href=\"#\">Contact</a>\n</div>\n\n<!-- Use any element to open the sidenav -->\n<span onclick=\"openNav()\">open</span>\n\n<!-- Add all page content inside this div if you want the side nav to push page content to the right (not used if you only want the sidenav to sit on top of the page -->\n<div id=\"main\">\n...\n</div>",
        "/* The side navigation menu */\n.sidenav {\nheight: 100%; /* 100% Full-height */\nwidth: 0; /* 0 width - change this with JavaScript */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Stay on top */\ntop: 0; /* Stay at the top */\nleft: 0;\nbackground-color: #111; /* Black*/\noverflow-x: hidden; /* Disable horizontal scroll */\npadding-top: 60px; /* Place content 60px from the top */\ntransition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */\n}\n\n/* The navigation menu links */\n.sidenav a {\npadding: 8px 8px 8px 32px;\ntext-decoration: none;\nfont-size: 25px;\ncolor: #818181;\ndisplay: block;\ntransition: 0.3s;\n}\n\n/* When you mouse over the navigation links, change their color */\n.sidenav a:hover {\ncolor: #f1f1f1;\n}\n\n/* Position and style the close button (top right corner) */\n.sidenav .closebtn {\nposition: absolute;\ntop: 0;\nright: 25px;\nfont-size: 36px;\nmargin-left: 50px;\n}\n\n/* Style page content - use this if you want to push the page content to the right when you open the side navigation */\n#main {\ntransition: margin-left .5s;\npadding: 20px;\n}\n\n/* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */\n@media screen and (max-height: 450px) {\n.sidenav {padding-top: 15px;}\n.sidenav a {font-size: 18px;}\n}",
        "/* Set the width of the side navigation to 250px */\nfunction openNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"250px\";\n}\n\n/* Set the width of the side navigation to 0 */\nfunction closeNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"0\";\n}",
        "/* Set the width of the side navigation to 250px and the left margin of the page content to 250px */\nfunction openNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"250px\";\ndocument.getElementById(\"main\").style.marginLeft = \"250px\";\n}\n\n/* Set the width of the side navigation to 0 and the left margin of the page content to 0 */\nfunction closeNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"0\";\ndocument.getElementById(\"main\").style.marginLeft = \"0\";\n}",
        "/* Set the width of the side navigation to 250px and the left margin of the page content to 250px and add a black background color to body */\nfunction openNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"250px\";\ndocument.getElementById(\"main\").style.marginLeft = \"250px\";\ndocument.body.style.backgroundColor = \"rgba(0,0,0,0.4)\";\n}\n\n/* Set the width of the side navigation to 0 and the left margin of the page content to 0, and the background color of body to white */\nfunction closeNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"0\";\ndocument.getElementById(\"main\").style.marginLeft = \"0\";\ndocument.body.style.backgroundColor = \"white\";\n}",
        "/* Open the sidenav */\nfunction openNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"100%\";\n}\n\n/* Close/hide the sidenav */\nfunction closeNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"0\";\n}",
        "/* Open the sidenav */\nfunction openNav() {\ndocument.getElementById(\"mySidenav\").style.display = \"block\";\n}\n\n/* Close/hide the sidenav */\nfunction closeNav() {\ndocument.getElementById(\"mySidenav\").style.display = \"none\";\n}",
        ".sidenav {\nright: 0;\n}",
        "/* The sidenav */\n.sidenav {\nheight: 100%;\nwidth: 200px;\nposition: fixed;\nz-index: 1;\ntop: 0;\nleft: 0;\nbackground-color: #111;\noverflow-x: hidden;\npadding-top: 20px;\n}\n\n/* Page content */\n.main {\nmargin-left: 200px; /* Same as the width of the sidenav */\n}"
      ]
    },
    {
      "title": "How TO - Responsive Sidebar",
      "summary": "Learn how to create a responsive side navigation menu with CSS.\nCreate a Responsive Sidebar\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<!-- The sidebar -->\n<div class=\"sidebar\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n</div>\n\n<!-- Page content -->\n<div class=\"content\">\n..\n</div>",
        "/* The side navigation menu */\n.sidebar {\nmargin: 0;\npadding: 0;\nwidth: 200px;\nbackground-color: #f1f1f1;\nposition: fixed;\nheight: 100%;\noverflow: auto;\n}\n\n/* Sidebar links */\n.sidebar a {\ndisplay: block;\ncolor: black;\npadding: 16px;\ntext-decoration: none;\n}\n\n/* Active/current link */\n.sidebar a.active {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Links on mouse-over */\n.sidebar a:hover:not(.active) {\nbackground-color: #555;\ncolor: white;\n}\n\n/* Page content. The value of the margin-left property should match the value of the sidebar's width property */\ndiv.content {\nmargin-left: 200px;\npadding: 1px 16px;\nheight: 1000px;\n}\n\n/* On screens that are less than 700px wide, make the sidebar into a topbar */\n@media screen and (max-width: 700px) {\n.sidebar {\nwidth: 100%;\nheight: auto;\nposition: relative;\n}\n.sidebar a {float: left;}\ndiv.content {margin-left: 0;}\n}\n\n/* On screens that are less than 400px, display the bar vertically, instead of horizontally */\n@media screen and (max-width: 400px) {\n.sidebar a {\ntext-align: center;\nfloat: none;\n}\n}"
      ]
    },
    {
      "title": "How TO - Full screen Overlay Navigation",
      "summary": "Learn how to create a full screen overlay navigation menu.\nClick on the buttons below to see how it works:\nCreate a Full screen Overlay Navigation\nExample\nExample\nREMOVE ADS\nThe example below slides in the overlay navigation menu from left to right (0 to 100% width), when it is triggered:\nSlide in from the side\nThe example below slides in the overlay navigation menu downwards from the top (0 to 100% height).\nNote: In this example, note that the CSS is slightly different from the one above (default height is now 0, width is 100% and overflow-y is hidden (disable vertical scroll, except for small screens)):\nSlide down from the top\nThis example opens the navigation menu without animation:\nOpen the menu without animation\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<!-- The overlay -->\n<div id=\"myNav\" class=\"overlay\">\n\n<!-- Button to close the overlay navigation -->\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\n\n<!-- Overlay content -->\n<div class=\"overlay-content\">\n<a href=\"#\">About</a>\n<a href=\"#\">Services</a>\n<a href=\"#\">Clients</a>\n<a href=\"#\">Contact</a>\n</div>\n\n</div>\n\n<!-- Use any element to open/show the overlay navigation menu -->\n<span onclick=\"openNav()\">open</span>",
        "/* The Overlay (background) */\n.overlay {\n/* Height & width depends on how you want to reveal the overlay (see JS below) */\nheight: 100%;\nwidth: 0;\nposition: fixed; /* Stay in place */\nz-index: 1; /* Sit on top */\nleft: 0;\ntop: 0;\nbackground-color: rgb(0,0,0); /* Black fallback color */\nbackground-color: rgba(0,0,0, 0.9); /* Black w/opacity */\noverflow-x: hidden; /* Disable horizontal scroll */\ntransition: 0.5s; /* 0.5 second transition effect to slide in or slide down the overlay (height or width, depending on reveal) */\n}\n\n/* Position the content inside the overlay */\n.overlay-content {\nposition: relative;\ntop: 25%; /* 25% from the top */\nwidth: 100%; /* 100% width */\ntext-align: center; /* Centered text/links */\nmargin-top: 30px; /* 30px top margin to avoid conflict with the close button on smaller screens */\n}\n\n/* The navigation links inside the overlay */\n.overlay a {\npadding: 8px;\ntext-decoration: none;\nfont-size: 36px;\ncolor: #818181;\ndisplay: block; /* Display block instead of inline */\ntransition: 0.3s; /* Transition effects on hover (color) */\n}\n\n/* When you mouse over the navigation links, change their color */\n.overlay a:hover, .overlay a:focus {\ncolor: #f1f1f1;\n}\n\n/* Position the close button (top right corner) */\n.overlay .closebtn {\nposition: absolute;\ntop: 20px;\nright: 45px;\nfont-size: 60px;\n}\n\n/* When the height of the screen is less than 450 pixels, change the font-size of the links and position the close button again, so they don't overlap */\n@media screen and (max-height: 450px) {\n.overlay a {font-size: 20px}\n.overlay .closebtn {\nfont-size: 40px;\ntop: 15px;\nright: 35px;\n}\n}",
        "/* Open when someone clicks on the span element */\nfunction openNav() {\ndocument.getElementById(\"myNav\").style.width = \"100%\";\n}\n\n/* Close when someone clicks on the \"x\" symbol inside the overlay */\nfunction closeNav() {\ndocument.getElementById(\"myNav\").style.width = \"0%\";\n}",
        "/* Open */\nfunction openNav() {\ndocument.getElementById(\"myNav\").style.height = \"100%\";\n}\n\n/* Close */\nfunction closeNav() {\ndocument.getElementById(\"myNav\").style.height = \"0%\";\n}",
        "/* Open */\nfunction openNav() {\ndocument.getElementById(\"myNav\").style.display = \"block\";\n}\n\n/* Close */\nfunction closeNav() {\ndocument.getElementById(\"myNav\").style.display = \"none\";\n}"
      ]
    },
    {
      "title": "How TO - Off-Canvas Menu",
      "summary": "Learn how to create an off-canvas menu.\nCreate an Off-Canvas Menu\nExample\nExample\nREMOVE ADS\nOff-Canvas Menu\nThe example below also slides in the side navigation, and pushes the page content to the right, only this time, we add a black background color with a 40% opacity to the body element, to \"highlight\" the side navigation:\nOff-Canvas Menu w/ opacity\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div id=\"mySidenav\" class=\"sidenav\">\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\n<a href=\"#\">About</a>\n<a href=\"#\">Services</a>\n<a href=\"#\">Clients</a>\n<a href=\"#\">Contact</a>\n</div>\n\n<!-- Use any element to open the sidenav -->\n<span onclick=\"openNav()\">open</span>\n\n<!-- Add all page content inside this div if you want the side nav to push page content to the right (not used if you only want the sidenav to sit on top of the page -->\n<div id=\"main\">\n...\n</div>",
        "/* The side navigation menu */\n.sidenav {\nheight: 100%; /* 100% Full-height */\nwidth: 0; /* 0 width - change this with JavaScript */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Stay on top */\ntop: 0;\nleft: 0;\nbackground-color: #111; /* Black*/\noverflow-x: hidden; /* Disable horizontal scroll */\npadding-top: 60px; /* Place content 60px from the top */\ntransition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */\n}\n\n/* The navigation menu links */\n.sidenav a {\npadding: 8px 8px 8px 32px;\ntext-decoration: none;\nfont-size: 25px;\ncolor: #818181;\ndisplay: block;\ntransition: 0.3s;\n}\n\n/* When you mouse over the navigation links, change their color */\n.sidenav a:hover {\ncolor: #f1f1f1;\n}\n\n/* Position and style the close button (top right corner) */\n.sidenav .closebtn {\nposition: absolute;\ntop: 0;\nright: 25px;\nfont-size: 36px;\nmargin-left: 50px;\n}\n\n/* Style page content - use this if you want to push the page content to the right when you open the side navigation */\n#main {\ntransition: margin-left .5s;\npadding: 20px;\n}\n\n/* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */\n@media screen and (max-height: 450px) {\n.sidenav {padding-top: 15px;}\n.sidenav a {font-size: 18px;}\n}",
        "/* Set the width of the side navigation to 250px and the left margin of the page content to 250px */\nfunction openNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"250px\";\ndocument.getElementById(\"main\").style.marginLeft = \"250px\";\n}\n\n/* Set the width of the side navigation to 0 and the left margin of the page content to 0 */\nfunction closeNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"0\";\ndocument.getElementById(\"main\").style.marginLeft = \"0\";\n}",
        "/* Set the width of the side navigation to 250px and the left margin of the page content to 250px and add a black background color to body */\nfunction openNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"250px\";\ndocument.getElementById(\"main\").style.marginLeft = \"250px\";\ndocument.body.style.backgroundColor = \"rgba(0,0,0,0.4)\";\n}\n\n/* Set the width of the side navigation to 0 and the left margin of the page content to 0, and the background color of body to white */\nfunction closeNav() {\ndocument.getElementById(\"mySidenav\").style.width = \"0\";\ndocument.getElementById(\"main\").style.marginLeft = \"0\";\ndocument.body.style.backgroundColor = \"white\";\n}"
      ]
    },
    {
      "title": "How TO - Side Navigation Buttons",
      "summary": "Learn how to create hoverable side navigation buttons with CSS.\nTry it Yourself »\nHow To Create a Hoverable Sidenav\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div id=\"mySidenav\" class=\"sidenav\">\n<a href=\"#\" id=\"about\">About</a>\n<a href=\"#\" id=\"blog\">Blog</a>\n<a href=\"#\" id=\"projects\">Projects</a>\n<a href=\"#\" id=\"contact\">Contact</a>\n</div>",
        "/* Style the links inside the sidenav */\n#mySidenav a {\nposition: absolute; /* Position them relative to the browser window */\nleft: -80px; /* Position them outside of the screen */\ntransition: 0.3s; /* Add transition on hover */\npadding: 15px; /* 15px padding */\nwidth: 100px; /* Set a specific width */\ntext-decoration: none; /* Remove underline */\nfont-size: 20px; /* Increase font size */\ncolor: white; /* White text color */\nborder-radius: 0 5px 5px 0; /* Rounded corners on the top right and bottom right side */\n}\n\n#mySidenav a:hover {\nleft: 0; /* On mouse-over, make the elements appear as they should */\n}\n\n/* The about link: 20px from the top with a green background */\n#about {\ntop: 20px;\nbackground-color: #04AA6D;\n}\n\n#blog {\ntop: 80px;\nbackground-color: #2196F3; /* Blue */\n}\n\n#projects {\ntop: 140px;\nbackground-color: #f44336; /* Red */\n}\n\n#contact {\ntop: 200px;\nbackground-color: #555 /* Light Black */\n}"
      ]
    },
    {
      "title": "How TO - Sidebar with Icons",
      "summary": "Learn how to create a side navigation menu with icons, using CSS.\nTry it Yourself »\nHow To Create a Sidebar with Icons\nExample\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.\nTip: If you want to create a navigation bar that only contains icons, read our How To - Icon Bar Tutorial.",
      "examples": [
        "<!-- Load an icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- The sidebar -->\n<div class=\"sidebar\">\n<a href=\"#home\"><i class=\"fa fa-fw fa-home\"></i> Home</a>\n<a href=\"#services\"><i class=\"fa fa-fw fa-wrench\"></i> Services</a>\n<a href=\"#clients\"><i class=\"fa fa-fw fa-user\"></i> Clients</a>\n<a href=\"#contact\"><i class=\"fa fa-fw fa-envelope\"></i> Contact</a>\n</div>",
        "/* Style the sidebar - fixed full height */\n.sidebar {\nheight: 100%;\nwidth: 160px;\nposition: fixed;\nz-index: 1;\ntop: 0;\nleft: 0;\nbackground-color: #111;\noverflow-x: hidden;\npadding-top: 16px;\n}\n\n/* Style sidebar links */\n.sidebar a {\npadding: 6px 8px 6px 16px;\ntext-decoration: none;\nfont-size: 20px;\ncolor: #818181;\ndisplay: block;\n}\n\n/* Style links on mouse-over */\n.sidebar a:hover {\ncolor: #f1f1f1;\n}\n\n/* Style the main content */\n.main {\nmargin-left: 160px; /* Same as the width of the sidenav */\npadding: 0px 10px;\n}\n\n/* Add media queries for small screens (when the height of the screen is less than 450px, add a smaller padding and font-size) */\n@media screen and (max-height: 450px) {\n.sidebar {padding-top: 15px;}\n.sidebar a {font-size: 18px;}\n}"
      ]
    },
    {
      "title": "How TO - Horizontal Scroll Menu",
      "summary": "Learn how to create a horizontal scrollable menu with CSS.\nTry it Yourself »\nHow To Create a Horizontal Scrollable Menu\nExample\nThe trick to make the navbar scrollable is by using overflow:auto and white-space: nowrap:\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"scrollmenu\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n...\n</div>",
        "div.scrollmenu {\nbackground-color: #333;\noverflow: auto;\nwhite-space: nowrap;\n}\n\ndiv.scrollmenu a {\ndisplay: inline-block;\ncolor: white;\ntext-align: center;\npadding: 14px;\ntext-decoration: none;\n}\n\ndiv.scrollmenu a:hover {\nbackground-color: #777;\n}",
        "overflow:auto",
        "white-space: nowrap"
      ]
    },
    {
      "title": "How TO - Vertical Menu",
      "summary": "Learn how to create a vertical menu with CSS.\nVertical Menu\nTry it Yourself »\nHow To Create a Vertical Button Group\nExample\nExample\nREMOVE ADS\nVertical Scroll Menu\nSet a specific height and add the overflow property if you want a vertical scroll menu:\nExample\nTip: Check out our How To - Side Navigation tutorial to learn how to create a fixed, full-height side navigation.",
      "examples": [
        "<div class=\"vertical-menu\">\n<a href=\"#\" class=\"active\">Home</a>\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n<a href=\"#\">Link 4</a>\n</div>",
        ".vertical-menu {\nwidth: 200px; /* Set a width if you like */\n}\n\n.vertical-menu a {\nbackground-color: #eee; /* Grey background color */\ncolor: black; /* Black text color */\ndisplay: block; /* Make the links appear below each other */\npadding: 12px; /* Add some padding */\ntext-decoration: none; /* Remove underline from links */\n}\n\n.vertical-menu a:hover {\nbackground-color: #ccc; /* Dark grey background on mouse-over */\n}\n\n.vertical-menu a.active {\nbackground-color: #04AA6D; /* Add a green color to the \"active/current\" link */\ncolor: white;\n}",
        ".vertical-menu {\nwidth: 200px;\nheight: 150px;\noverflow-y: auto;\n}",
        "height",
        "overflow"
      ]
    },
    {
      "title": "How TO - Bottom Navigation",
      "summary": "Learn how to create a bottom navigation menu with CSS.\nBottom Navigation Menu\nTry it Yourself »\nCreate A Bottom Navigation Menu\nExample\nExample\nTip: To create a mobile-friendly, responsive bottom navigation bar, read our How To - Responsive Bottom Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"navbar\">\n<a href=\"#home\" class=\"active\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n</div>",
        "/* Place the navbar at the bottom of the page, and make it stick */\n.navbar {\nbackground-color: #333;\noverflow: hidden;\nposition: fixed;\nbottom: 0;\nwidth: 100%;\n}\n\n/* Style the links inside the navigation bar */\n.navbar a {\nfloat: left;\ndisplay: block;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.navbar a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Add a color to the active/current link */\n.navbar a.active {\nbackground-color: #04AA6D;\ncolor: white;\n}"
      ]
    },
    {
      "title": "How TO - Responsive Bottom Navigation",
      "summary": "Learn how to create a responsive bottom navigation menu with CSS and JavaScript.\nResponsive Bottom Navigation\nResize the browser window to see how the responsive navigation menu works:\nTry it Yourself »\nCreate A Responsive Bottom Navbar\nExample\nThe link with class=\"icon\" is used to open and close the navbar on small screens.\nExample\nREMOVE ADS\nAdd media queries:\nExample\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"navbar\" id=\"myNavbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n<a href=\"javascript:void(0);\" class=\"icon\" onclick=\"myFunction()\">&#9776;</a>\n</div>",
        "/* Place the navbar at the bottom of the page, and make it stick */\n.navbar {\nbackground-color: #333;\noverflow: hidden;\nposition: fixed;\nbottom: 0;\nwidth: 100%;\n}\n\n/* Style the links inside the navigation bar */\n.navbar a {\nfloat: left;\ndisplay: block;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.navbar a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Add a green background color to the active link */\n.navbar a.active {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Hide the link that should open and close the navbar on small screens */\n.navbar .icon {\ndisplay: none;\n}",
        "/* When the screen is less than 600 pixels wide, hide all links, except for the first one (\"Home\"). Show the link that contains should open and close the navbar (.icon) */\n@media screen and (max-width: 600px) {\n.navbar a:not(:first-child) {display: none;}\n.navbar a.icon {\nfloat: right;\ndisplay: block;\n}\n}\n\n/* The \"responsive\" class is added to the navbar with JavaScript when the user clicks on the icon. This class makes the navbar look good on small screens (display the links vertically instead of horizontally) */\n@media screen and (max-width: 600px) {\n.navbar.responsive a.icon {\nposition: absolute;\nright: 0;\nbottom: 0;\n}\n.navbar.responsive a {\nfloat: none;\ndisplay: block;\ntext-align: left;\n}\n}",
        "/* Toggle between adding and removing the \"responsive\" class to the navbar when the user clicks on the icon */\nfunction myFunction() {\nvar x = document.getElementById(\"myNavbar\");\nif (x.className === \"navbar\") {\nx.className += \" responsive\";\n} else {\nx.className = \"navbar\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Bottom Border Nav Links",
      "summary": "Learn how to create bottom bordered (underline) navigation links with CSS.\nBottom Border Nav Links\nTry it Yourself »\nCreate A Navigation Menu\nExample\nExample\nTip: To create mobile-friendly, responsive navigation bars, read our How To - Responsive Top Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"topnav\">\n<a href=\"#home\" class=\"active\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n</div>",
        "/* Add a black background color to the top navigation */\n.topnav {\nbackground-color: #333;\noverflow: hidden;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ndisplay: block;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\nborder-bottom: 3px solid transparent;\n}\n\n.topnav a:hover {\nborder-bottom: 3px solid red;\n}\n\n.topnav a.active {\nborder-bottom: 3px solid red;\n}"
      ]
    },
    {
      "title": "How TO - Right Aligned Menu Buttons",
      "summary": "Learn how to create a navigation bar with left-aligned and right-aligned links.\nRight Aligned Menu Links\nTry it Yourself »\nCreate A Top Navigation Bar\nExample\nExample\nTip: To create mobile-friendly, responsive navigation bars, read our How To - Responsive Top Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"topnav\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<div class=\"topnav-right\">\n<a href=\"#search\">Search</a>\n<a href=\"#about\">About</a>\n</div>\n</div>",
        "/* Add a black background color to the top navigation */\n.topnav {\nbackground-color: #333;\noverflow: hidden;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Add a color to the active/current link */\n.topnav a.active {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Right-aligned section inside the top navigation */\n.topnav-right {\nfloat: right;\n}"
      ]
    },
    {
      "title": "How TO - Centered Top Navigation",
      "summary": "Learn how to create a navigation bar with a centered link/logo.\nCentered Menu Link\nTry it Yourself »\nCreate a Top Navigation Bar\nExample\nExample\nTip: To create mobile-friendly, responsive navigation bars, read our How To - Responsive Top Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<!-- Top navigation -->\n<div class=\"topnav\">\n\n<!-- Centered link -->\n<div class=\"topnav-centered\">\n<a href=\"#home\" class=\"active\">Home</a>\n</div>\n\n<!-- Left-aligned links (default) -->\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n\n<!-- Right-aligned links -->\n<div class=\"topnav-right\">\n<a href=\"#search\">Search</a>\n<a href=\"#about\">About</a>\n</div>\n\n</div>",
        "/* Add a black background color to the top navigation */\n.topnav {\nposition: relative;\nbackground-color: #333;\noverflow: hidden;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Change the color of links on hover */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Add a color to the active/current link */\n.topnav a.active {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Centered section inside the top navigation */\n.topnav-centered a {\nfloat: none;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n}\n\n/* Right-aligned section inside the top navigation */\n.topnav-right {\nfloat: right;\n}\n\n/* Responsive navigation menu - display links on top of each other instead of next to each other (for mobile devices) */\n@media screen and (max-width: 600px) {\n.topnav a, .topnav-right {\nfloat: none;\ndisplay: block;\n}\n\n.topnav-centered a {\nposition: relative;\ntop: 0;\nleft: 0;\ntransform: none;\n}\n}"
      ]
    },
    {
      "title": "How TO - Equal Width Navbar Links",
      "summary": "Learn how to create a navigation bar with equal-width navigation links.\nEqual Width Menu\nTry it Yourself »\nCreate a Responsive Navigation Bar\nExample\nExample\nEqual Width Navigation Links with Icons\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<!-- The navigation menu -->\n<div class=\"navbar\">\n<a class=\"active\" href=\"#\">Home</a>\n<a href=\"#\">Search</a>\n<a href=\"#\">Contact</a>\n<a href=\"#\">Login</a>\n</div>",
        "/* Style the navigation menu */\n.navbar {\nwidth: 100%;\nbackground-color: #555;\noverflow: auto;\n}\n\n/* Navigation links */\n.navbar a {\nfloat: left;\npadding: 12px;\ncolor: white;\ntext-decoration: none;\nfont-size: 17px;\nwidth: 25%; /* Four equal-width links. If you have two links, use 50%, and 33.33% for three links, etc.. */\ntext-align: center; /* If you want the text to be centered */\n}\n\n/* Add a background color on mouse-over */\n.navbar a:hover {\nbackground-color: #000;\n}\n\n/* Style the current/active link */\n.navbar a.active {\nbackground-color: #04AA6D;\n}\n\n/* Add responsiveness - on screens less than 500px, make the navigation links appear on top of each other, instead of next to each other */\n@media screen and (max-width: 500px) {\n.navbar a {\nfloat: none;\ndisplay: block;\nwidth: 100%;\ntext-align: left; /* If you want the text to be left-aligned on small screens */\n}\n}"
      ]
    },
    {
      "title": "How TO - Fixed Menu",
      "summary": "Learn how to create a \"fixed\" menu with CSS.\nTry it Yourself »\nHow To Create a Fixed Top Menu\nExample\nTo create a fixed top menu, use position:fixed and top:0. Note that the fixed menu will overlay your other content. To fix this, add a margin-top (to the content) that is equal or larger than the height of your menu.\nExample\nHow To Create a Fixed Bottom Menu\nTo create a fixed bottom menu, use position:fixed and bottom:0:\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"navbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n</div>\n\n<div class=\"main\">\n<p>Some text some text some text some text..</p>\n</div>",
        "/* The navigation bar */\n.navbar {\noverflow: hidden;\nbackground-color: #333;\nposition: fixed; /* Set the navbar to fixed position */\ntop: 0; /* Position the navbar at the top of the page */\nwidth: 100%; /* Full width */\n}\n\n/* Links inside the navbar */\n.navbar a {\nfloat: left;\ndisplay: block;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n\n/* Change background on mouse-over */\n.navbar a:hover {\nbackground: #ddd;\ncolor: black;\n}\n\n/* Main content */\n.main {\nmargin-top: 30px; /* Add a top margin to avoid content overlay */\n}",
        "/* The navigation bar */\n.navbar {\nposition: fixed; /* Set the navbar to fixed position */\nbottom: 0; /* Position the navbar at the bottom of the page */\nwidth: 100%; /* Full width */\n}\n\n/* Main content */\n.main {\nmargin-bottom: 30px; /* Add a bottom margin to avoid content overlay */\n}",
        "position:fixed",
        "top:0",
        "margin-top",
        "bottom:0"
      ]
    },
    {
      "title": "How TO - Slide Down a Bar on Scroll",
      "summary": "Learn how to slide down a navigation bar on scroll with CSS and JavaScript.\nTry it Yourself »\nHow To Slide Down a Bar\nCreate a navigation bar:\nExample\nStyle the navigation bar:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div id=\"navbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n</div>",
        "#navbar {\nbackground-color: #333; /* Black background color */\nposition: fixed; /* Make it stick/fixed */\ntop: -50px; /* Hide the navbar 50 px outside of the top view */\nwidth: 100%; /* Full width */\ntransition: top 0.3s; /* Transition effect when sliding down (and up) */\n}\n\n/* Style the navbar links */\n#navbar a {\nfloat: left;\ndisplay: block;\ncolor: white;\ntext-align: center;\npadding: 15px;\ntext-decoration: none;\n}\n\n#navbar a:hover {\nbackground-color: #ddd;\ncolor: black;\n}",
        "// When the user scrolls down 20px from the top of the document, slide down the navbar\n// When the user scrolls to the top of the page, slide up the navbar (50px out of the top view)\nwindow.onscroll = function() {scrollFunction()};\n\nfunction scrollFunction() {\nif (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\ndocument.getElementById(\"navbar\").style.top = \"0\";\n} else {\ndocument.getElementById(\"navbar\").style.top = \"-50px\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Hide Menu on Scroll",
      "summary": "Learn how to hide a navigation menu on scroll down with CSS and JavaScript.\nTry it Yourself »\nHow To Hide Navbar on Scroll Down\nCreate a navigation bar:\nExample\nStyle the navigation bar:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div id=\"navbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n</div>",
        "#navbar {\nbackground-color: #333; /* Black background color */\nposition: fixed; /* Make it stick/fixed */\ntop: 0; /* Stay on top */\nwidth: 100%; /* Full width */\ntransition: top 0.3s; /* Transition effect when sliding down (and up) */\n}\n\n/* Style the navbar links */\n#navbar a {\nfloat: left;\ndisplay: block;\ncolor: white;\ntext-align: center;\npadding: 15px;\ntext-decoration: none;\n}\n\n#navbar a:hover {\nbackground-color: #ddd;\ncolor: black;\n}",
        "/* When the user scrolls down, hide the navbar. When the user scrolls up, show the navbar */\nvar prevScrollpos = window.pageYOffset;\nwindow.onscroll = function() {\nvar currentScrollPos = window.pageYOffset;\nif (prevScrollpos > currentScrollPos) {\ndocument.getElementById(\"navbar\").style.top = \"0\";\n} else {\ndocument.getElementById(\"navbar\").style.top = \"-50px\";\n}\nprevScrollpos = currentScrollPos;\n}"
      ]
    },
    {
      "title": "How TO - Shrink Navigation Menu on Scroll",
      "summary": "Learn how to resize a navigation bar on scroll with CSS and JavaScript.\nTry it Yourself »\nHow To Shrink Navbar on Scroll\nCreate a navigation bar:\nExample\nStyle the navigation bar:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div id=\"navbar\">\n<a href=\"#default\" id=\"logo\">CompanyLogo</a>\n<div id=\"navbar-right\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n</div>\n</div>",
        "/* Create a sticky/fixed navbar */\n#navbar {\noverflow: hidden;\nbackground-color: #f1f1f1;\npadding: 90px 10px; /* Large padding which will shrink on scroll (using JS) */\ntransition: 0.4s; /* Adds a transition effect when the padding is decreased */\nposition: fixed; /* Sticky/fixed navbar */\nwidth: 100%;\ntop: 0; /* At the top */\nz-index: 99;\n}\n\n/* Style the navbar links */\n#navbar a {\nfloat: left;\ncolor: black;\ntext-align: center;\npadding: 12px;\ntext-decoration: none;\nfont-size: 18px;\nline-height: 25px;\nborder-radius: 4px;\n}\n\n/* Style the logo */\n#navbar #logo {\nfont-size: 35px;\nfont-weight: bold;\ntransition: 0.4s;\n}\n\n/* Links on mouse-over */\n#navbar a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Style the active/current link */\n#navbar a.active {\nbackground-color: dodgerblue;\ncolor: white;\n}\n\n/* Display some links to the right */\n#navbar-right {\nfloat: right;\n}\n\n/* Add responsiveness - on screens less than 580px wide, display the navbar vertically instead of horizontally */\n@media screen and (max-width: 580px) {\n#navbar {\npadding: 20px 10px !important; /* Use !important to make sure that JavaScript doesn't override the padding on small screens */\n}\n#navbar a {\nfloat: none;\ndisplay: block;\ntext-align: left;\n}\n#navbar-right {\nfloat: none;\n}\n}",
        "// When the user scrolls down 80px from the top of the document, resize the navbar's padding and the logo's font size\nwindow.onscroll = function() {scrollFunction()};\n\nfunction scrollFunction() {\nif (document.body.scrollTop > 80 || document.documentElement.scrollTop > 80) {\ndocument.getElementById(\"navbar\").style.padding = \"30px 10px\";\ndocument.getElementById(\"logo\").style.fontSize = \"25px\";\n} else {\ndocument.getElementById(\"navbar\").style.padding = \"80px 10px\";\ndocument.getElementById(\"logo\").style.fontSize = \"35px\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Sticky/Affix Navbar",
      "summary": "Learn how to create a \"sticky\" navbar with CSS.\nTry it Yourself »\nHow To Create a Sticky Navbar\nCreate a navigation bar:\nExample\nStyle the navigation bar; add position:sticky and top:0 to make the navbar stick when you reach its scroll position:\nExample\nTry it Yourself »\nAn element with position: sticky; is positioned based on the user's scroll position.\nA sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it \"sticks\" in place (like position:fixed).\nNote: You must specify at least one of top, right, bottom or left for sticky positioning to work.\nTo learn more about CSS positoning, read our CSS Position tutorial.",
      "examples": [
        "<div id=\"navbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n</div>",
        "/* Style the navbar */\n#navbar {\nposition: sticky;\ntop: 0;\noverflow: hidden;\nbackground-color: #333;\n}\n\n/* Navbar links */\n#navbar a {\nfloat: left;\ndisplay: block;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px;\ntext-decoration: none;\n}\n\n/* Page content */\n.content {\npadding: 16px;\n}",
        "position:sticky",
        "top:0",
        "position: sticky;",
        "relative",
        "fixed",
        "top",
        "right",
        "bottom",
        "left"
      ]
    },
    {
      "title": "How TO - Navbar on Image",
      "summary": "Learn how to add a navigation menu on an image with CSS.\nTry it Yourself »\nHow To Create a Navbar on Image\nCreate a navigation bar:\nExample\nStyle the navigation bar:\nExample",
      "examples": [
        "<div class=\"bg-img\">\n<div class=\"container\">\n<div class=\"topnav\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n</div>\n</div>\n</div>",
        ".bg-img {\n/* The image used */\nbackground-image: url(\"img_nature.jpg\");\n\nmin-height: 380px;\n\n/* Center and scale the image nicely */\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n\n/* Needed to position the navbar */\nposition: relative;\n}\n\n/* Position the navbar container inside the image */\n.container {\nposition: absolute;\nmargin: 20px;\nwidth: auto;\n}\n\n/* The navbar */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\n}\n\n/* Navbar links */\n.topnav a {\nfloat: left;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}"
      ]
    },
    {
      "title": "How TO - Hoverable Dropdown",
      "summary": "Learn how to create a hoverable dropdown menu with CSS.\nDropdown\nA dropdown menu is a toggleable menu that allows the user to choose one value from a predefined list:\nCreate A Hoverable Dropdown\nCreate a dropdown menu that appears when the user moves the mouse over an element.\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropdown menu and add the dropdown links inside it.\nWrap a <div> element around the button and the <div> to position the dropdown menu correctly with CSS.\nExample\nExample Explained\nWe have styled the dropdown button with a background-color, padding, etc.\nThe .dropdown class uses position:relative, which is needed when we want the dropdown content to be placed right below the dropdown button (using position:absolute).\nThe .dropdown-content class holds the actual dropdown menu. It is hidden by default, and will be displayed on hover (see below). Note the min-width is set to 160px. Feel free to change this. Tip: If you want the width of the dropdown content to be as wide as the dropdown button, set the width to 100% (and overflow:auto to enable scroll on small screens).\nInstead of using a border, we have used the box-shadow property to make the dropdown menu look like a \"card\". We also use z-index to place the dropdown in front of other elements.\nThe :hover selector is used to show the dropdown menu when the user moves the mouse over the dropdown button.\nREMOVE ADS\nRight-aligned dropdown\nExample\nDropdown Menu in Navbar\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Clickable Dropdowns to learn more about clickable dropdowns",
      "examples": [
        "<div class=\"dropdown\">\n<button class=\"dropbtn\">Dropdown</button>\n<div class=\"dropdown-content\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>",
        "/* Dropdown Button */\n.dropbtn {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 16px;\nfont-size: 16px;\nborder: none;\n}\n\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\nposition: relative;\ndisplay: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f1f1f1;\nmin-width: 160px;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\n}\n\n/* Change color of dropdown links on hover */\n.dropdown-content a:hover {background-color: #ddd;}\n\n/* Show the dropdown menu on hover */\n.dropdown:hover .dropdown-content {display: block;}\n\n/* Change the background color of the dropdown button when the dropdown content is shown */\n.dropdown:hover .dropbtn {background-color: #3e8e41;}",
        ".dropdown",
        "position:relative",
        "position:absolute",
        ".dropdown-content",
        "min-width",
        "width",
        "overflow:auto",
        "box-shadow",
        ":hover"
      ]
    },
    {
      "title": "How TO - Clickable Dropdown",
      "summary": "Learn how to create a clickable dropdown menu with CSS and JavaScript.\nDropdown\nA dropdown menu is a toggleable menu that allows the user to choose one value from a predefined list:\nCreate a Clickable Dropdown\nCreate a dropdown menu that appears when the user clicks on a button.\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropdown menu and add the dropdown links inside it.\nWrap a <div> element around the button and the <div> to position the dropdown menu correctly with CSS.\nExample\nExample Explained\nWe have styled the dropdown button with a background-color, padding, hover effect, etc.\nThe .dropdown class uses position:relative, which is needed when we want the dropdown content to be placed right below the dropdown button (using position:absolute).\nThe .dropdown-content class holds the actual dropdown menu. It is hidden by default, and will be displayed on hover (see below). Note the min-width is set to 160px. Feel free to change this. Tip: If you want the width of the dropdown content to be as wide as the dropdown button, set the width to 100% (and overflow:auto to enable scroll on small screens).\nInstead of using a border, we have used the box-shadow property to make the dropdown menu look like a \"card\". We also use z-index to place the dropdown in front of other elements.\nREMOVE ADS\nExample\nRight-aligned dropdown\nExample\nDropdown Menu in Navbar\nExample\nSearch (Filter) Dropdown\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Hoverable Dropdowns to learn more about hoverable dropdowns",
      "examples": [
        "<div class=\"dropdown\">\n<button onclick=\"myFunction()\" class=\"dropbtn\">Dropdown</button>\n<div id=\"myDropdown\" class=\"dropdown-content\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>",
        "/* Dropdown Button */\n.dropbtn {\nbackground-color: #3498DB;\ncolor: white;\npadding: 16px;\nfont-size: 16px;\nborder: none;\ncursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n.dropbtn:hover, .dropbtn:focus {\nbackground-color: #2980B9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\nposition: relative;\ndisplay: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f1f1f1;\nmin-width: 160px;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\n}\n\n/* Change color of dropdown links on hover */\n.dropdown-content a:hover {background-color: #ddd;}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n.show {display:block;}",
        "/* When the user clicks on the button,\ntoggle between hiding and showing the dropdown content */\nfunction myFunction() {\ndocument.getElementById(\"myDropdown\").classList.toggle(\"show\");\n}\n\n// Close the dropdown menu if the user clicks outside of it\nwindow.onclick = function(event) {\nif (!event.target.matches('.dropbtn')) {\nvar dropdowns = document.getElementsByClassName(\"dropdown-content\");\nvar i;\nfor (i = 0; i < dropdowns.length; i++) {\nvar openDropdown = dropdowns[i];\nif (openDropdown.classList.contains('show')) {\nopenDropdown.classList.remove('show');\n}\n}\n}\n}",
        ".dropdown",
        "position:relative",
        "position:absolute",
        ".dropdown-content",
        "min-width",
        "width",
        "overflow:auto",
        "box-shadow"
      ]
    },
    {
      "title": "How TO - Cascading Dropdown List",
      "summary": "Learn how to create a cascading dropdown list with JavaScript.\nCreate Three Dropdown Lists\nCreate three dropdown lists, inside an HTML form.\nThe second and third dropdown list will display different options, depending on the value selected in the parent dropdown list.\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Hoverable Dropdowns to learn more about hoverable dropdowns.",
      "examples": [
        "<form name=\"form1\" id=\"form1\" action=\"/action_page.php\">\nSubjects: <select name=\"subject\" id=\"subject\">\n<option value=\"\" selected=\"selected\">Select subject</option>\n</select>\n<br><br>\nTopics: <select name=\"topic\" id=\"topic\">\n<option value=\"\" selected=\"selected\">Please select subject first</option>\n</select>\n<br><br>\nChapters: <select name=\"chapter\" id=\"chapter\">\n<option value=\"\" selected=\"selected\">Please select topic first</option>\n</select>\n<br><br>\n<input type=\"submit\" value=\"Submit\">\n</form>",
        "var subjectObject = {\n\"Front-end\": {\n\"HTML\": [\"Links\", \"Images\", \"Tables\", \"Lists\"],\n\"CSS\": [\"Borders\", \"Margins\", \"Backgrounds\", \"Float\"],\n\"JavaScript\": [\"Variables\", \"Operators\", \"Functions\", \"Conditions\"]\n},\n\"Back-end\": {\n\"PHP\": [\"Variables\", \"Strings\", \"Arrays\"],\n\"SQL\": [\"SELECT\", \"UPDATE\", \"DELETE\"]\n}\n}\nwindow.onload = function() {\nvar subjectSel = document.getElementById(\"subject\");\nvar topicSel = document.getElementById(\"topic\");\nvar chapterSel = document.getElementById(\"chapter\");\nfor (var x in subjectObject) {\nsubjectSel.options[subjectSel.options.length] = new Option(x, x);\n}\nsubjectSel.onchange = function() {\n//empty Chapters- and Topics- dropdowns\nchapterSel.length = 1;\ntopicSel.length = 1;\n//display correct values\nfor (var y in subjectObject[this.value]) {\ntopicSel.options[topicSel.options.length] = new Option(y, y);\n}\n}\ntopicSel.onchange = function() {\n//empty Chapters dropdown\nchapterSel.length = 1;\n//display correct values\nvar z = subjectObject[subjectSel.value][this.value];\nfor (var i = 0; i < z.length; i++) {\nchapterSel.options[chapterSel.options.length] = new Option(z[i], z[i]);\n}\n}\n}"
      ]
    },
    {
      "title": "How TO - Dropdown Navbar",
      "summary": "Learn how to create a dropdown navigation bar.\nDropdown Menu in Navbar\nTry it Yourself »\nCreate A Dropdown Navbar\nCreate a dropdown menu that appears when the user moves the mouse over an element inside a navigation bar.\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropdown menu and add the dropdown links inside it.\nWrap a <div> element around the button and the <div> to position the dropdown menu correctly with CSS.\nExample\nExample Explained\nWe have styled the navigation bar and the navbar links with a background-color, padding, etc.\nWe have styled the dropdown button with a background-color, padding, etc.\nThe .dropdown class is the container for .dropdown-content. Since this is a <div> element, and not an <a> element, we have to float it to make sure that it stays next to the links.\nThe .dropdown-content class holds the actual dropdown menu. It is hidden by default, and will be displayed on hover (see below). Note the min-width is set to 160px. Feel free to change this.\nInstead of using a border, we have used the box-shadow property to make the dropdown menu look like a \"card\". We also use z-index to place the dropdown in front of other elements.\nThe :hover selector is used to show the dropdown menu when the user moves the mouse over the dropdown button.\nREMOVE ADS\nClickable Dropdown in Navbar\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Clickable Dropdowns to learn more about clickable dropdowns\nTip: Go to our CSS Navbar Tutorial to learn more about navbars.\nTip: Go to our Responsive Top Navigation to learn about how to create a responsive navbar.",
      "examples": [
        "<div class=\"navbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<div class=\"dropdown\">\n<button class=\"dropbtn\">Dropdown\n<i class=\"fa fa-caret-down\"></i>\n</button>\n<div class=\"dropdown-content\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>\n</div>",
        "/* Navbar container */\n.navbar {\noverflow: hidden;\nbackground-color: #333;\nfont-family: Arial;\n}\n\n/* Links inside the navbar */\n.navbar a {\nfloat: left;\nfont-size: 16px;\ncolor: white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n\n/* The dropdown container */\n.dropdown {\nfloat: left;\noverflow: hidden;\n}\n\n/* Dropdown button */\n.dropdown .dropbtn {\nfont-size: 16px;\nborder: none;\noutline: none;\ncolor: white;\npadding: 14px 16px;\nbackground-color: inherit;\nfont-family: inherit; /* Important for vertical align on mobile phones */\nmargin: 0; /* Important for vertical align on mobile phones */\n}\n\n/* Add a red background color to navbar links on hover */\n.navbar a:hover, .dropdown:hover .dropbtn {\nbackground-color: red;\n}\n\n/* Dropdown content (hidden by default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f9f9f9;\nmin-width: 160px;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\nfloat: none;\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\ntext-align: left;\n}\n\n/* Add a grey background color to dropdown links on hover */\n.dropdown-content a:hover {\nbackground-color: #ddd;\n}\n\n/* Show the dropdown menu on hover */\n.dropdown:hover .dropdown-content {\ndisplay: block;\n}",
        ".dropdown",
        ".dropdown-content",
        "min-width",
        "box-shadow",
        ":hover"
      ]
    },
    {
      "title": "How TO - Dropdown Sidebar",
      "summary": "Learn how to add a dropdown menu inside a side navigation.\nDropdown Menu in Sidenav\nTry it Yourself »\nCreate A Dropdown Sidebar\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropdown menu and add the dropdown links inside it. We will use the same styling for all links inside the sidenav.\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Clickable Dropdowns to learn more about clickable dropdowns\nTip: Go to our CSS Navbar Tutorial to learn more about navbars.\nTip: Go to our Side Navigation Tutorial to learn about how to create closable side navigations.",
      "examples": [
        "<div class=\"sidenav\">\n<a href=\"#about\">About</a>\n<a href=\"#services\">Services</a>\n<a href=\"#clients\">Clients</a>\n<a href=\"#contact\">Contact</a>\n<button class=\"dropdown-btn\">Dropdown\n<i class=\"fa fa-caret-down\"></i>\n</button>\n<div class=\"dropdown-container\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n<a href=\"#contact\">Search</a>\n</div>",
        "/* Fixed sidenav, full height */\n.sidenav {\nheight: 100%;\nwidth: 200px;\nposition: fixed;\nz-index: 1;\ntop: 0;\nleft: 0;\nbackground-color: #111;\noverflow-x: hidden;\npadding-top: 20px;\n}\n\n/* Style the sidenav links and the dropdown button */\n.sidenav a, .dropdown-btn {\npadding: 6px 8px 6px 16px;\ntext-decoration: none;\nfont-size: 20px;\ncolor: #818181;\ndisplay: block;\nborder: none;\nbackground: none;\nwidth:100%;\ntext-align: left;\ncursor: pointer;\noutline: none;\n}\n\n/* On mouse-over */\n.sidenav a:hover, .dropdown-btn:hover {\ncolor: #f1f1f1;\n}\n\n/* Main content */\n.main {\nmargin-left: 200px; /* Same as the width of the sidenav */\nfont-size: 20px; /* Increased text to enable scrolling */\npadding: 0px 10px;\n}\n\n/* Add an active class to the active dropdown button */\n.active {\nbackground-color: green;\ncolor: white;\n}\n\n/* Dropdown container (hidden by default). Optional: add a lighter background color and some left padding to change the design of the dropdown content */\n.dropdown-container {\ndisplay: none;\nbackground-color: #262626;\npadding-left: 8px;\n}\n\n/* Optional: Style the caret down icon */\n.fa-caret-down {\nfloat: right;\npadding-right: 8px;\n}",
        "//* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */\nvar dropdown = document.getElementsByClassName(\"dropdown-btn\");\nvar i;\n\nfor (i = 0; i < dropdown.length; i++) {\ndropdown[i].addEventListener(\"click\", function() {\nthis.classList.toggle(\"active\");\nvar dropdownContent = this.nextElementSibling;\nif (dropdownContent.style.display === \"block\") {\ndropdownContent.style.display = \"none\";\n} else {\ndropdownContent.style.display = \"block\";\n}\n});\n}"
      ]
    },
    {
      "title": "How TO - Responsive Navbar with Dropdown",
      "summary": "Learn how to create a responsive navigation bar with dropdown.\nResponsive Topnav with Dropdown\nTry it Yourself »\nCreate A Responsive Topnav with Dropdown\nExample\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Clickable Dropdowns to learn more about clickable dropdowns\nTip: Go to our CSS Navbar Tutorial to learn more about navbars.\nTip: Go to our Side Navigation Tutorial to learn about how to create closable side navigations.",
      "examples": [
        "<div class=\"topnav\" id=\"myTopnav\">\n<a href=\"#home\" class=\"active\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<div class=\"dropdown\">\n<button class=\"dropbtn\">Dropdown\n<i class=\"fa fa-caret-down\"></i>\n</button>\n<div class=\"dropdown-content\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>\n<a href=\"#about\">About</a>\n<a href=\"javascript:void(0);\" class=\"icon\" onclick=\"myFunction()\">&#9776;</a>\n</div>",
        "/* Add a black background color to the top navigation */\n.topnav {\nbackground-color: #333;\noverflow: hidden;\n}\n\n/* Style the links inside the navigation bar */\n.topnav a {\nfloat: left;\ndisplay: block;\ncolor: #f2f2f2;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Add an active class to highlight the current page */\n.active {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Hide the link that should open and close the topnav on small screens */\n.topnav .icon {\ndisplay: none;\n}\n\n/* Dropdown container - needed to position the dropdown content */\n.dropdown {\nfloat: left;\noverflow: hidden;\n}\n\n/* Style the dropdown button to fit inside the topnav */\n.dropdown .dropbtn {\nfont-size: 17px;\nborder: none;\noutline: none;\ncolor: white;\npadding: 14px 16px;\nbackground-color: inherit;\nfont-family: inherit;\nmargin: 0;\n}\n\n/* Style the dropdown content (hidden by default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f9f9f9;\nmin-width: 160px;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n}\n\n/* Style the links inside the dropdown */\n.dropdown-content a {\nfloat: none;\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\ntext-align: left;\n}\n\n/* Add a dark background on topnav links and the dropdown button on hover */\n.topnav a:hover, .dropdown:hover .dropbtn {\nbackground-color: #555;\ncolor: white;\n}\n\n/* Add a grey background to dropdown links on hover */\n.dropdown-content a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Show the dropdown menu when the user moves the mouse over the dropdown button */\n.dropdown:hover .dropdown-content {\ndisplay: block;\n}\n\n/* When the screen is less than 600 pixels wide, hide all links, except for the first one (\"Home\"). Show the link that contains should open and close the topnav (.icon) */\n@media screen and (max-width: 600px) {\n.topnav a:not(:first-child), .dropdown .dropbtn {\ndisplay: none;\n}\n.topnav a.icon {\nfloat: right;\ndisplay: block;\n}\n}\n\n/* The \"responsive\" class is added to the topnav with JavaScript when the user clicks on the icon. This class makes the topnav look good on small screens (display the links vertically instead of horizontally) */\n@media screen and (max-width: 600px) {\n.topnav.responsive {position: relative;}\n.topnav.responsive a.icon {\nposition: absolute;\nright: 0;\ntop: 0;\n}\n.topnav.responsive a {\nfloat: none;\ndisplay: block;\ntext-align: left;\n}\n.topnav.responsive .dropdown {float: none;}\n.topnav.responsive .dropdown-content {position: relative;}\n.topnav.responsive .dropdown .dropbtn {\ndisplay: block;\nwidth: 100%;\ntext-align: left;\n}\n}",
        "/* Toggle between adding and removing the \"responsive\" class to topnav when the user clicks on the icon */\nfunction myFunction() {\nvar x = document.getElementById(\"myTopnav\");\nif (x.className === \"topnav\") {\nx.className += \" responsive\";\n} else {\nx.className = \"topnav\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Subnav",
      "summary": "Learn how to create a subnavigation menu with CSS.\nSubnav\nCreate A Subnav\nExample\nExample Explained\nUse any element to open the subnav/dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the subnav menu and add the subnav links inside it.\nWrap a <div> element around the button and the <div> to position the subnav menu correctly with CSS.\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Load font awesome icons -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- The navigation menu -->\n<div class=\"navbar\">\n<a href=\"#home\">Home</a>\n<div class=\"subnav\">\n<button class=\"subnavbtn\">About <i class=\"fa fa-caret-down\"></i></button>\n<div class=\"subnav-content\">\n<a href=\"#company\">Company</a>\n<a href=\"#team\">Team</a>\n<a href=\"#careers\">Careers</a>\n</div>\n</div>\n<div class=\"subnav\">\n<button class=\"subnavbtn\">Services <i class=\"fa fa-caret-down\"></i></button>\n<div class=\"subnav-content\">\n<a href=\"#bring\">Bring</a>\n<a href=\"#deliver\">Deliver</a>\n<a href=\"#package\">Package</a>\n<a href=\"#express\">Express</a>\n</div>\n</div>\n<div class=\"subnav\">\n<button class=\"subnavbtn\">Partners <i class=\"fa fa-caret-down\"></i></button>\n<div class=\"subnav-content\">\n<a href=\"#link1\">Link 1</a>\n<a href=\"#link2\">Link 2</a>\n<a href=\"#link3\">Link 3</a>\n<a href=\"#link4\">Link 4</a>\n</div>\n</div>\n<a href=\"#contact\">Contact</a>\n</div>",
        "/* The navigation menu */\n.navbar {\noverflow: hidden;\nbackground-color: #333;\n}\n\n/* Navigation links */\n.navbar a {\nfloat: left;\nfont-size: 16px;\ncolor: white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n\n/* The subnavigation menu */\n.subnav {\nfloat: left;\noverflow: hidden;\n}\n\n/* Subnav button */\n.subnav .subnavbtn {\nfont-size: 16px;\nborder: none;\noutline: none;\ncolor: white;\npadding: 14px 16px;\nbackground-color: inherit;\nfont-family: inherit;\nmargin: 0;\n}\n\n/* Add a red background color to navigation links on hover */\n.navbar a:hover, .subnav:hover .subnavbtn {\nbackground-color: red;\n}\n\n/* Style the subnav content - positioned absolute */\n.subnav-content {\ndisplay: none;\nposition: absolute;\nleft: 0;\nbackground-color: red;\nwidth: 100%;\nz-index: 1;\n}\n\n/* Style the subnav links */\n.subnav-content a {\nfloat: left;\ncolor: white;\ntext-decoration: none;\n}\n\n/* Add a grey background color on hover */\n.subnav-content a:hover {\nbackground-color: #eee;\ncolor: black;\n}\n\n/* When you move the mouse over the subnav container, open the subnav content */\n.subnav:hover .subnav-content {\ndisplay: block;\n}"
      ]
    },
    {
      "title": "How TO - Dropup",
      "summary": "Learn how to create a dropup menu with CSS.\nDropup\nA dropup menu is a toggleable menu that allows the user to choose one value from a predefined list:\nCreate A Hoverable Dropup\nCreate a dropup menu that appears when the user moves the mouse over an element.\nExample\nExample Explained\nUse any element to open the dropup menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropup menu and add the dropup links inside it.\nWrap a <div> element around the button and the <div> to position the dropup menu correctly with CSS.\nExample\nExample Explained\nWe have styled the dropup button with a background-color, padding, etc.\nThe .dropup class uses position:relative, which is needed when we want the dropup content to be placed on top of the dropup button (using position:absolute).\nThe .dropup-content class holds the actual dropup menu. It is hidden by default, and will be displayed on hover (see below). Note the min-width is set to 160px. Feel free to change this. Tip: If you want the width of the dropup content to be as wide as the dropup button, set the width to 100% (and overflow:auto to enable scroll on small screens).\nInstead of using a border, we have used the box-shadow property to make the dropup menu look like a \"card\". We also use z-index to place the dropup in front of other elements.\nThe :hover selector is used to show the dropup menu when the user moves the mouse over the dropup button.",
      "examples": [
        "<div class=\"dropup\">\n<button class=\"dropbtn\">Dropup</button>\n<div class=\"dropup-content\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>",
        "/* Dropup Button */\n.dropbtn {\nbackground-color: #3498DB;\ncolor: white;\npadding: 16px;\nfont-size: 16px;\nborder: none;\n}\n\n/* The container <div> - needed to position the dropup content */\n.dropup {\nposition: relative;\ndisplay: inline-block;\n}\n\n/* Dropup content (Hidden by Default) */\n.dropup-content {\ndisplay: none;\nposition: absolute;\nbottom: 50px;\nbackground-color: #f1f1f1;\nmin-width: 160px;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n}\n\n/* Links inside the dropup */\n.dropup-content a {\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\n}\n\n/* Change color of dropup links on hover */\n.dropup-content a:hover {background-color: #ddd}\n\n/* Show the dropup menu on hover */\n.dropup:hover .dropup-content {\ndisplay: block;\n}\n\n/* Change the background color of the dropup button when the dropup content is shown */\n.dropup:hover .dropbtn {\nbackground-color: #2980B9;\n}",
        ".dropup",
        "position:relative",
        "position:absolute",
        ".dropup-content",
        "min-width",
        "width",
        "overflow:auto",
        "box-shadow",
        ":hover"
      ]
    },
    {
      "title": "How TO - Mega Menu",
      "summary": "Learn how to create a mega menu (full-width dropdown menu in a navigation bar).\nMega Menu\nTry it Yourself »\nCreate A Mega Menu\nCreate a dropdown menu that appears when the user moves the mouse over an element inside a navigation bar.\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div class=\"dropdown-content\">) to create the dropdown menu and add a grid (columns) and add dropdown links inside the grid.\nWrap a <div class=\"dropdown\"> element around the button and the container element (<div class=\"dropdown-content\"> to position the dropdown menu correctly with CSS.\nExample\nExample Explained\nWe have styled the navigation bar and the navbar links with a background-color, padding, etc.\nWe have styled the dropdown button with a background-color, padding, etc.\nThe .dropdown-content class holds the actual dropdown menu. It is hidden by default, and will be displayed on hover (see below). It is positioned to be visible right below the dropdown button, and the width is set to 100% to cover the whole screen.\nInstead of using a border, we have used the box-shadow property to make the dropdown menu look like a \"card\". We also use z-index to place the dropdown in front of other elements.\nThe :hover selector is used to show the dropdown menu when the user moves the mouse over the dropdown button.\nThe .column classes are used to create three columns that floats next to each other inside the dropdown menu (to show different categories).\nREMOVE ADS\nResponsive Mega Menu\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Clickable Dropdowns to learn more about clickable dropdowns\nTip: Go to our CSS Navbar Tutorial to learn more about navbars.\nTip: Go to our Responsive Top Navigation to learn about how to create a responsive navbar.",
      "examples": [
        "<div class=\"navbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<div class=\"dropdown\">\n<button class=\"dropbtn\">Dropdown\n<i class=\"fa fa-caret-down\"></i>\n</button>\n<div class=\"dropdown-content\">\n<div class=\"header\">\n<h2>Mega Menu</h2>\n</div>\n<div class=\"row\">\n<div class=\"column\">\n<h3>Category 1</h3>\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n<div class=\"column\">\n<h3>Category 2</h3>\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n<div class=\"column\">\n<h3>Category 3</h3>\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>\n</div>\n</div>\n</div>",
        "/* Navbar container */\n.navbar {\noverflow: hidden;\nbackground-color: #333;\nfont-family: Arial;\n}\n\n/* Links inside the navbar */\n.navbar a {\nfloat: left;\nfont-size: 16px;\ncolor: white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n\n/* The dropdown container */\n.dropdown {\nfloat: left;\noverflow: hidden;\n}\n\n/* Dropdown button */\n.dropdown .dropbtn {\nfont-size: 16px;\nborder: none;\noutline: none;\ncolor: white;\npadding: 14px 16px;\nbackground-color: inherit;\nfont: inherit; /* Important for vertical align on mobile phones */\nmargin: 0; /* Important for vertical align on mobile phones */\n}\n\n/* Add a red background color to navbar links on hover */\n.navbar a:hover, .dropdown:hover .dropbtn {\nbackground-color: red;\n}\n\n/* Dropdown content (hidden by default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f9f9f9;\nwidth: 100%;\nleft: 0;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n}\n\n/* Mega Menu header, if needed */\n.dropdown-content .header {\nbackground: red;\npadding: 16px;\ncolor: white;\n}\n\n/* Show the dropdown menu on hover */\n.dropdown:hover .dropdown-content {\ndisplay: block;\n}\n\n/* Create three equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 33.33%;\npadding: 10px;\nbackground-color: #ccc;\nheight: 250px;\n}\n\n/* Style links inside the columns */\n.column a {\nfloat: none;\ncolor: black;\npadding: 16px;\ntext-decoration: none;\ndisplay: block;\ntext-align: left;\n}\n\n/* Add a background color on hover */\n.column a:hover {\nbackground-color: #ddd;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}",
        "/* Responsive layout - makes the three columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\nheight: auto;\n}\n}",
        ".dropdown-content",
        "box-shadow",
        ":hover",
        ".column"
      ]
    },
    {
      "title": "How TO - Mobile Navigation Menu",
      "summary": "Learn how to create a top navigation menu for smartphones / tablets with CSS and JavaScript.\nMobile Navigation Bar\nVertical (recommended):\nTry it Yourself »\nHorizontal:\nTry it Yourself »\nCreate A Mobile Navigation Menu\nExample\nExample\nREMOVE ADS\nExample\nTip: To create a responsive navigation bar, that works on all devices, read our How To - Responsive Top Navigation tutorial.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<!-- Load an icon library to show a hamburger menu (bars) on small screens -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- Top Navigation Menu -->\n<div class=\"topnav\">\n<a href=\"#home\" class=\"active\">Logo</a>\n<!-- Navigation links (hidden by default) -->\n<div id=\"myLinks\">\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n</div>\n<!-- \"Hamburger menu\" / \"Bar icon\" to toggle the navigation links -->\n<a href=\"javascript:void(0);\" class=\"icon\" onclick=\"myFunction()\">\n<i class=\"fa fa-bars\"></i>\n</a>\n</div>",
        "/* Style the navigation menu */\n.topnav {\noverflow: hidden;\nbackground-color: #333;\nposition: relative;\n}\n\n/* Hide the links inside the navigation menu (except for logo/home) */\n.topnav #myLinks {\ndisplay: none;\n}\n\n/* Style navigation menu links */\n.topnav a {\ncolor: white;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\ndisplay: block;\n}\n\n/* Style the hamburger menu */\n.topnav a.icon {\nbackground: black;\ndisplay: block;\nposition: absolute;\nright: 0;\ntop: 0;\n}\n\n/* Add a grey background color on mouse-over */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Style the active link (or home/logo) */\n.active {\nbackground-color: #04AA6D;\ncolor: white;\n}",
        "/* Toggle between showing and hiding the navigation menu links when the user clicks on the hamburger menu / bar icon */\nfunction myFunction() {\nvar x = document.getElementById(\"myLinks\");\nif (x.style.display === \"block\") {\nx.style.display = \"none\";\n} else {\nx.style.display = \"block\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Curtain Menu",
      "summary": "Learn how to create a curtain navigation menu.\nClick on the buttons below to see how it works:\nCreate a Curtain Menu\nExample\nExample\nREMOVE ADS\nThe example below slides in the overlay navigation menu from left to right (0 to 100% width), when it is triggered:\nSlide in from the side\nThe example below slides in the overlay navigation menu downwards from the top (0 to 100% height).\nNote: In this example, note that the CSS is slightly different from the one above (default height is now 0, width is 100% and overflow-y is hidden (disable vertical scroll, except for small screens)):\nSlide down from the top\nThis example opens the navigation menu without animation:\nOpen the menu without animation\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<!-- The overlay -->\n<div id=\"myNav\" class=\"overlay\">\n\n<!-- Button to close the overlay navigation -->\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\n\n<!-- Overlay content -->\n<div class=\"overlay-content\">\n<a href=\"#\">About</a>\n<a href=\"#\">Services</a>\n<a href=\"#\">Clients</a>\n<a href=\"#\">Contact</a>\n</div>\n\n</div>\n\n<!-- Use any element to open/show the overlay navigation menu -->\n<span onclick=\"openNav()\">open</span>",
        "/* The Overlay (background) */\n.overlay {\n/* Height & width depends on how you want to reveal the overlay (see JS below) */\nheight: 100%;\nwidth: 0;\nposition: fixed; /* Stay in place */\nz-index: 1; /* Sit on top */\nleft: 0;\ntop: 0;\nbackground-color: rgb(0,0,0); /* Black fallback color */\nbackground-color: rgba(0,0,0, 0.9); /* Black w/opacity */\noverflow-x: hidden; /* Disable horizontal scroll */\ntransition: 0.5s; /* 0.5 second transition effect to slide in or slide down the overlay (height or width, depending on reveal) */\n}\n\n/* Position the content inside the overlay */\n.overlay-content {\nposition: relative;\ntop: 25%; /* 25% from the top */\nwidth: 100%; /* 100% width */\ntext-align: center; /* Centered text/links */\nmargin-top: 30px; /* 30px top margin to avoid conflict with the close button on smaller screens */\n}\n\n/* The navigation links inside the overlay */\n.overlay a {\npadding: 8px;\ntext-decoration: none;\nfont-size: 36px;\ncolor: #818181;\ndisplay: block; /* Display block instead of inline */\ntransition: 0.3s; /* Transition effects on hover (color) */\n}\n\n/* When you mouse over the navigation links, change their color */\n.overlay a:hover, .overlay a:focus {\ncolor: #f1f1f1;\n}\n\n/* Position the close button (top right corner) */\n.overlay .closebtn {\nposition: absolute;\ntop: 20px;\nright: 45px;\nfont-size: 60px;\n}\n\n/* When the height of the screen is less than 450 pixels, change the font-size of the links and position the close button again, so they don't overlap */\n@media screen and (max-height: 450px) {\n.overlay a {font-size: 20px}\n.overlay .closebtn {\nfont-size: 40px;\ntop: 15px;\nright: 35px;\n}\n}",
        "/* Open when someone clicks on the span element */\nfunction openNav() {\ndocument.getElementById(\"myNav\").style.width = \"100%\";\n}\n\n/* Close when someone clicks on the \"x\" symbol inside the overlay */\nfunction closeNav() {\ndocument.getElementById(\"myNav\").style.width = \"0%\";\n}",
        "/* Open */\nfunction openNav() {\ndocument.getElementById(\"myNav\").style.height = \"100%\";\n}\n\n/* Close */\nfunction closeNav() {\ndocument.getElementById(\"myNav\").style.height = \"0%\";\n}",
        "/* Open */\nfunction openNav() {\ndocument.getElementById(\"myNav\").style.display = \"block\";\n}\n\n/* Close */\nfunction closeNav() {\ndocument.getElementById(\"myNav\").style.display = \"none\";\n}"
      ]
    },
    {
      "title": "How TO - Collapse Sidebar",
      "summary": "Learn how to create a collapsible sidebar menu.\nClick on the button to open the collapsible sidebar:\nCreate a Collapsed Sidebar\nExample\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div id=\"mySidebar\" class=\"sidebar\">\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\n<a href=\"#\">About</a>\n<a href=\"#\">Services</a>\n<a href=\"#\">Clients</a>\n<a href=\"#\">Contact</a>\n</div>\n\n<div id=\"main\">\n<button class=\"openbtn\" onclick=\"openNav()\">&#9776; Open Sidebar</button>\n<h2>Collapsed Sidebar</h2>\n<p>Content...</p>\n</div>",
        "/* The sidebar menu */\n.sidebar {\nheight: 100%; /* 100% Full-height */\nwidth: 0; /* 0 width - change this with JavaScript */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Stay on top */\ntop: 0;\nleft: 0;\nbackground-color: #111; /* Black*/\noverflow-x: hidden; /* Disable horizontal scroll */\npadding-top: 60px; /* Place content 60px from the top */\ntransition: 0.5s; /* 0.5 second transition effect to slide in the sidebar */\n}\n\n/* The sidebar links */\n.sidebar a {\npadding: 8px 8px 8px 32px;\ntext-decoration: none;\nfont-size: 25px;\ncolor: #818181;\ndisplay: block;\ntransition: 0.3s;\n}\n\n/* When you mouse over the navigation links, change their color */\n.sidebar a:hover {\ncolor: #f1f1f1;\n}\n\n/* Position and style the close button (top right corner) */\n.sidebar .closebtn {\nposition: absolute;\ntop: 0;\nright: 25px;\nfont-size: 36px;\nmargin-left: 50px;\n}\n\n/* The button used to open the sidebar */\n.openbtn {\nfont-size: 20px;\ncursor: pointer;\nbackground-color: #111;\ncolor: white;\npadding: 10px 15px;\nborder: none;\n}\n\n.openbtn:hover {\nbackground-color: #444;\n}\n\n/* Style page content - use this if you want to push the page content to the right when you open the side navigation */\n#main {\ntransition: margin-left .5s; /* If you want a transition effect */\npadding: 20px;\n}\n\n/* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */\n@media screen and (max-height: 450px) {\n.sidebar {padding-top: 15px;}\n.sidebar a {font-size: 18px;}\n}",
        "/* Set the width of the sidebar to 250px and the left margin of the page content to 250px */\nfunction openNav() {\ndocument.getElementById(\"mySidebar\").style.width = \"250px\";\ndocument.getElementById(\"main\").style.marginLeft = \"250px\";\n}\n\n/* Set the width of the sidebar to 0 and the left margin of the page content to 0 */\nfunction closeNav() {\ndocument.getElementById(\"mySidebar\").style.width = \"0\";\ndocument.getElementById(\"main\").style.marginLeft = \"0\";\n}"
      ]
    },
    {
      "title": "How TO - Collapse Sidepanel",
      "summary": "Learn how to create a collapsible sidepanel menu.\nCreate a Collapsed Sidepanel\nExample\nExample\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div id=\"mySidepanel\" class=\"sidepanel\">\n<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\n<a href=\"#\">About</a>\n<a href=\"#\">Services</a>\n<a href=\"#\">Clients</a>\n<a href=\"#\">Contact</a>\n</div>\n\n<button class=\"openbtn\" onclick=\"openNav()\">&#9776; Toggle Sidepanel</button>\n<h2>Collapsed Sidepanel</h2>\n<p>Content...</p>",
        "/* The sidepanel menu */\n.sidepanel {\nheight: 250px; /* Specify a height */\nwidth: 0; /* 0 width - change this with JavaScript */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Stay on top */\ntop: 0;\nleft: 0;\nbackground-color: #111; /* Black*/\noverflow-x: hidden; /* Disable horizontal scroll */\npadding-top: 60px; /* Place content 60px from the top */\ntransition: 0.5s; /* 0.5 second transition effect to slide in the sidepanel */\n}\n\n/* The sidepanel links */\n.sidepanel a {\npadding: 8px 8px 8px 32px;\ntext-decoration: none;\nfont-size: 25px;\ncolor: #818181;\ndisplay: block;\ntransition: 0.3s;\n}\n\n/* When you mouse over the navigation links, change their color */\n.sidepanel a:hover {\ncolor: #f1f1f1;\n}\n\n/* Position and style the close button (top right corner) */\n.sidepanel .closebtn {\nposition: absolute;\ntop: 0;\nright: 25px;\nfont-size: 36px;\nmargin-left: 50px;\n}\n\n/* Style the button that is used to open the sidepanel */\n.openbtn {\nfont-size: 20px;\ncursor: pointer;\nbackground-color: #111;\ncolor: white;\npadding: 10px 15px;\nborder: none;\n}\n\n.openbtn:hover {\nbackground-color: #444;\n}",
        "/* Set the width of the sidebar to 250px (show it) */\nfunction openNav() {\ndocument.getElementById(\"mySidepanel\").style.width = \"250px\";\n}\n\n/* Set the width of the sidebar to 0 (hide it) */\nfunction closeNav() {\ndocument.getElementById(\"mySidepanel\").style.width = \"0\";\n}"
      ]
    },
    {
      "title": "How TO - CSS Pagination",
      "summary": "Learn how to create a pagination with CSS.\nHow To Create a Pagination\n«\n1\n2\n3\n4\n5\n6\n»\nTry it Yourself »\nExample\nExample\nGo to our CSS Pagination Tutorial to learn more about pagination.",
      "examples": [
        "<div class=\"pagination\">\n<a href=\"#\">&laquo;</a>\n<a href=\"#\">1</a>\n<a class=\"active\" href=\"#\">2</a>\n<a href=\"#\">3</a>\n<a href=\"#\">4</a>\n<a href=\"#\">5</a>\n<a href=\"#\">6</a>\n<a href=\"#\">&raquo;</a>\n</div>",
        "/* Pagination links */\n.pagination a {\ncolor: black;\nfloat: left;\npadding: 8px 16px;\ntext-decoration: none;\ntransition: background-color .3s;\n}\n\n/* Style the active/current link */\n.pagination a.active {\nbackground-color: dodgerblue;\ncolor: white;\n}\n\n/* Add a grey background color on mouse-over */\n.pagination a:hover:not(.active) {background-color: #ddd;}"
      ]
    },
    {
      "title": "How TO - CSS Breadcrumbs",
      "summary": "Learn how to create a breadcrumb navigation with CSS.\nHow To Create a Breadcrumb Navigation\nA breadcrumb navigation provide links back to each previous page the user navigated through, and shows the user's current location in a website.\nHome\nPictures\nSummer 15\nItaly\nTry it Yourself »\nExample\nExample\nGo to our CSS Pagination Tutorial to learn more about pagination.",
      "examples": [
        "<ul class=\"breadcrumb\">\n<li><a href=\"#\">Home</a></li>\n<li><a href=\"#\">Pictures</a></li>\n<li><a href=\"#\">Summer 15</a></li>\n<li>Italy</li>\n</ul>",
        "/* Style the list */\nul.breadcrumb {\npadding: 10px 16px;\nlist-style: none;\nbackground-color: #eee;\n}\n\n/* Display list items side by side */\nul.breadcrumb li {\ndisplay: inline;\nfont-size: 18px;\n}\n\n/* Add a slash symbol (/) before/behind each list item */\nul.breadcrumb li+li:before {\npadding: 8px;\ncolor: black;\ncontent: \"/\\00a0\";\n}\n\n/* Add a color to all links inside the list */\nul.breadcrumb li a {\ncolor: #0275d8;\ntext-decoration: none;\n}\n\n/* Add a color on mouse-over */\nul.breadcrumb li a:hover {\ncolor: #01447e;\ntext-decoration: underline;\n}"
      ]
    },
    {
      "title": "How TO - Button Group",
      "summary": "Learn how to create a \"button group\" with CSS.\nHorizontal Button Groups\nGroup a series of buttons together on a single line in a button group:\nTry it Yourself »\nHow To Create a Button Group\nExample\nExample\nREMOVE ADS\nJustified / Full-width Button Group:\nExample\nTip: Go to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<div class=\"btn-group\">\n<button>Apple</button>\n<button>Samsung</button>\n<button>Sony</button>\n</div>",
        ".btn-group button {\nbackground-color: #04AA6D; /* Green background */\nborder: 1px solid green; /* Green border */\ncolor: white; /* White text */\npadding: 10px 24px; /* Some padding */\ncursor: pointer; /* Pointer/hand icon */\nfloat: left; /* Float the buttons side by side */\n}\n\n.btn-group button:not(:last-child) {\nborder-right: none; /* Prevent double borders */\n}\n\n/* Clear floats (clearfix hack) */\n.btn-group:after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n/* Add a background color on hover */\n.btn-group button:hover {\nbackground-color: #3e8e41;\n}",
        "<!-- Three buttons in a group -->\n<div class=\"btn-group\" style=\"width:100%\">\n<button style=\"width:33.3%\">Apple</button>\n<button style=\"width:33.3%\">Samsung</button>\n<button style=\"width:33.3%\">Sony</button>\n</div>\n\n<!-- Four buttons in a group -->\n<div class=\"btn-group\" style=\"width:100%\">\n<button style=\"width:25%\">Apple</button>\n<button style=\"width:25%\">Samsung</button>\n<button style=\"width:25%\">Sony</button>\n<button style=\"width:25%\">HTC</button>\n</div>"
      ]
    },
    {
      "title": "How TO - Vertical Button Group",
      "summary": "Learn how to create a vertical \"button group\" with CSS.\nVertical Button Groups\nGroup a series of buttons in a vertical button group:\nTry it Yourself »\nHow To Create a Vertical Button Group\nExample\nExample\nTip: Go to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<div class=\"btn-group\">\n<button>Apple</button>\n<button>Samsung</button>\n<button>Sony</button>\n</div>",
        ".btn-group button {\nbackground-color: #04AA6D; /* Green background */\nborder: 1px solid green; /* Green border */\ncolor: white; /* White text */\npadding: 10px 24px; /* Some padding */\ncursor: pointer; /* Pointer/hand icon */\nwidth: 50%; /* Set a width if needed */\ndisplay: block; /* Make the buttons appear below each other */\n}\n\n.btn-group button:not(:last-child) {\nborder-bottom: none; /* Prevent double borders */\n}\n\n/* Add a background color on hover */\n.btn-group button:hover {\nbackground-color: #3e8e41;\n}"
      ]
    },
    {
      "title": "How TO - Sticky Social Bar",
      "summary": "Learn how to create a fixed/sticky social media icon bar with CSS.\nTry it Yourself »\nHow To Create a Fixed Social Bar\nExample\nExample\nTip: Go to our CSS Position Tutorial to learn more about positioning.",
      "examples": [
        "<!-- Load font awesome icons -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- The social media icon bar -->\n<div class=\"icon-bar\">\n<a href=\"#\" class=\"facebook\"><i class=\"fa fa-facebook\"></i></a>\n<a href=\"#\" class=\"twitter\"><i class=\"fa fa-twitter\"></i></a>\n<a href=\"#\" class=\"google\"><i class=\"fa fa-google\"></i></a>\n<a href=\"#\" class=\"linkedin\"><i class=\"fa fa-linkedin\"></i></a>\n<a href=\"#\" class=\"youtube\"><i class=\"fa fa-youtube\"></i></a>\n</div>",
        "/* Fixed/sticky icon bar (vertically aligned 50% from the top of the screen) */\n.icon-bar {\nposition: fixed;\ntop: 50%;\ntransform: translateY(-50%);\n}\n\n/* Style the icon bar links */\n.icon-bar a {\ndisplay: block;\ntext-align: center;\npadding: 16px;\ntransition: all 0.3s ease;\ncolor: white;\nfont-size: 20px;\n}\n\n/* Style the social media icons with color, if you want */\n.icon-bar a:hover {\nbackground-color: #000;\n}\n\n.facebook {\nbackground: #3B5998;\ncolor: white;\n}\n\n.twitter {\nbackground: #55ACEE;\ncolor: white;\n}\n\n.google {\nbackground: #dd4b39;\ncolor: white;\n}\n\n.linkedin {\nbackground: #007bb5;\ncolor: white;\n}\n\n.youtube {\nbackground: #bb0000;\ncolor: white;\n}"
      ]
    },
    {
      "title": "How TO - Pill Navigation",
      "summary": "Learn how to create a pill navigation menu with CSS.\nPill Navigation\nTry it Yourself »\nCreate a Pill Navigation\nExample\nExample\nVertical Pill Navigation\nAdd display: block to the links, and they will appear vertically instead of horizontally:\nExample\nTip: See also How To Create a Top Navigation Menu.\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"pill-nav\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n</div>",
        "/* Style the links inside the pill navigation menu */\n.pill-nav a {\ndisplay: inline-block;\ncolor: black;\ntext-align: center;\npadding: 14px;\ntext-decoration: none;\nfont-size: 17px;\nborder-radius: 5px;\n}\n\n/* Change the color of links on mouse-over */\n.pill-nav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Add a color to the active/current link */\n.pill-nav a.active {\nbackground-color: dodgerblue;\ncolor: white;\n}",
        "display: block"
      ]
    },
    {
      "title": "How TO - Responsive Header",
      "summary": "Learn how to create a responsive header with CSS.\nResponsive Header\nChange the design of the header depending on the screen size. Resize the browser window to see the effect.\nTry it Yourself »\nCreate A Responsive Header\nExample\nExample\nTip: Go to our CSS Navbar Tutorial to learn more about navigation bars.",
      "examples": [
        "<div class=\"header\">\n<a href=\"#default\" class=\"logo\">CompanyLogo</a>\n<div class=\"header-right\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#about\">About</a>\n</div>\n</div>",
        "/* Style the header with a grey background and some padding */\n.header {\noverflow: hidden;\nbackground-color: #f1f1f1;\npadding: 20px 10px;\n}\n\n/* Style the header links */\n.header a {\nfloat: left;\ncolor: black;\ntext-align: center;\npadding: 12px;\ntext-decoration: none;\nfont-size: 18px;\nline-height: 25px;\nborder-radius: 4px;\n}\n\n/* Style the logo link (notice that we set the same value of line-height and font-size to prevent the header to increase when the font gets bigger */\n.header a.logo {\nfont-size: 25px;\nfont-weight: bold;\n}\n\n/* Change the background color on mouse-over */\n.header a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Style the active/current link*/\n.header a.active {\nbackground-color: dodgerblue;\ncolor: white;\n}\n\n/* Float the link section to the right */\n.header-right {\nfloat: right;\n}\n\n/* Add media queries for responsiveness - when the screen is 500px wide or less, stack the links on top of each other */\n@media screen and (max-width: 500px) {\n.header a {\nfloat: none;\ndisplay: block;\ntext-align: left;\n}\n.header-right {\nfloat: none;\n}\n}"
      ]
    },
    {
      "title": "How TO - Slideshow",
      "summary": "Learn how to create a responsive slideshow with CSS and JavaScript.\nSlideshow / Carousel\nA slideshow is used to cycle through elements:\nTry it Yourself »\nCreate A Slideshow\nExample\nStyle the next and previous buttons, the caption text and the dots:\nExample\nREMOVE ADS\nExample\nAutomatic Slideshow\nTo display an automatic slideshow, use the following code:\nExample\nMultiple Slideshows\nExample\nTip: Also check out How To - Slideshow Gallery and How To - Lightbox.",
      "examples": [
        "<!-- Slideshow container -->\n<div class=\"slideshow-container\">\n\n<!-- Full-width images with number and caption text -->\n<div class=\"mySlides fade\">\n<div class=\"numbertext\">1 / 3</div>\n<img src=\"img1.jpg\" style=\"width:100%\">\n<div class=\"text\">Caption Text</div>\n</div>\n\n<div class=\"mySlides fade\">\n<div class=\"numbertext\">2 / 3</div>\n<img src=\"img2.jpg\" style=\"width:100%\">\n<div class=\"text\">Caption Two</div>\n</div>\n\n<div class=\"mySlides fade\">\n<div class=\"numbertext\">3 / 3</div>\n<img src=\"img3.jpg\" style=\"width:100%\">\n<div class=\"text\">Caption Three</div>\n</div>\n\n<!-- Next and previous buttons -->\n<a class=\"prev\" onclick=\"plusSlides(-1)\">&#10094;</a>\n<a class=\"next\" onclick=\"plusSlides(1)\">&#10095;</a>\n</div>\n<br>\n\n<!-- The dots/circles -->\n<div style=\"text-align:center\">\n<span class=\"dot\" onclick=\"currentSlide(1)\"></span>\n<span class=\"dot\" onclick=\"currentSlide(2)\"></span>\n<span class=\"dot\" onclick=\"currentSlide(3)\"></span>\n</div>",
        "* {box-sizing:border-box}\n\n/* Slideshow container */\n.slideshow-container {\nmax-width: 1000px;\nposition: relative;\nmargin: auto;\n}\n\n/* Hide the images by default */\n.mySlides {\ndisplay: none;\n}\n\n/* Next & previous buttons */\n.prev, .next {\ncursor: pointer;\nposition: absolute;\ntop: 50%;\nwidth: auto;\nmargin-top: -22px;\npadding: 16px;\ncolor: white;\nfont-weight: bold;\nfont-size: 18px;\ntransition: 0.6s ease;\nborder-radius: 0 3px 3px 0;\nuser-select: none;\n}\n\n/* Position the \"next button\" to the right */\n.next {\nright: 0;\nborder-radius: 3px 0 0 3px;\n}\n\n/* On hover, add a black background color with a little bit see-through */\n.prev:hover, .next:hover {\nbackground-color: rgba(0,0,0,0.8);\n}\n\n/* Caption text */\n.text {\ncolor: #f2f2f2;\nfont-size: 15px;\npadding: 8px 12px;\nposition: absolute;\nbottom: 8px;\nwidth: 100%;\ntext-align: center;\n}\n\n/* Number text (1/3 etc) */\n.numbertext {\ncolor: #f2f2f2;\nfont-size: 12px;\npadding: 8px 12px;\nposition: absolute;\ntop: 0;\n}\n\n/* The dots/bullets/indicators */\n.dot {\ncursor: pointer;\nheight: 15px;\nwidth: 15px;\nmargin: 0 2px;\nbackground-color: #bbb;\nborder-radius: 50%;\ndisplay: inline-block;\ntransition: background-color 0.6s ease;\n}\n\n.active, .dot:hover {\nbackground-color: #717171;\n}\n\n/* Fading animation */\n.fade {\nanimation-name: fade;\nanimation-duration: 1.5s;\n}\n\n@keyframes fade {\nfrom {opacity: .4}\nto {opacity: 1}\n}",
        "let slideIndex = 1;\nshowSlides(slideIndex);\n\n// Next/previous controls\nfunction plusSlides(n) {\nshowSlides(slideIndex += n);\n}\n\n// Thumbnail image controls\nfunction currentSlide(n) {\nshowSlides(slideIndex = n);\n}\n\nfunction showSlides(n) {\nlet i;\nlet slides = document.getElementsByClassName(\"mySlides\");\nlet dots = document.getElementsByClassName(\"dot\");\nif (n > slides.length) {slideIndex = 1}\nif (n < 1) {slideIndex = slides.length}\nfor (i = 0; i < slides.length; i++) {\nslides[i].style.display = \"none\";\n}\nfor (i = 0; i < dots.length; i++) {\ndots[i].className = dots[i].className.replace(\" active\", \"\");\n}\nslides[slideIndex-1].style.display = \"block\";\ndots[slideIndex-1].className += \" active\";\n}",
        "let slideIndex = 0;\nshowSlides();\n\nfunction showSlides() {\nlet i;\nlet slides = document.getElementsByClassName(\"mySlides\");\nfor (i = 0; i < slides.length; i++) {\nslides[i].style.display = \"none\";\n}\nslideIndex++;\nif (slideIndex > slides.length) {slideIndex = 1}\nslides[slideIndex-1].style.display = \"block\";\nsetTimeout(showSlides, 2000); // Change image every 2 seconds\n}",
        "let slideIndex = [1,1];\n/* Class the members of each slideshow group with different CSS classes */\nlet slideId = [\"mySlides1\", \"mySlides2\"]\nshowSlides(1, 0);\nshowSlides(1, 1);\n\nfunction plusSlides(n, no) {\nshowSlides(slideIndex[no] += n, no);\n}\n\nfunction showSlides(n, no) {\nlet i;\nlet x = document.getElementsByClassName(slideId[no]);\nif (n > x.length) {slideIndex[no] = 1}\nif (n < 1) {slideIndex[no] = x.length}\nfor (i = 0; i < x.length; i++) {\nx[i].style.display = \"none\";\n}\nx[slideIndex[no]-1].style.display = \"block\";\n}"
      ]
    },
    {
      "title": "How TO - Slideshow Gallery",
      "summary": "Learn how to create a responsive slideshow gallery with CSS and JavaScript.\nSlideshow Gallery\nA slideshow is used to cycle through elements:\nThe Woods\nTry it Yourself »\nCreate A Slideshow Gallery\nExample\nStyle the image gallery, next and previous buttons, the caption text and the dots:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Container for the image gallery -->\n<div class=\"container\">\n\n<!-- Full-width images with number text -->\n<div class=\"mySlides\">\n<div class=\"numbertext\">1 / 6</div>\n<img src=\"img_woods_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">2 / 6</div>\n<img src=\"img_5terre_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">3 / 6</div>\n<img src=\"img_mountains_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">4 / 6</div>\n<img src=\"img_lights_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">5 / 6</div>\n<img src=\"img_nature_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">6 / 6</div>\n<img src=\"img_snow_wide.jpg\" style=\"width:100%\">\n</div>\n\n<!-- Next and previous buttons -->\n<a class=\"prev\" onclick=\"plusSlides(-1)\">&#10094;</a>\n<a class=\"next\" onclick=\"plusSlides(1)\">&#10095;</a>\n\n<!-- Image text -->\n<div class=\"caption-container\">\n<p id=\"caption\"></p>\n</div>\n\n<!-- Thumbnail images -->\n<div class=\"row\">\n<div class=\"column\">\n<img class=\"demo cursor\" src=\"img_woods.jpg\" style=\"width:100%\" onclick=\"currentSlide(1)\" alt=\"The Woods\">\n</div>\n<div class=\"column\">\n<img class=\"demo cursor\" src=\"img_5terre.jpg\" style=\"width:100%\" onclick=\"currentSlide(2)\" alt=\"Cinque Terre\">\n</div>\n<div class=\"column\">\n<img class=\"demo cursor\" src=\"img_mountains.jpg\" style=\"width:100%\" onclick=\"currentSlide(3)\" alt=\"Mountains and fjords\">\n</div>\n<div class=\"column\">\n<img class=\"demo cursor\" src=\"img_lights.jpg\" style=\"width:100%\" onclick=\"currentSlide(4)\" alt=\"Northern Lights\">\n</div>\n<div class=\"column\">\n<img class=\"demo cursor\" src=\"img_nature.jpg\" style=\"width:100%\" onclick=\"currentSlide(5)\" alt=\"Nature and sunrise\">\n</div>\n<div class=\"column\">\n<img class=\"demo cursor\" src=\"img_snow.jpg\" style=\"width:100%\" onclick=\"currentSlide(6)\" alt=\"Snowy Mountains\">\n</div>\n</div>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\n/* Position the image container (needed to position the left and right arrows) */\n.container {\nposition: relative;\n}\n\n/* Hide the images by default */\n.mySlides {\ndisplay: none;\n}\n\n/* Add a pointer when hovering over the thumbnail images */\n.cursor {\ncursor: pointer;\n}\n\n/* Next & previous buttons */\n.prev,\n.next {\ncursor: pointer;\nposition: absolute;\ntop: 40%;\nwidth: auto;\npadding: 16px;\nmargin-top: -50px;\ncolor: white;\nfont-weight: bold;\nfont-size: 20px;\nborder-radius: 0 3px 3px 0;\nuser-select: none;\n-webkit-user-select: none;\n}\n\n/* Position the \"next button\" to the right */\n.next {\nright: 0;\nborder-radius: 3px 0 0 3px;\n}\n\n/* On hover, add a black background color with a little bit see-through */\n.prev:hover,\n.next:hover {\nbackground-color: rgba(0, 0, 0, 0.8);\n}\n\n/* Number text (1/3 etc) */\n.numbertext {\ncolor: #f2f2f2;\nfont-size: 12px;\npadding: 8px 12px;\nposition: absolute;\ntop: 0;\n}\n\n/* Container for image text */\n.caption-container {\ntext-align: center;\nbackground-color: #222;\npadding: 2px 16px;\ncolor: white;\n}\n\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Six columns side by side */\n.column {\nfloat: left;\nwidth: 16.66%;\n}\n\n/* Add a transparency effect for thumnbail images */\n.demo {\nopacity: 0.6;\n}\n\n.active,\n.demo:hover {\nopacity: 1;\n}",
        "let slideIndex = 1;\nshowSlides(slideIndex);\n\n// Next/previous controls\nfunction plusSlides(n) {\nshowSlides(slideIndex += n);\n}\n\n// Thumbnail image controls\nfunction currentSlide(n) {\nshowSlides(slideIndex = n);\n}\n\nfunction showSlides(n) {\nlet i;\nlet slides = document.getElementsByClassName(\"mySlides\");\nlet dots = document.getElementsByClassName(\"demo\");\nlet captionText = document.getElementById(\"caption\");\nif (n > slides.length) {slideIndex = 1}\nif (n < 1) {slideIndex = slides.length}\nfor (i = 0; i < slides.length; i++) {\nslides[i].style.display = \"none\";\n}\nfor (i = 0; i < dots.length; i++) {\ndots[i].className = dots[i].className.replace(\" active\", \"\");\n}\nslides[slideIndex-1].style.display = \"block\";\ndots[slideIndex-1].className += \" active\";\ncaptionText.innerHTML = dots[slideIndex-1].alt;\n}"
      ]
    },
    {
      "title": "How TO - Modal Images",
      "summary": "Learn how to create responsive Modal Images with CSS and JavaScript.\nModal Image\nA modal is a dialog box/popup window that is displayed on top of the current page.\nThis example use most of the code from the previous example, Modal Boxes, only in this example, we use images.\nTry it Yourself »\nExample\nExample\nREMOVE ADS\nExample\nTip: Also check out Modals and Lightbox.",
      "examples": [
        "<!-- Trigger the Modal -->\n<img id=\"myImg\" src=\"img_snow.jpg\" alt=\"Snow\" style=\"width:100%;max-width:300px\">\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n<!-- The Close Button -->\n<span class=\"close\">&times;</span>\n\n<!-- Modal Content (The Image) -->\n<img class=\"modal-content\" id=\"img01\">\n\n<!-- Modal Caption (Image Text) -->\n<div id=\"caption\"></div>\n</div>",
        "/* Style the Image Used to Trigger the Modal */\n#myImg {\nborder-radius: 5px;\ncursor: pointer;\ntransition: 0.3s;\n}\n\n#myImg:hover {opacity: 0.7;}\n\n/* The Modal (background) */\n.modal {\ndisplay: none; /* Hidden by default */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Sit on top */\npadding-top: 100px; /* Location of the box */\nleft: 0;\ntop: 0;\nwidth: 100%; /* Full width */\nheight: 100%; /* Full height */\noverflow: auto; /* Enable scroll if needed */\nbackground-color: rgb(0,0,0); /* Fallback color */\nbackground-color: rgba(0,0,0,0.9); /* Black w/ opacity */\n}\n\n/* Modal Content (Image) */\n.modal-content {\nmargin: auto;\ndisplay: block;\nwidth: 80%;\nmax-width: 700px;\n}\n\n/* Caption of Modal Image (Image Text) - Same Width as the Image */\n#caption {\nmargin: auto;\ndisplay: block;\nwidth: 80%;\nmax-width: 700px;\ntext-align: center;\ncolor: #ccc;\npadding: 10px 0;\nheight: 150px;\n}\n\n/* Add Animation - Zoom in the Modal */\n.modal-content, #caption {\nanimation-name: zoom;\nanimation-duration: 0.6s;\n}\n\n@keyframes zoom {\nfrom {transform:scale(0)}\nto {transform:scale(1)}\n}\n\n/* The Close Button */\n.close {\nposition: absolute;\ntop: 15px;\nright: 35px;\ncolor: #f1f1f1;\nfont-size: 40px;\nfont-weight: bold;\ntransition: 0.3s;\n}\n\n.close:hover,\n.close:focus {\ncolor: #bbb;\ntext-decoration: none;\ncursor: pointer;\n}\n\n/* 100% Image Width on Smaller Screens */\n@media only screen and (max-width: 700px){\n.modal-content {\nwidth: 100%;\n}\n}",
        "// Get the modal\nvar modal = document.getElementById(\"myModal\");\n\n// Get the image and insert it inside the modal - use its \"alt\" text as a caption\nvar img = document.getElementById(\"myImg\");\nvar modalImg = document.getElementById(\"img01\");\nvar captionText = document.getElementById(\"caption\");\nimg.onclick = function(){\nmodal.style.display = \"block\";\nmodalImg.src = this.src;\ncaptionText.innerHTML = this.alt;\n}\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\nmodal.style.display = \"none\";\n}"
      ]
    },
    {
      "title": "How TO - Lightbox",
      "summary": "Learn how to create a modal image gallery (lightbox) with CSS and JavaScript.\nLightbox (Modal Image Gallery)\nClick on one of the images to open the lightbox:\nNature and sunrise\nTry it Yourself »\nCreate A Lightbox\nThe following example combines code from Modals and Slideshows to create the lightbox.\nExample\nExample\nREMOVE ADS\nExample\nTip: Also check out Modals and Slideshows.",
      "examples": [
        "<!-- Images used to open the lightbox -->\n<div class=\"row\">\n<div class=\"column\">\n<img src=\"img1.jpg\" onclick=\"openModal();currentSlide(1)\" class=\"hover-shadow\">\n</div>\n<div class=\"column\">\n<img src=\"img2.jpg\" onclick=\"openModal();currentSlide(2)\" class=\"hover-shadow\">\n</div>\n<div class=\"column\">\n<img src=\"img3.jpg\" onclick=\"openModal();currentSlide(3)\" class=\"hover-shadow\">\n</div>\n<div class=\"column\">\n<img src=\"img4.jpg\" onclick=\"openModal();currentSlide(4)\" class=\"hover-shadow\">\n</div>\n</div>\n\n<!-- The Modal/Lightbox -->\n<div id=\"myModal\" class=\"modal\">\n<span class=\"close cursor\" onclick=\"closeModal()\">&times;</span>\n<div class=\"modal-content\">\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">1 / 4</div>\n<img src=\"img1_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">2 / 4</div>\n<img src=\"img2_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">3 / 4</div>\n<img src=\"img3_wide.jpg\" style=\"width:100%\">\n</div>\n\n<div class=\"mySlides\">\n<div class=\"numbertext\">4 / 4</div>\n<img src=\"img4_wide.jpg\" style=\"width:100%\">\n</div>\n\n<!-- Next/previous controls -->\n<a class=\"prev\" onclick=\"plusSlides(-1)\">&#10094;</a>\n<a class=\"next\" onclick=\"plusSlides(1)\">&#10095;</a>\n\n<!-- Caption text -->\n<div class=\"caption-container\">\n<p id=\"caption\"></p>\n</div>\n\n<!-- Thumbnail image controls -->\n<div class=\"column\">\n<img class=\"demo\" src=\"img1.jpg\" onclick=\"currentSlide(1)\" alt=\"Nature\">\n</div>\n\n<div class=\"column\">\n<img class=\"demo\" src=\"img2.jpg\" onclick=\"currentSlide(2)\" alt=\"Snow\">\n</div>\n\n<div class=\"column\">\n<img class=\"demo\" src=\"img3.jpg\" onclick=\"currentSlide(3)\" alt=\"Mountains\">\n</div>\n\n<div class=\"column\">\n<img class=\"demo\" src=\"img4.jpg\" onclick=\"currentSlide(4)\" alt=\"Lights\">\n</div>\n</div>\n</div>",
        ".row > .column {\npadding: 0 8px;\n}\n\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Create four equal columns that floats next to eachother */\n.column {\nfloat: left;\nwidth: 25%;\n}\n\n/* The Modal (background) */\n.modal {\ndisplay: none;\nposition: fixed;\nz-index: 1;\npadding-top: 100px;\nleft: 0;\ntop: 0;\nwidth: 100%;\nheight: 100%;\noverflow: auto;\nbackground-color: black;\n}\n\n/* Modal Content */\n.modal-content {\nposition: relative;\nbackground-color: #fefefe;\nmargin: auto;\npadding: 0;\nwidth: 90%;\nmax-width: 1200px;\n}\n\n/* The Close Button */\n.close {\ncolor: white;\nposition: absolute;\ntop: 10px;\nright: 25px;\nfont-size: 35px;\nfont-weight: bold;\n}\n\n.close:hover,\n.close:focus {\ncolor: #999;\ntext-decoration: none;\ncursor: pointer;\n}\n\n/* Hide the slides by default */\n.mySlides {\ndisplay: none;\n}\n\n/* Next & previous buttons */\n.prev,\n.next {\ncursor: pointer;\nposition: absolute;\ntop: 50%;\nwidth: auto;\npadding: 16px;\nmargin-top: -50px;\ncolor: white;\nfont-weight: bold;\nfont-size: 20px;\ntransition: 0.6s ease;\nborder-radius: 0 3px 3px 0;\nuser-select: none;\n-webkit-user-select: none;\n}\n\n/* Position the \"next button\" to the right */\n.next {\nright: 0;\nborder-radius: 3px 0 0 3px;\n}\n\n/* On hover, add a black background color with a little bit see-through */\n.prev:hover,\n.next:hover {\nbackground-color: rgba(0, 0, 0, 0.8);\n}\n\n/* Number text (1/3 etc) */\n.numbertext {\ncolor: #f2f2f2;\nfont-size: 12px;\npadding: 8px 12px;\nposition: absolute;\ntop: 0;\n}\n\n/* Caption text */\n.caption-container {\ntext-align: center;\nbackground-color: black;\npadding: 2px 16px;\ncolor: white;\n}\n\nimg.demo {\nopacity: 0.6;\n}\n\n.active,\n.demo:hover {\nopacity: 1;\n}\n\nimg.hover-shadow {\ntransition: 0.3s;\n}\n\n.hover-shadow:hover {\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}",
        "<script>\n// Open the Modal\nfunction openModal() {\ndocument.getElementById(\"myModal\").style.display = \"block\";\n}\n\n// Close the Modal\nfunction closeModal() {\ndocument.getElementById(\"myModal\").style.display = \"none\";\n}\n\nvar slideIndex = 1;\nshowSlides(slideIndex);\n\n// Next/previous controls\nfunction plusSlides(n) {\nshowSlides(slideIndex += n);\n}\n\n// Thumbnail image controls\nfunction currentSlide(n) {\nshowSlides(slideIndex = n);\n}\n\nfunction showSlides(n) {\nvar i;\nvar slides = document.getElementsByClassName(\"mySlides\");\nvar dots = document.getElementsByClassName(\"demo\");\nvar captionText = document.getElementById(\"caption\");\nif (n > slides.length) {slideIndex = 1}\nif (n < 1) {slideIndex = slides.length}\nfor (i = 0; i < slides.length; i++) {\nslides[i].style.display = \"none\";\n}\nfor (i = 0; i < dots.length; i++) {\ndots[i].className = dots[i].className.replace(\" active\", \"\");\n}\nslides[slideIndex-1].style.display = \"block\";\ndots[slideIndex-1].className += \" active\";\ncaptionText.innerHTML = dots[slideIndex-1].alt;\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Responsive Image Grid",
      "summary": "Learn how to create a Responsive Image Grid.\nResponsive Image Grid\nLearn how to create an image gallery that varies between four, two or full-width images, depending on screen size:\nTry it Yourself »\nCreating an Image Grid\nExample\nUse CSS Flexbox to create a responsive layout:\nExample\nTip: Go to our Image Grid Tutorial to learn how to create a clickable grid that varies between columns.\nTip: Go to our CSS Flexbox Tutorial to learn more about the flexible box layout module.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\">\n<img src=\"wedding.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"falls2.jpg\">\n<img src=\"paris.jpg\">\n<img src=\"nature.jpg\">\n<img src=\"mist.jpg\">\n<img src=\"paris.jpg\">\n</div>\n<div class=\"column\">\n<img src=\"underwater.jpg\">\n<img src=\"ocean.jpg\">\n<img src=\"wedding.jpg\">\n<img src=\"mountainskies.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"underwater.jpg\">\n</div>\n<div class=\"column\">\n<img src=\"wedding.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"falls2.jpg\">\n<img src=\"paris.jpg\">\n<img src=\"nature.jpg\">\n<img src=\"mist.jpg\">\n<img src=\"paris.jpg\">\n</div>\n<div class=\"column\">\n<img src=\"underwater.jpg\">\n<img src=\"ocean.jpg\">\n<img src=\"wedding.jpg\">\n<img src=\"mountainskies.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"underwater.jpg\">\n</div>\n</div>",
        ".row {\ndisplay: flex;\nflex-wrap: wrap;\npadding: 0 4px;\n}\n\n/* Create four equal columns that sits next to each other */\n.column {\nflex: 25%;\nmax-width: 25%;\npadding: 0 4px;\n}\n\n.column img {\nmargin-top: 8px;\nvertical-align: middle;\nwidth: 100%;\n}\n\n/* Responsive layout - makes a two column-layout instead of four columns */\n@media screen and (max-width: 800px) {\n.column {\nflex: 50%;\nmax-width: 50%;\n}\n}\n\n/* Responsive layout - makes the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nflex: 100%;\nmax-width: 100%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Image Grid",
      "summary": "Learn how to create an Image Grid.\nImage Grid\nLearn how to create an image gallery that varies between four, two or full-width images with a click of a button:\nTry it Yourself »\nCreating an Image Grid\nExample\nUse CSS Flexbox to create the layout:\nExample\nREMOVE ADS\nCreate a Controllable Grid View Using JavaScript:\nExample\nTip: Go to our Responsive Image Grid Tutorial to learn how to create a responsive image grid, that varies between columns, depending on screen size.\nTip: Go to our CSS Flexbox Tutorial to learn more about the flexible box layout module.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\">\n<img src=\"wedding.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"falls2.jpg\">\n<img src=\"paris.jpg\">\n<img src=\"nature.jpg\">\n<img src=\"mist.jpg\">\n<img src=\"paris.jpg\">\n</div>\n<div class=\"column\">\n<img src=\"underwater.jpg\">\n<img src=\"ocean.jpg\">\n<img src=\"wedding.jpg\">\n<img src=\"mountainskies.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"underwater.jpg\">\n</div>\n<div class=\"column\">\n<img src=\"wedding.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"falls2.jpg\">\n<img src=\"paris.jpg\">\n<img src=\"nature.jpg\">\n<img src=\"mist.jpg\">\n<img src=\"paris.jpg\">\n</div>\n<div class=\"column\">\n<img src=\"underwater.jpg\">\n<img src=\"ocean.jpg\">\n<img src=\"wedding.jpg\">\n<img src=\"mountainskies.jpg\">\n<img src=\"rocks.jpg\">\n<img src=\"underwater.jpg\">\n</div>\n</div>",
        ".row {\ndisplay: flex;\nflex-wrap: wrap;\npadding: 0 4px;\n}\n\n/* Create two equal columns that sits next to each other */\n.column {\nflex: 50%;\npadding: 0 4px;\n}\n\n.column img {\nmargin-top: 8px;\nvertical-align: middle;\n}",
        "<button onclick=\"one()\">1</button>\n<button onclick=\"two()\">2</button>\n<button onclick=\"four()\">4</button>\n\n<script>\n// Get the elements with class=\"column\"\nvar elements = document.getElementsByClassName(\"column\");\n\n// Declare a \"loop\" variable\nvar i;\n\n// Full-width images\nfunction one() {\nfor (i = 0; i < elements.length; i++) {\nelements[i].style.flex = \"100%\";\n}\n}\n\n// Two images side by side\nfunction two() {\nfor (i = 0; i < elements.length; i++) {\nelements[i].style.flex = \"50%\";\n}\n}\n\n// Four images side by side\nfunction four() {\nfor (i = 0; i < elements.length; i++) {\nelements[i].style.flex = \"25%\";\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Responsive Image Gallery",
      "summary": "Learn how to create a responsive image gallery with CSS.\nImage Gallery\nResize the browser window to see the responsive effect:\nCreate a Image Gallery\nExample\nThis example use media queries to re-arrange the images on different screen sizes: for screens larger than 700px wide, it will show four images side by side, for screens smaller than 700px, it will show two images side by side. For screens smaller than 500px, the images will stack vertically (100%):\nExample\nTip: Go to our HTML Images Tutorial to learn more about images.\nTip: Go to our CSS Style Images Tutorial to learn more about how to style images.",
      "examples": [
        "<div class=\"responsive\">\n<div class=\"gallery\">\n<a target=\"_blank\" href=\"img_5terre.jpg\">\n<img src=\"img_5terre.jpg\" alt=\"Cinque Terre\">\n</a>\n<div class=\"desc\">Add a description of the image here</div>\n</div>\n</div>\n\n<div class=\"responsive\">\n<div class=\"gallery\">\n<a target=\"_blank\" href=\"img_forest.jpg\">\n<img src=\"img_forest.jpg\" alt=\"Forest\">\n</a>\n<div class=\"desc\">Add a description of the image here</div>\n</div>\n</div>\n\n<div class=\"responsive\">\n<div class=\"gallery\">\n<a target=\"_blank\" href=\"img_lights.jpg\">\n<img src=\"img_lights.jpg\" alt=\"Northern Lights\">\n</a>\n<div class=\"desc\">Add a description of the image here</div>\n</div>\n</div>\n\n<div class=\"responsive\">\n<div class=\"gallery\">\n<a target=\"_blank\" href=\"img_mountains.jpg\">\n<img src=\"img_mountains.jpg\" alt=\"Mountains\">\n</a>\n<div class=\"desc\">Add a description of the image here</div>\n</div>\n</div>\n\n<div class=\"clearfix\"></div>",
        "div.gallery {\nborder: 1px solid #ccc;\n}\n\ndiv.gallery:hover {\nborder: 1px solid #777;\n}\n\ndiv.gallery img {\nwidth: 100%;\nheight: auto;\n}\n\ndiv.desc {\npadding: 15px;\ntext-align: center;\n}\n\n* {\nbox-sizing: border-box;\n}\n\n.responsive {\npadding: 0 6px;\nfloat: left;\nwidth: 24.99999%;\n}\n\n@media only screen and (max-width: 700px) {\n.responsive {\nwidth: 49.99999%;\nmargin: 6px 0;\n}\n}\n\n@media only screen and (max-width: 500px) {\n.responsive {\nwidth: 100%;\n}\n}\n\n.clearfix:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}"
      ]
    },
    {
      "title": "How TO - Horizontal Scrollable Image Gallery",
      "summary": "Learn how to create an image gallery with a horizontal scrollbar with CSS.\nImage Gallery With Horizontal Scroll\nUse the horizontal scrollbar to see the other images:\nCreate an Image Gallery with Horizontal Scroll\nExample\nExample\nTip: Go to our HTML Images Tutorial to learn more about images.\nTip: Go to our CSS Style Images Tutorial to learn more about how to style images.",
      "examples": [
        "<div class=\"scroll-container\">\n<img src=\"img_5terre.jpg\" alt=\"Cinque Terre\">\n<img src=\"img_forest.jpg\" alt=\"Forest\">\n<img src=\"img_lights.jpg\" alt=\"Northern Lights\">\n<img src=\"img_mountains.jpg\" alt=\"Mountains\">\n</div>",
        "div.scroll-container {\nbackground-color: #333;\noverflow: auto;\nwhite-space: nowrap;\npadding: 10px;\n}\n\ndiv.scroll-container img {\npadding: 10px;\n}"
      ]
    },
    {
      "title": "How TO - Tab Gallery",
      "summary": "Learn how to create a tabbed image gallery with CSS and JavaScript.\nTab Gallery\nClick on an image to expand it:\nCreate a Tab Gallery\nExample\nUse images to expand the specific image. The image that is clicked on inside the column, is shown in a container below the columns.\nCreate four columns and style the images:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- The grid: four columns -->\n<div class=\"row\">\n<div class=\"column\">\n<img src=\"img_nature.jpg\" alt=\"Nature\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_snow.jpg\" alt=\"Snow\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_mountains.jpg\" alt=\"Mountains\" onclick=\"myFunction(this);\">\n</div>\n<div class=\"column\">\n<img src=\"img_lights.jpg\" alt=\"Lights\" onclick=\"myFunction(this);\">\n</div>\n</div>\n\n<!-- The expanding image container -->\n<div class=\"container\">\n<!-- Close the image -->\n<span onclick=\"this.parentElement.style.display='none'\" class=\"closebtn\">&times;</span>\n\n<!-- Expanded image -->\n<img id=\"expandedImg\" style=\"width:100%\">\n\n<!-- Image text -->\n<div id=\"imgtext\"></div>\n</div>",
        "/* The grid: Four equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 25%;\npadding: 10px;\n}\n\n/* Style the images inside the grid */\n.column img {\nopacity: 0.8;\ncursor: pointer;\n}\n\n.column img:hover {\nopacity: 1;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* The expanding image container (positioning is needed to position the close button and the text) */\n.container {\nposition: relative;\ndisplay: none;\n}\n\n/* Expanding image text */\n#imgtext {\nposition: absolute;\nbottom: 15px;\nleft: 15px;\ncolor: white;\nfont-size: 20px;\n}\n\n/* Closable button inside the image */\n.closebtn {\nposition: absolute;\ntop: 10px;\nright: 15px;\ncolor: white;\nfont-size: 35px;\ncursor: pointer;\n}",
        "function myFunction(imgs) {\n// Get the expanded image\nvar expandImg = document.getElementById(\"expandedImg\");\n// Get the image text\nvar imgText = document.getElementById(\"imgtext\");\n// Use the same src in the expanded image as the image being clicked on from the grid\nexpandImg.src = imgs.src;\n// Use the value of the alt attribute of the clickable image as text inside the expanded image\nimgText.innerHTML = imgs.alt;\n// Show the container element (hidden with CSS)\nexpandImg.parentElement.style.display = \"block\";\n}"
      ]
    },
    {
      "title": "How TO - Image Hover Overlay",
      "summary": "Learn how to create image overlay hover effects.\nImage Overlay Fade\nLearn how to create a fading overlay effect to an image, on hover:\nExample\nFade in text:\nExample\nFade in a box:\nTip: Go to our CSS Images Tutorial to learn more about how to style images.\nAlso check out: Image Overlay Slide, Image Overlay Zoom, Image Overlay Title and Image Overlay Icon.",
      "examples": []
    },
    {
      "title": "How TO - Image Overlay Slide",
      "summary": "Learn how to create image overlay hover slide effects.\nImage Overlay Slide\nLearn how to create a sliding overlay effect to an image, on hover:\nExample\nSlide in (top):\nExample\nSlide in (bottom):\nExample\nSlide in (right):\nExample\nSlide in (left):\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": []
    },
    {
      "title": "How TO - Image Overlay Zoom",
      "summary": "Learn how to create an image overlay zoom effect on hover.\nImage Hover Fullscreen Zoom\nHover over the image to see the zoom effect.\nHow To Create an Overlay Zoom Effect\nExample\nREMOVE ADS\nExample\nTip: Also see other image overlay effects (fade, slide, etc) in our How To - Image Hover Overlay.\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "<div class=\"container\">\n<img src=\"img_avatar.png\" alt=\"Avatar\" class=\"image\">\n<div class=\"overlay\">\n<div class=\"text\">Hello World</div>\n</div>\n</div>",
        "/* Container needed to position the overlay. Adjust the width as needed */\n.container {\nposition: relative;\nwidth: 50%;\n}\n\n/* Make the image to responsive */\n.image {\nwidth: 100%;\nheight: auto;\n}\n\n/* The overlay effect (full height and width) - lays on top of the container and over the image */\n.overlay {\nposition: absolute;\nbottom: 0;\nleft: 0;\nright: 0;\nbackground-color: #008CBA;\noverflow: hidden;\nwidth: 100%;\nheight: 100%;\ntransform: scale(0);\ntransition: .3s ease;\n}\n\n/* When you mouse over the container, the overlay text will \"zoom\" in display */\n.container:hover .overlay {\ntransform: scale(1);\n}\n\n/* Some text inside the overlay, which is positioned in the middle vertically and horizontally */\n.text {\ncolor: white;\nfont-size: 20px;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\ntext-align: center;\n}"
      ]
    },
    {
      "title": "How TO - Image Overlay Title",
      "summary": "Learn how to create an image overlay title on hover.\nImage Overlay Title\nHover over the image to see the overlay effect.\nHow To Create an Overlay Image Title\nExample\nREMOVE ADS\nExample\nTip: Also see other image overlay effects (fade, slide, etc) in our How To - Image Hover Overlay.\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "<div class=\"container\">\n<img src=\"img_avatar.png\" alt=\"Avatar\" class=\"image\">\n<div class=\"overlay\">My Name is John</div>\n</div>",
        "* {box-sizing: border-box}\n\n/* Container needed to position the overlay. Adjust the width as needed */\n.container {\nposition: relative;\nwidth: 50%;\nmax-width: 300px;\n}\n\n/* Make the image to responsive */\n.image {\ndisplay: block;\nwidth: 100%;\nheight: auto;\n}\n\n/* The overlay effect - lays on top of the container and over the image */\n.overlay {\nposition: absolute;\nbottom: 0;\nbackground: rgb(0, 0, 0);\nbackground: rgba(0, 0, 0, 0.5); /* Black see-through */\ncolor: #f1f1f1;\nwidth: 100%;\ntransition: .5s ease;\nopacity:0;\ncolor: white;\nfont-size: 20px;\npadding: 20px;\ntext-align: center;\n}\n\n/* When you mouse over the container, fade in the overlay title */\n.container:hover .overlay {\nopacity: 1;\n}"
      ]
    },
    {
      "title": "How TO - Image Overlay Icon",
      "summary": "Learn how to create an image overlay icon effect on hover.\nImage Overlay Icon\nHover over the image to see the overlay effect.\nHow To Create an Overlay Image Icon\nExample\nREMOVE ADS\nExample\nTip: Also see other image overlay effects (fade, slide, etc) in our How To - Image Hover Overlay.\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<div class=\"container\">\n<img src=\"img_avatar.png\" alt=\"Avatar\" class=\"image\">\n<div class=\"overlay\">\n<a href=\"#\" class=\"icon\" title=\"User Profile\">\n<i class=\"fa fa-user\"></i>\n</a>\n</div>\n</div>",
        "/* Container needed to position the overlay. Adjust the width as needed */\n.container {\nposition: relative;\nwidth: 100%;\nmax-width: 400px;\n}\n\n/* Make the image to responsive */\n.image {\nwidth: 100%;\nheight: auto;\n}\n\n/* The overlay effect (full height and width) - lays on top of the container and over the image */\n.overlay {\nposition: absolute;\ntop: 0;\nbottom: 0;\nleft: 0;\nright: 0;\nheight: 100%;\nwidth: 100%;\nopacity: 0;\ntransition: .3s ease;\nbackground-color: red;\n}\n\n/* When you mouse over the container, fade in the overlay icon*/\n.container:hover .overlay {\nopacity: 1;\n}\n\n/* The icon inside the overlay is positioned in the middle vertically and horizontally */\n.icon {\ncolor: white;\nfont-size: 100px;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n-ms-transform: translate(-50%, -50%);\ntext-align: center;\n}\n\n/* When you move the mouse over the icon, change color */\n.fa-user:hover {\ncolor: #eee;\n}"
      ]
    },
    {
      "title": "How TO - Add Image Effects",
      "summary": "Learn how to add visual effects to images.\nImage Filters\nTry it Yourself »\nCSS Filters\nThe CSS filter property adds visual effects (like blur and saturation) to an element.\nNote: The filter property is not supported in Internet Explorer, Edge 12, or Safari 5.1 and earlier.\nGrayscale Example\nChange the color of all images to black and white (100% gray):\nREMOVE ADS\nBlur Example\nApply a blur effect to all images:\nGo to our CSS filter Property to learn more about CSS filters.",
      "examples": [
        "img {\n-webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\nfilter: grayscale(100%);\n}",
        "img {\n-webkit-filter: blur(5px); /* Safari 6.0 - 9.0 */\nfilter: blur(5px);\n}",
        "filter"
      ]
    },
    {
      "title": "How TO - Black and White Images",
      "summary": "Learn how to create a \"black and white\" image with CSS.\nBlack and White Image\nOriginal image\ngrayscale(100%)\nUse the CSS filter property to convert an image to black and white.\nGrayscale Example\nChange the color of all images to black and white (100% gray):\nGo to our CSS Images Tutorial to learn more about how to style images.\nGo to our CSS filter Property to learn more about CSS filters.",
      "examples": [
        "img {\n-webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\nfilter: grayscale(100%);\n}",
        "filter"
      ]
    },
    {
      "title": "How TO - Position Text Over an Image",
      "summary": "Learn how to place text over an image.\nImage Text\nTry it Yourself »\nHow To Place Text in Image\nExample\nExample\nTo learn more about how to style images, read our CSS Images tutorial.\nTo learn more about CSS positoning, read our CSS Position tutorial.",
      "examples": [
        "<div class=\"container\">\n<img src=\"img_snow_wide.jpg\" alt=\"Snow\" style=\"width:100%;\">\n<div class=\"bottom-left\">Bottom Left</div>\n<div class=\"top-left\">Top Left</div>\n<div class=\"top-right\">Top Right</div>\n<div class=\"bottom-right\">Bottom Right</div>\n<div class=\"centered\">Centered</div>\n</div>",
        "/* Container holding the image and the text */\n.container {\nposition: relative;\ntext-align: center;\ncolor: white;\n}\n\n/* Bottom left text */\n.bottom-left {\nposition: absolute;\nbottom: 8px;\nleft: 16px;\n}\n\n/* Top left text */\n.top-left {\nposition: absolute;\ntop: 8px;\nleft: 16px;\n}\n\n/* Top right text */\n.top-right {\nposition: absolute;\ntop: 8px;\nright: 16px;\n}\n\n/* Bottom right text */\n.bottom-right {\nposition: absolute;\nbottom: 8px;\nright: 16px;\n}\n\n/* Centered text */\n.centered {\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n}"
      ]
    },
    {
      "title": "How TO - Text Blocks Over Image",
      "summary": "Learn how to place text blocks over an image.\nImage Text Blocks\nWhat a beautiful sunrise\nWhat a beautiful sunrise\nTry it Yourself »\nHow To Place Text Blocks in Image\nExample\nExample\nTo learn more about how to style images, read our CSS Images tutorial.\nTo learn more about CSS positoning, read our CSS Position tutorial.",
      "examples": [
        "<div class=\"container\">\n<img src=\"nature.jpg\" alt=\"Norway\" style=\"width:100%;\">\n<div class=\"text-block\">\n<h4>Nature</h4>\n<p>What a beautiful sunrise</p>\n</div>\n</div>",
        "/* Container holding the image and the text */\n.container {\nposition: relative;\n}\n\n/* Bottom right text */\n.text-block {\nposition: absolute;\nbottom: 20px;\nright: 20px;\nbackground-color: black;\ncolor: white;\npadding-left: 20px;\npadding-right: 20px;\n}"
      ]
    },
    {
      "title": "How TO - Image with Transparent Text Heading",
      "summary": "Learn how to create an image with a transparent (see-through) background text, using CSS.\nTransparent Image Text\nLorem ipsum dolor sit amet, an his etiam torquatos. Tollit soleat phaedrum te duo, eum cu recteque expetendis neglegentur. Cu mentitum maiestatis persequeris pro, pri ponderum tractatos ei.\nHow To Create a Transparent Image Text\nExample\nExample",
      "examples": [
        "<div class=\"container\">\n<img src=\"notebook.jpg\" alt=\"Notebook\" style=\"width:100%;\">\n<div class=\"content\">\n<h1>Heading</h1>\n<p>Lorem ipsum..</p>\n</div>\n</div>",
        ".container {\nposition: relative;\nmax-width: 800px; /* Maximum width */\nmargin: 0 auto; /* Center it */\n}\n\n.container .content {\nposition: absolute; /* Position the background text */\nbottom: 0; /* At the bottom. Use top:0 to append it to the top */\nbackground: rgb(0, 0, 0); /* Fallback color */\nbackground: rgba(0, 0, 0, 0.5); /* Black background with 0.5 opacity */\ncolor: #f1f1f1; /* Grey text */\nwidth: 100%; /* Full width */\npadding: 20px; /* Some padding */\n}"
      ]
    },
    {
      "title": "How TO - Full Page Image",
      "summary": "Learn how to create a full page background image with CSS.\nFull Page Image\nLearn how to create a background image that covers the entire browser window. The following example shows a full-screen (and a half-screen) responsive background image:\nDemo - Full page background image\nDemo - Half page background image\nHow To Create a Full Height Image\nUse a container element and add a background image to the container with height: 100%. Tip: Use 50% to create a half page background image. Then use the following background properties to center and scale the image perfectly:\nNote: To make sure that the image covers the whole screen, you must also apply height: 100% to both <html> and <body>:\nExample\nHalf page background image:\nExample",
      "examples": [
        "body, html {\nheight: 100%;\n}\n\n.bg {\n/* The image used */\nbackground-image: url(\"img_girl.jpg\");\n\n/* Full height */\nheight: 100%;\n\n/* Center and scale the image nicely */\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n}",
        ".bg {\nheight: 50%;\n}",
        "height: 100%"
      ]
    },
    {
      "title": "How TO - Form on Image",
      "summary": "Learn how to add a form to a full-width image with CSS.\nForm on Image\nHow To Add a Form to an Image\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"bg-img\">\n<form action=\"/action_page.php\" class=\"container\">\n<h1>Login</h1>\n\n<label for=\"email\"><b>Email</b></label>\n<input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required>\n\n<label for=\"psw\"><b>Password</b></label>\n<input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n\n<button type=\"submit\" class=\"btn\">Login</button>\n</form>\n</div>",
        "body, html {\nheight: 100%;\n}\n\n* {\nbox-sizing: border-box;\n}\n\n.bg-img {\n/* The image used */\nbackground-image: url(\"img_nature.jpg\");\n\n/* Control the height of the image */\nmin-height: 380px;\n\n/* Center and scale the image nicely */\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nposition: relative;\n}\n\n/* Add styles to the form container */\n.container {\nposition: absolute;\nright: 0;\nmargin: 20px;\nmax-width: 300px;\npadding: 16px;\nbackground-color: white;\n}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\nwidth: 100%;\npadding: 15px;\nmargin: 5px 0 22px 0;\nborder: none;\nbackground: #f1f1f1;\n}\n\ninput[type=text]:focus, input[type=password]:focus {\nbackground-color: #ddd;\noutline: none;\n}\n\n/* Set a style for the submit button */\n.btn {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 16px 20px;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nopacity: 0.9;\n}\n\n.btn:hover {\nopacity: 1;\n}"
      ]
    },
    {
      "title": "How TO - Hero Image",
      "summary": "Learn how to create a Hero Image with CSS.\nA Hero Image is a large image with text, often placed at the top of a webpage:\nTry it Yourself »\nHow To Create a Hero Image\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"hero-image\">\n<div class=\"hero-text\">\n<h1>I am John Doe</h1>\n<p>And I'm a Photographer</p>\n<button>Hire me</button>\n</div>\n</div>",
        "body, html {\nheight: 100%;\n}\n\n/* The hero image */\n.hero-image {\n/* Use \"linear-gradient\" to add a darken background effect to the image (photographer.jpg). This will make the text easier to read */\nbackground-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(\"photographer.jpg\");\n\n/* Set a specific height */\nheight: 50%;\n\n/* Position and center the image to scale nicely on all screens */\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nposition: relative;\n}\n\n/* Place text in the middle of the image */\n.hero-text {\ntext-align: center;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\ncolor: white;\n}"
      ]
    },
    {
      "title": "How TO - Blurred Background Image",
      "summary": "Learn how to create a blurry background image with CSS.\nBlur Background Image\nNote: This example does not work in Edge 12, IE 11 or earlier versions.\nTry it Yourself »\nHow To Create a Blurry Background Image\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"bg-image\"></div>\n\n<div class=\"bg-text\">\n<h1>I am John Doe</h1>\n<p>And I'm a Photographer</p>\n</div>",
        "body, html {\nheight: 100%;\n}\n\n* {\nbox-sizing: border-box;\n}\n\n.bg-image {\n/* The image used */\nbackground-image: url(\"photographer.jpg\");\n\n/* Add the blur effect */\nfilter: blur(8px);\n-webkit-filter: blur(8px);\n\n/* Full height */\nheight: 100%;\n\n/* Center and scale the image nicely */\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n}\n\n/* Position text in the middle of the page/image */\n.bg-text {\nbackground-color: rgb(0,0,0); /* Fallback color */\nbackground-color: rgba(0,0,0, 0.4); /* Black w/opacity/see-through */\ncolor: white;\nfont-weight: bold;\nborder: 3px solid #f1f1f1;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nz-index: 2;\nwidth: 80%;\npadding: 20px;\ntext-align: center;\n}"
      ]
    },
    {
      "title": "How TO - Change Background on Scroll",
      "summary": "Learn how to change background images on scroll with CSS.\nChange Background Image on Scroll\nScroll down inside the frame to see the effect:\nTry it Yourself »\nHow To Change Background Image on Scroll\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"bg-image img1\"></div>\n<div class=\"bg-image img2\"></div>\n<div class=\"bg-image img3\"></div>\n<div class=\"bg-image img4\"></div>\n<div class=\"bg-image img5\"></div>\n<div class=\"bg-image img6\"></div>\n\n<div class=\"bg-text\">TEXT</div>",
        "body, html {\nheight: 100%;\nmargin: 0;\nfont-family: Arial, Helvetica, sans-serif;\n}\n\n* {\nbox-sizing: border-box;\n}\n\n.bg-image {\n/* Full height */\nheight: 50%;\n\n/* Center and scale the image nicely */\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n}\n\n/* Images used */\n.img1 { background-image: url(\"img_snow.jpg\"); }\n.img2 { background-image: url(\"img_girl.jpg\"); }\n.img3 { background-image: url(\"img_lights.jpg\"); }\n.img4 { background-image: url(\"img_nature.jpg\"); }\n.img5 { background-image: url(\"img_forest.jpg\"); }\n.img6 { background-image: url(\"img_woods.jpg\"); }\n\n/* Position text in the middle of the page/image */\n.bg-text {\nbackground-color: rgb(0,0,0); /* Fallback color */\nbackground-color: rgba(0,0,0, 0.4); /* Black w/opacity/see-through */\ncolor: white;\nfont-weight: bold;\nfont-size: 80px;\nborder: 10px solid #f1f1f1;\nposition: fixed; /* Stay fixed */\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nz-index: 2;\nwidth: 300px;\npadding: 20px;\ntext-align: center;\n}"
      ]
    },
    {
      "title": "How TO - Align Images Side By Side",
      "summary": "Learn how to align images side by side with CSS.\nSide-by-Side Image Gallery\nTry it Yourself »\nHow To Place Images Side by Side\nExample\nHow to create side-by-side images with the CSS float property:\nFloat Example\nHow to create side-by-side images with the CSS flex property:\nFlexbox Example\nNote: Flexbox is not supported in Internet Explorer 10 and earlier versions. It is up to you if you want to use floats or flex to create a three-column layout. However, if you need support for IE10 and down, you should use float.\nTip: To learn more about the Flexible Box Layout Module, read our CSS Flexbox chapter.\nREMOVE ADS\nAdd Responsiveness\nOptionally, you could add media queries to make the images stack on top of each other instead of floating next to each other, on a specific screen width.\nThe following example will stack the images vertically on screens that are 500px wide or less:\nResponsive Example\nTo learn more about media queries, read our CSS Media Queries Tutorial.\nRelated Pages\nTo learn more about how to style images, read our CSS Images Tutorial.\nTo learn more about CSS Float, read our CSS Float Tutorial.\nTo learn how to create an image gallery with CSS, read our CSS Image Gallery Tutorial.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\">\n<img src=\"img_snow.jpg\" alt=\"Snow\" style=\"width:100%\">\n</div>\n<div class=\"column\">\n<img src=\"img_forest.jpg\" alt=\"Forest\" style=\"width:100%\">\n</div>\n<div class=\"column\">\n<img src=\"img_mountains.jpg\" alt=\"Mountains\" style=\"width:100%\">\n</div>\n</div>",
        "/* Three image containers (use 25% for four, and 50% for two, etc) */\n.column {\nfloat: left;\nwidth: 33.33%;\npadding: 5px;\n}\n\n/* Clear floats after image containers */\n.row::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}",
        ".row {\ndisplay: flex;\n}\n\n.column {\nflex: 33.33%;\npadding: 5px;\n}",
        "/* Responsive layout - makes the three columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 500px) {\n.column {\nwidth: 100%;\n}\n}",
        "float",
        "flex"
      ]
    },
    {
      "title": "How TO - Rounded Images",
      "summary": "Learn how to create rounded and circular images with CSS.\nHow To Create Rounded Images\nExample\nUse the border-radius property to add rounded corners to an image. 50% will make the image circular:\nExample\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "<img src=\"img_avatar.png\" alt=\"Avatar\">",
        "img {\nborder-radius: 50%;\n}",
        "border-radius"
      ]
    },
    {
      "title": "How TO - Avatar Images",
      "summary": "Learn how to create an avatar image with CSS.\nHow To Create Avatar Images\nExample\nSet a matching height and width that looks good, and use the border-radius property to add rounded corners to an image. 50% will make the image circular:\nExample\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "<img src=\"avatar.png\" alt=\"Avatar\" class=\"avatar\">",
        ".avatar {\nvertical-align: middle;\nwidth: 50px;\nheight: 50px;\nborder-radius: 50%;\n}",
        "height",
        "width",
        "border-radius"
      ]
    },
    {
      "title": "How TO - Responsive Images",
      "summary": "Learn how to create an responsive image with CSS.\nResponsive images will automatically adjust to fit the size of the screen.\nResize the browser window to see the responsive effect:\nHow To Create Responsive Images\nExample\nIf you want the image to scale both up and down on responsiveness, set the CSS width property to 100% and height to auto:\nExample\nIf you want an image to scale down if it has to, but never scale up to be larger than its original size, use max-width: 100%:\nExample\nIf you want to restrict a responsive image to a maximum size, use the max-width property, with a pixel value of your choice:\nExample\nGo to our CSS Images Tutorial to learn more about how to style images.\nGo to our CSS RWD Tutorial to learn more about responsive web design.",
      "examples": [
        "<img src=\"nature.jpg\" alt=\"Nature\" class=\"responsive\">",
        ".responsive {\nwidth: 100%;\nheight: auto;\n}",
        ".responsive {\nmax-width: 100%;\nheight: auto;\n}",
        ".responsive {\nwidth: 100%;\nmax-width: 400px;\nheight: auto;\n}",
        "width",
        "height",
        "max-width: 100%",
        "max-width"
      ]
    },
    {
      "title": "How TO - Center Images",
      "summary": "Learn how to center an image with CSS.\nCentered image:\nHow To Center Images\nExample\nTo center an image, set left and right margin to auto and make it into a block element:\nExample\nNote that it cannot be centered if the width is set to 100% (full-width).\nTip: Go to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "<img src=\"paris.jpg\" alt=\"Paris\" class=\"center\">",
        ".center {\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\nwidth: 50%;\n}",
        "auto",
        "block"
      ]
    },
    {
      "title": "How TO - Thumbnail",
      "summary": "Learn how to create a thumbnail image.\nThumbnail Image\nA thumbnail is a small image that represents a larger image (when clicked on), and is often recognized with a border around it:\nHow To Create a Thumbnail Image\nUse an <img> element and wrap an <a> element around it. Style the image with a border and add a hover effect:\nExample\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "<style>\nimg {\nborder: 1px solid #ddd; /* Gray border */\nborder-radius: 4px;  /* Rounded border */\npadding: 5px; /* Some padding */\nwidth: 150px; /* Set a small width */\n}\n\n/* Add a hover effect (blue shadow) */\nimg:hover {\nbox-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);\n}\n</style>\n<body>\n\n<a target=\"_blank\" href=\"img_forest.jpg\">\n<img src=\"img_forest.jpg\" alt=\"Forest\">\n</a>\n\n</body>"
      ]
    },
    {
      "title": "How TO - Add a Border to an Image",
      "summary": "Learn how to add a border around an image.\nBorder Around an Image\nHow To Add a Border to an Image\nUse the border property to add a border to an <img> element:\nExample\nGo to our CSS Images Tutorial to learn more about how to style images.",
      "examples": [
        "img {\nborder: 5px solid #555;\n}",
        "border"
      ]
    },
    {
      "title": "How TO - \"Meet The Team\" Page Meet The Team",
      "summary": "Learn how to create responsive \"Meet The Team\" page with CSS.\n\"Meet the team\" pages/sections are often used to list the employers in a firm, with specified contact information:\nJane Doe\nCEO & Founder\nPhasellus eget enim eu lectus faucibus vestibulum.\nexample@example.com\nContact\nMike Ross\nArt Director\nPhasellus eget enim eu lectus faucibus vestibulum.\nexample@example.com\nContact\nJohn Doe\nDesigner\nPhasellus eget enim eu lectus faucibus vestibulum.\nexample@example.com\nContact\nTry it Yourself »\nHow To Create Meet The Team Pages\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\">\n<div class=\"card\">\n<img src=\"img1.jpg\" alt=\"Jane\" style=\"width:100%\">\n<div class=\"container\">\n<h2>Jane Doe</h2>\n<p class=\"title\">CEO &amp; Founder</p>\n<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n<p>example@example.com</p>\n<p><button class=\"button\">Contact</button></p>\n</div>\n</div>\n</div>\n\n<div class=\"column\">\n<div class=\"card\">\n<img src=\"img2.jpg\" alt=\"Mike\" style=\"width:100%\">\n<div class=\"container\">\n<h2>Mike Ross</h2>\n<p class=\"title\">Art Director</p>\n<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n<p>example@example.com</p>\n<p><button class=\"button\">Contact</button></p>\n</div>\n</div>\n</div>\n\n<div class=\"column\">\n<div class=\"card\">\n<img src=\"img3.jpg\" alt=\"John\" style=\"width:100%\">\n<div class=\"container\">\n<h2>John Doe</h2>\n<p class=\"title\">Designer</p>\n<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n<p>example@example.com</p>\n<p><button class=\"button\">Contact</button></p>\n</div>\n</div>\n</div>\n</div>",
        "/* Three columns side by side */\n.column {\nfloat: left;\nwidth: 33.3%;\nmargin-bottom: 16px;\npadding: 0 8px;\n}\n\n/* Display the columns below each other instead of side by side on small screens */\n@media screen and (max-width: 650px) {\n.column {\nwidth: 100%;\ndisplay: block;\n}\n}\n\n/* Add some shadows to create a card effect */\n.card {\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n}\n\n/* Some left and right padding inside the container */\n.container {\npadding: 0 16px;\n}\n\n/* Clear floats */\n.container::after, .row::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n.title {\ncolor: grey;\n}\n\n.button {\nborder: none;\noutline: 0;\ndisplay: inline-block;\npadding: 8px;\ncolor: white;\nbackground-color: #000;\ntext-align: center;\ncursor: pointer;\nwidth: 100%;\n}\n\n.button:hover {\nbackground-color: #555;\n}"
      ]
    },
    {
      "title": "How TO - Sticky Image",
      "summary": "Learn how to create a sticky image with CSS.\nSticky Image\nTry it Yourself »\nNote: This example does not work in Internet Explorer or Edge 15 and earlier versions.\nSticky Image\nExample\nAn element with position: sticky; is positioned based on the user's scroll position.\nA sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it \"sticks\" in place (like position:fixed).\nNote: You must specify at least one of top, right, bottom or left for sticky positioning to work.\nTo learn more about CSS positoning, read our CSS Position tutorial.\nTo learn more about how to style images, read our CSS Images tutorial.",
      "examples": [
        "img.sticky {\nposition: sticky;\ntop: 0;\n}",
        "position: sticky;",
        "relative",
        "fixed",
        "top",
        "right",
        "bottom",
        "left"
      ]
    },
    {
      "title": "How TO - Flip an Image",
      "summary": "Learn how to flip an image (add a mirror effect) with CSS.\nMove your mouse over the image:\nHow To Flip an Image\nExample\nNote: This example does not work on tablets or mobile phones.\nTip: Go to our CSS 3D Transforms Tutorial, to learn more about 3D transformations.\n3D Flip Image with Text\nLearn how to do an animated 3D flip of an image with text:\nParis\nWhat an amazing city\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<style>\nimg:hover {\n-webkit-transform: scaleX(-1);\ntransform: scaleX(-1);\n}\n</style>\n\n<img src=\"paris.jpg\" alt=\"Paris\">",
        "<div class=\"flip-box\">\n<div class=\"flip-box-inner\">\n<div class=\"flip-box-front\">\n<img src=\"img_paris.jpg\" alt=\"Paris\" style=\"width:300px;height:200px\">\n</div>\n<div class=\"flip-box-back\">\n<h2>Paris</h2>\n<p>What an amazing city</p>\n</div>\n</div>\n</div>",
        "/* The flip box container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */\n.flip-box {\nbackground-color: transparent;\nwidth: 300px;\nheight: 200px;\nborder: 1px solid #f1f1f1;\nperspective: 1000px; /* Remove this if you don't want the 3D effect */\n}\n\n/* This container is needed to position the front and back side */\n.flip-box-inner {\nposition: relative;\nwidth: 100%;\nheight: 100%;\ntext-align: center;\ntransition: transform 0.8s;\ntransform-style: preserve-3d;\n}\n\n/* Do an horizontal flip when you move the mouse over the flip box container */\n.flip-box:hover .flip-box-inner {\ntransform: rotateY(180deg);\n}\n\n/* Position the front and back side */\n.flip-box-front, .flip-box-back {\nposition: absolute;\nwidth: 100%;\nheight: 100%;\n-webkit-backface-visibility: hidden; /* Safari */\nbackface-visibility: hidden;\n}\n\n/* Style the front side (fallback if image is missing) */\n.flip-box-front {\nbackground-color: #bbb;\ncolor: black;\n}\n\n/* Style the back side */\n.flip-box-back {\nbackground-color: dodgerblue;\ncolor: white;\ntransform: rotateY(180deg);\n}"
      ]
    },
    {
      "title": "How TO - Shake an Image",
      "summary": "Learn how to shake/wiggle an image with CSS.\nMove your mouse over the image:\nHow To Shake an Image\nExample\nTip: Go to our CSS 3D Transforms Tutorial, to learn more about 3D transformations.",
      "examples": [
        "img:hover {\n/* Start the shake animation and make the animation last for 0.5 seconds */\nanimation: shake 0.5s;\n\n/* When the animation is finished, start again */\nanimation-iteration-count: infinite;\n}\n\n@keyframes shake {\n0% { transform: translate(1px, 1px) rotate(0deg); }\n10% { transform: translate(-1px, -2px) rotate(-1deg); }\n20% { transform: translate(-3px, 0px) rotate(1deg); }\n30% { transform: translate(3px, 2px) rotate(0deg); }\n40% { transform: translate(1px, -1px) rotate(1deg); }\n50% { transform: translate(-1px, 2px) rotate(-1deg); }\n60% { transform: translate(-3px, 1px) rotate(0deg); }\n70% { transform: translate(3px, 1px) rotate(-1deg); }\n80% { transform: translate(-1px, -1px) rotate(1deg); }\n90% { transform: translate(1px, 2px) rotate(0deg); }\n100% { transform: translate(1px, -2px) rotate(-1deg); }\n}"
      ]
    },
    {
      "title": "How TO - Portfolio Gallery",
      "summary": "Learn how to create a responsive portfolio gallery grid with CSS.\nPortfolio Gallery\nLearn how to create a responsive portfolio gallery that varies between 4 columns, 2 columns and full-width columns depending on screen width:\nTry it Yourself »\nHow To Create a Portfolio Website\nExample\nREMOVE ADS\nExample\nTip: Also check out Portfolio Gallery with Filtering",
      "examples": [
        "<!-- MAIN (Center website) -->\n<div class=\"main\">\n\n<h1>MYLOGO.COM</h1>\n<hr>\n\n<h2>PORTFOLIO</h2>\n<p>Resize the browser window to see the responsive effect.</p>\n\n<!-- Portfolio Gallery Grid -->\n<div class=\"row\">\n<div class=\"column\">\n<div class=\"content\">\n<img src=\"mountains.jpg\" alt=\"Mountains\" style=\"width:100%\">\n<h3>My Work</h3>\n<p>Lorem ipsum..</p>\n</div>\n</div>\n<div class=\"column\">\n<div class=\"content\">\n<img src=\"lights.jpg\" alt=\"Lights\" style=\"width:100%\">\n<h3>My Work</h3>\n<p>Lorem ipsum..</p>\n</div>\n</div>\n<div class=\"column\">\n<div class=\"content\">\n<img src=\"nature.jpg\" alt=\"Nature\" style=\"width:100%\">\n<h3>My Work</h3>\n<p>Lorem ipsum..</p>\n</div>\n</div>\n<div class=\"column\">\n<div class=\"content\">\n<img src=\"mountains.jpg\" alt=\"Mountains\" style=\"width:100%\">\n<h3>My Work</h3>\n<p>Lorem ipsum..</p>\n</div>\n</div>\n</div>\n\n<div class=\"content\">\n<img src=\"bear.jpg\" alt=\"Bear\" style=\"width:100%\">\n<h3>Some Other Work</h3>\n<p>Lorem ipsum..</p>\n</div>\n\n<!-- END MAIN -->\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\nbody {\nbackground-color: #f1f1f1;\npadding: 20px;\nfont-family: Arial;\n}\n\n/* Center website */\n.main {\nmax-width: 1000px;\nmargin: auto;\n}\n\nh1 {\nfont-size: 50px;\nword-break: break-all;\n}\n\n.row {\nmargin: 8px -16px;\n}\n\n/* Add padding BETWEEN each column (if you want) */\n.row,\n.row > .column {\npadding: 8px;\n}\n\n/* Create four equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 25%;\n}\n\n/* Clear floats after rows */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Content */\n.content {\nbackground-color: white;\npadding: 10px;\n}\n\n/* Responsive layout - makes a two column-layout instead of four columns */\n@media screen and (max-width: 900px) {\n.column {\nwidth: 50%;\n}\n}\n\n/* Responsive layout - makes the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Portfolio Gallery with Filtering",
      "summary": "Learn how to create a portfolio gallery with filtering.\nMy Portfolio\nClick on the buttons to filter a category:\nLorem ipsum dolor..\nLorem ipsum dolor..\nLorem ipsum dolor..\nLorem ipsum dolor..\nLorem ipsum dolor..\nLorem ipsum dolor..\nLorem ipsum dolor..\nLorem ipsum dolor..\nLorem ipsum dolor..\nTry it Yourself »\nHow To Create a Portfolio Website\nExample\nREMOVE ADS\nExample\nExample\nTip: Also check out Portfolio Gallery",
      "examples": [
        "<h2>PORTFOLIO</h2>\n<div id=\"myBtnContainer\">\n<button class=\"btn active\" onclick=\"filterSelection('all')\"> Show all</button>\n<button class=\"btn\" onclick=\"filterSelection('nature')\"> Nature</button>\n<button class=\"btn\" onclick=\"filterSelection('cars')\"> Cars</button>\n<button class=\"btn\" onclick=\"filterSelection('people')\"> People</button>\n</div>\n\n<!-- Portfolio Gallery Grid -->\n<div class=\"row\">\n<div class=\"column nature\">\n<div class=\"content\">\n<img src=\"/w3images/mountains.jpg\" alt=\"Mountains\" style=\"width:100%\">\n<h4>Mountains</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n<div class=\"column nature\">\n<div class=\"content\">\n<img src=\"/w3images/lights.jpg\" alt=\"Lights\" style=\"width:100%\">\n<h4>Lights</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n<div class=\"column nature\">\n<div class=\"content\">\n<img src=\"/w3images/nature.jpg\" alt=\"Nature\" style=\"width:100%\">\n<h4>Forest</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n\n<div class=\"column cars\">\n<div class=\"content\">\n<img src=\"/w3images/cars1.jpg\" alt=\"Car\" style=\"width:100%\">\n<h4>Retro</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n<div class=\"column cars\">\n<div class=\"content\">\n<img src=\"/w3images/cars2.jpg\" alt=\"Car\" style=\"width:100%\">\n<h4>Fast</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n<div class=\"column cars\">\n<div class=\"content\">\n<img src=\"/w3images/cars3.jpg\" alt=\"Car\" style=\"width:100%\">\n<h4>Classic</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n\n<div class=\"column people\">\n<div class=\"content\">\n<img src=\"/w3images/people1.jpg\" alt=\"People\" style=\"width:100%\">\n<h4>Girl</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n<div class=\"column people\">\n<div class=\"content\">\n<img src=\"/w3images/people2.jpg\" alt=\"People\" style=\"width:100%\">\n<h4>Man</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n<div class=\"column people\">\n<div class=\"content\">\n<img src=\"/w3images/people3.jpg\" alt=\"People\" style=\"width:100%\">\n<h4>Woman</h4>\n<p>Lorem ipsum dolor..</p>\n</div>\n</div>\n<!-- END GRID -->\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\nbody {\nbackground-color: #f1f1f1;\npadding: 20px;\nfont-family: Arial;\n}\n\n/* Center website */\n.main {\nmax-width: 1000px;\nmargin: auto;\n}\n\nh1 {\nfont-size: 50px;\nword-break: break-all;\n}\n\n.row {\nmargin: 8px -16px;\n}\n\n/* Add padding BETWEEN each column (if you want) */\n.row,\n.row > .column {\npadding: 8px;\n}\n\n/* Create three equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 33.33%;\ndisplay: none; /* Hide columns by default */\n}\n\n/* Clear floats after rows */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Content */\n.content {\nbackground-color: white;\npadding: 10px;\n}\n\n/* The \"show\" class is added to the filtered elements */\n.show {\ndisplay: block;\n}\n\n/* Style the buttons */\n.btn {\nborder: none;\noutline: none;\npadding: 12px 16px;\nbackground-color: white;\ncursor: pointer;\n}\n\n/* Add a grey background color on mouse-over */\n.btn:hover {\nbackground-color: #ddd;\n}\n\n/* Add a dark background color to the active button */\n.btn.active {\nbackground-color: #666;\ncolor: white;\n}",
        "filterSelection(\"all\") // Execute the function and show all columns\nfunction filterSelection(c) {\nvar x, i;\nx = document.getElementsByClassName(\"column\");\nif (c == \"all\") c = \"\";\n// Add the \"show\" class (display:block) to the filtered elements, and remove the \"show\" class from the elements that are not selected\nfor (i = 0; i < x.length; i++) {\nw3RemoveClass(x[i], \"show\");\nif (x[i].className.indexOf(c) > -1) w3AddClass(x[i], \"show\");\n}\n}\n\n// Show filtered elements\nfunction w3AddClass(element, name) {\nvar i, arr1, arr2;\narr1 = element.className.split(\" \");\narr2 = name.split(\" \");\nfor (i = 0; i < arr2.length; i++) {\nif (arr1.indexOf(arr2[i]) == -1) {\nelement.className += \" \" + arr2[i];\n}\n}\n}\n\n// Hide elements that are not selected\nfunction w3RemoveClass(element, name) {\nvar i, arr1, arr2;\narr1 = element.className.split(\" \");\narr2 = name.split(\" \");\nfor (i = 0; i < arr2.length; i++) {\nwhile (arr1.indexOf(arr2[i]) > -1) {\narr1.splice(arr1.indexOf(arr2[i]), 1);\n}\n}\nelement.className = arr1.join(\" \");\n}\n\n// Add active class to the current button (highlight it)\nvar btnContainer = document.getElementById(\"myBtnContainer\");\nvar btns = btnContainer.getElementsByClassName(\"btn\");\nfor (var i = 0; i < btns.length; i++) {\nbtns[i].addEventListener(\"click\", function(){\nvar current = document.getElementsByClassName(\"active\");\ncurrent[0].className = current[0].className.replace(\" active\", \"\");\nthis.className += \" active\";\n});\n}"
      ]
    },
    {
      "title": "How TO - Image Zoom",
      "summary": "Learn how to create an image zoom.\nImage Zoom\nMouse over the image:\nZoom Preview:\nTry it Yourself »\nCreate an Image Zoom\nExample\nThe container must have a \"relative\" positioning.\nExample\nREMOVE ADS\nExample\nExample",
      "examples": [
        "<div class=\"img-zoom-container\">\n<img id=\"myimage\" src=\"img_girl.jpg\" width=\"300\" height=\"240\" alt=\"Girl\">\n<div id=\"myresult\" class=\"img-zoom-result\"></div>\n</div>",
        "* {box-sizing: border-box;}\n\n.img-zoom-container {\nposition: relative;\n}\n\n.img-zoom-lens {\nposition: absolute;\nborder: 1px solid #d4d4d4;\n/*set the size of the lens:*/\nwidth: 40px;\nheight: 40px;\n}\n\n.img-zoom-result {\nborder: 1px solid #d4d4d4;\n/*set the size of the result div:*/\nwidth: 300px;\nheight: 300px;\n}",
        "function imageZoom(imgID, resultID) {\nvar img, lens, result, cx, cy;\nimg = document.getElementById(imgID);\nresult = document.getElementById(resultID);\n/* Create lens: */\nlens = document.createElement(\"DIV\");\nlens.setAttribute(\"class\", \"img-zoom-lens\");\n/* Insert lens: */\nimg.parentElement.insertBefore(lens, img);\n/* Calculate the ratio between result DIV and lens: */\ncx = result.offsetWidth / lens.offsetWidth;\ncy = result.offsetHeight / lens.offsetHeight;\n/* Set background properties for the result DIV */\nresult.style.backgroundImage = \"url('\" + img.src + \"')\";\nresult.style.backgroundSize = (img.width * cx) + \"px \" + (img.height * cy) + \"px\";\n/* Execute a function when someone moves the cursor over the image, or the lens: */\nlens.addEventListener(\"mousemove\", moveLens);\nimg.addEventListener(\"mousemove\", moveLens);\n/* And also for touch screens: */\nlens.addEventListener(\"touchmove\", moveLens);\nimg.addEventListener(\"touchmove\", moveLens);\nfunction moveLens(e) {\nvar pos, x, y;\n/* Prevent any other actions that may occur when moving over the image */\ne.preventDefault();\n/* Get the cursor's x and y positions: */\npos = getCursorPos(e);\n/* Calculate the position of the lens: */\nx = pos.x - (lens.offsetWidth / 2);\ny = pos.y - (lens.offsetHeight / 2);\n/* Prevent the lens from being positioned outside the image: */\nif (x > img.width - lens.offsetWidth) {x = img.width - lens.offsetWidth;}\nif (x < 0) {x = 0;}\nif (y > img.height - lens.offsetHeight) {y = img.height - lens.offsetHeight;}\nif (y < 0) {y = 0;}\n/* Set the position of the lens: */\nlens.style.left = x + \"px\";\nlens.style.top = y + \"px\";\n/* Display what the lens \"sees\": */\nresult.style.backgroundPosition = \"-\" + (x * cx) + \"px -\" + (y * cy) + \"px\";\n}\nfunction getCursorPos(e) {\nvar a, x = 0, y = 0;\ne = e || window.event;\n/* Get the x and y positions of the image: */\na = img.getBoundingClientRect();\n/* Calculate the cursor's x and y coordinates, relative to the image: */\nx = e.pageX - a.left;\ny = e.pageY - a.top;\n/* Consider any page scrolling: */\nx = x - window.pageXOffset;\ny = y - window.pageYOffset;\nreturn {x : x, y : y};\n}\n}",
        "<script>\nimageZoom(\"myimage\", \"myresult\");\n</script>"
      ]
    },
    {
      "title": "How TO - Image Magnifier Glass",
      "summary": "Learn how to create an image magnifier glass.\nImage Magnifier Glass\nMouse over the image:\nTry it Yourself »\nCreate an Image Magnifier Glass\nExample\nThe container must have a \"relative\" positioning.\nExample\nREMOVE ADS\nExample\nExample",
      "examples": [
        "<div class=\"img-magnifier-container\">\n<img id=\"myimage\" src=\"img_girl.jpg\" width=\"600\" height=\"400\" alt=\"Girl\">\n</div>",
        "* {box-sizing: border-box;}\n\n.img-magnifier-container {\nposition: relative;\n}\n\n.img-magnifier-glass {\nposition: absolute;\nborder: 3px solid #000;\nborder-radius: 50%;\ncursor: none;\n/*Set the size of the magnifier glass:*/\nwidth: 100px;\nheight: 100px;\n}",
        "function magnify(imgID, zoom) {\nvar img, glass, w, h, bw;\nimg = document.getElementById(imgID);\n\n/* Create magnifier glass: */\nglass = document.createElement(\"DIV\");\nglass.setAttribute(\"class\", \"img-magnifier-glass\");\n\n/* Insert magnifier glass: */\nimg.parentElement.insertBefore(glass, img);\n\n/* Set background properties for the magnifier glass: */\nglass.style.backgroundImage = \"url('\" + img.src + \"')\";\nglass.style.backgroundRepeat = \"no-repeat\";\nglass.style.backgroundSize = (img.width * zoom) + \"px \" + (img.height * zoom) + \"px\";\nbw = 3;\nw = glass.offsetWidth / 2;\nh = glass.offsetHeight / 2;\n\n/* Execute a function when someone moves the magnifier glass over the image: */\nglass.addEventListener(\"mousemove\", moveMagnifier);\nimg.addEventListener(\"mousemove\", moveMagnifier);\n\n/*and also for touch screens:*/\nglass.addEventListener(\"touchmove\", moveMagnifier);\nimg.addEventListener(\"touchmove\", moveMagnifier);\nfunction moveMagnifier(e) {\nvar pos, x, y;\n/* Prevent any other actions that may occur when moving over the image */\ne.preventDefault();\n/* Get the cursor's x and y positions: */\npos = getCursorPos(e);\nx = pos.x;\ny = pos.y;\n/* Prevent the magnifier glass from being positioned outside the image: */\nif (x > img.width - (w / zoom)) {x = img.width - (w / zoom);}\nif (x < w / zoom) {x = w / zoom;}\nif (y > img.height - (h / zoom)) {y = img.height - (h / zoom);}\nif (y < h / zoom) {y = h / zoom;}\n/* Set the position of the magnifier glass: */\nglass.style.left = (x - w) + \"px\";\nglass.style.top = (y - h) + \"px\";\n/* Display what the magnifier glass \"sees\": */\nglass.style.backgroundPosition = \"-\" + ((x * zoom) - w + bw) + \"px -\" + ((y * zoom) - h + bw) + \"px\";\n}\n\nfunction getCursorPos(e) {\nvar a, x = 0, y = 0;\ne = e || window.event;\n/* Get the x and y positions of the image: */\na = img.getBoundingClientRect();\n/* Calculate the cursor's x and y coordinates, relative to the image: */\nx = e.pageX - a.left;\ny = e.pageY - a.top;\n/* Consider any page scrolling: */\nx = x - window.pageXOffset;\ny = y - window.pageYOffset;\nreturn {x : x, y : y};\n}\n}",
        "<script>\n/* Execute the magnify function: */\nmagnify(\"myimage\", 3);\n/* Specify the id of the image, and the strength of the magnifier glass: */\n</script>"
      ]
    },
    {
      "title": "How TO - Image Comparison Slider",
      "summary": "Learn how to create a slider that compares two images.\nImage Comparison Slider\nMove the blue slider to compare images:\nTry it Yourself »\nCreate an Image Comparison Slider\nExample\nThe container must have a \"relative\" positioning.\nExample\nREMOVE ADS\nExample\nExample",
      "examples": [
        "<div class=\"img-comp-container\">\n<div class=\"img-comp-img\">\n<img src=\"img_snow.jpg\" width=\"300\" height=\"200\">\n</div>\n<div class=\"img-comp-img img-comp-overlay\">\n<img src=\"img_forest.jpg\" width=\"300\" height=\"200\">\n</div>\n</div>",
        "* {box-sizing: border-box;}\n\n.img-comp-container {\nposition: relative;\nheight: 200px; /*should be the same height as the images*/\n}\n\n.img-comp-img {\nposition: absolute;\nwidth: auto;\nheight: auto;\noverflow: hidden;\n}\n\n.img-comp-img img {\ndisplay: block;\nvertical-align: middle;\n}\n\n.img-comp-slider {\nposition: absolute;\nz-index: 9;\ncursor: ew-resize;\n/*set the appearance of the slider:*/\nwidth: 40px;\nheight: 40px;\nbackground-color: #2196F3;\nopacity: 0.7;\nborder-radius: 50%;\n}",
        "function initComparisons() {\nvar x, i;\n/* Find all elements with an \"overlay\" class: */\nx = document.getElementsByClassName(\"img-comp-overlay\");\nfor (i = 0; i < x.length; i++) {\n/* Once for each \"overlay\" element:\npass the \"overlay\" element as a parameter when executing the compareImages function: */\ncompareImages(x[i]);\n}\nfunction compareImages(img) {\nvar slider, img, clicked = 0, w, h;\n/* Get the width and height of the img element */\nw = img.offsetWidth;\nh = img.offsetHeight;\n/* Set the width of the img element to 50%: */\nimg.style.width = (w / 2) + \"px\";\n/* Create slider: */\nslider = document.createElement(\"DIV\");\nslider.setAttribute(\"class\", \"img-comp-slider\");\n/* Insert slider */\nimg.parentElement.insertBefore(slider, img);\n/* Position the slider in the middle: */\nslider.style.top = (h / 2) - (slider.offsetHeight / 2) + \"px\";\nslider.style.left = (w / 2) - (slider.offsetWidth / 2) + \"px\";\n/* Execute a function when the mouse button is pressed: */\nslider.addEventListener(\"mousedown\", slideReady);\n/* And another function when the mouse button is released: */\nwindow.addEventListener(\"mouseup\", slideFinish);\n/* Or touched (for touch screens: */\nslider.addEventListener(\"touchstart\", slideReady);\n/* And released (for touch screens: */\nwindow.addEventListener(\"touchend\", slideFinish);\nfunction slideReady(e) {\n/* Prevent any other actions that may occur when moving over the image: */\ne.preventDefault();\n/* The slider is now clicked and ready to move: */\nclicked = 1;\n/* Execute a function when the slider is moved: */\nwindow.addEventListener(\"mousemove\", slideMove);\nwindow.addEventListener(\"touchmove\", slideMove);\n}\nfunction slideFinish() {\n/* The slider is no longer clicked: */\nclicked = 0;\n}\nfunction slideMove(e) {\nvar pos;\n/* If the slider is no longer clicked, exit this function: */\nif (clicked == 0) return false;\n/* Get the cursor's x position: */\npos = getCursorPos(e)\n/* Prevent the slider from being positioned outside the image: */\nif (pos < 0) pos = 0;\nif (pos > w) pos = w;\n/* Execute a function that will resize the overlay image according to the cursor: */\nslide(pos);\n}\nfunction getCursorPos(e) {\nvar a, x = 0;\ne = (e.changedTouches) ? e.changedTouches[0] : e;\n/* Get the x positions of the image: */\na = img.getBoundingClientRect();\n/* Calculate the cursor's x coordinate, relative to the image: */\nx = e.pageX - a.left;\n/* Consider any page scrolling: */\nx = x - window.pageXOffset;\nreturn x;\n}\nfunction slide(x) {\n/* Resize the image: */\nimg.style.width = x + \"px\";\n/* Position the slider: */\nslider.style.left = img.offsetWidth - (slider.offsetWidth / 2) + \"px\";\n}\n}\n}",
        "<script>\ninitComparisons();\n</script>"
      ]
    },
    {
      "title": "How TO - Add a Favicon in HTML",
      "summary": "Learn how to add a favicon in HTML.\nHow To Add a Favicon in HTML\nA favicon is a small image displayed next to the page title in the browser tab.\nYou can use any image you like as your favicon. You can also create your own favicon on sites like https://favicon.cc.\nTip: A favicon is a small image, so it should be a simple image with high contrast.\nA favicon image is displayed to the left of the page title in the browser tab, like this:\nTo add a favicon to your website, either save your favicon image to the root directory of your webserver, or create a folder in the root directory called images, and save your favicon image in this folder. A common name for a favicon image is \"favicon.ico\".\nNext, add a <link> element to your \"index.html\" file, after the <title> element, like this:\nExample\nNow, save the \"index.html\" file and reload it in your browser. Your browser tab should now display your favicon image to the left of the page title.",
      "examples": [
        "<!DOCTYPE html>\n<html>\n<head>\n<title>My Page Title</title>\n<link rel=\"icon\" type=\"image/x-icon\" href=\"/images/favicon.ico\">\n</head>\n<body>\n\n<h1>This is a Heading</h1>\n<p>This is a paragraph.</p>\n\n</body>\n</html>",
        "<link>",
        "<title>"
      ]
    },
    {
      "title": "How TO - Alert Buttons",
      "summary": "Learn how to style \"alert\" buttons with CSS.\nHow To Style Alert Buttons\nExample\nExample\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<button class=\"btn success\">Success</button>\n<button class=\"btn info\">Info</button>\n<button class=\"btn warning\">Warning</button>\n<button class=\"btn danger\">Danger</button>\n<button class=\"btn default\">Default</button>",
        ".btn {\nborder: none; /* Remove borders */\ncolor: white; /* Add a text color */\npadding: 14px 28px; /* Add some padding */\ncursor: pointer; /* Add a pointer cursor on mouse-over */\n}\n\n.success {background-color: #04AA6D;} /* Green */\n.success:hover {background-color: #46a049;}\n\n.info {background-color: #2196F3;} /* Blue */\n.info:hover {background: #0b7dda;}\n\n.warning {background-color: #ff9800;} /* Orange */\n.warning:hover {background: #e68a00;}\n\n.danger {background-color: #f44336;} /* Red */\n.danger:hover {background: #da190b;}\n\n.default {background-color: #e7e7e7; color: black;} /* Gray */\n.default:hover {background: #ddd;}"
      ]
    },
    {
      "title": "How TO - Outline Buttons",
      "summary": "Learn how to style outline buttons with CSS.\nHow To Style Outline Buttons\nExample\nExample\nAdd the border-radius property to create rounded outline buttons:\nExample\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<button class=\"btn success\">Success</button>\n<button class=\"btn info\">Info</button>\n<button class=\"btn warning\">Warning</button>\n<button class=\"btn danger\">Danger</button>\n<button class=\"btn default\">Default</button>",
        ".btn {\nborder: 2px solid black;\nbackground-color: white;\ncolor: black;\npadding: 14px 28px;\nfont-size: 16px;\ncursor: pointer;\n}\n\n/* Green */\n.success {\nborder-color: #04AA6D;\ncolor: green;\n}\n\n.success:hover {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Blue */\n.info {\nborder-color: #2196F3;\ncolor: dodgerblue\n}\n\n.info:hover {\nbackground: #2196F3;\ncolor: white;\n}\n\n/* Orange */\n.warning {\nborder-color: #ff9800;\ncolor: orange;\n}\n\n.warning:hover {\nbackground: #ff9800;\ncolor: white;\n}\n\n/* Red */\n.danger {\nborder-color: #f44336;\ncolor: red\n}\n\n.danger:hover {\nbackground: #f44336;\ncolor: white;\n}\n\n/* Gray */\n.default {\nborder-color: #e7e7e7;\ncolor: black;\n}\n\n.default:hover {\nbackground: #e7e7e7;\n}",
        ".btn {\nborder-radius: 5px;\n}",
        "border-radius"
      ]
    },
    {
      "title": "How TO - Split Buttons",
      "summary": "Learn how to create a split button dropdown with CSS.\nSplit Button Dropdowns\nHover over the arrow icon to open the dropdown menu:\nTry it Yourself »\nHow To Create a Split Button\nCreate a dropdown menu that appears when the user moves the mouse over an icon.\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropdown menu and add the dropdown links inside it.\nWrap a <div> element around the button and the <div> to position the dropdown menu correctly with CSS.\nREMOVE ADS\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Clickable Dropdowns to learn more about clickable dropdowns",
      "examples": [
        "<!-- Font Awesome Icon Library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<button class=\"btn\">Button</button>\n<div class=\"dropdown\">\n<button class=\"btn\" style=\"border-left:1px solid navy\">\n<i class=\"fa fa-caret-down\"></i>\n</button>\n<div class=\"dropdown-content\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>",
        "/* Dropdown Button */\n.btn {\nbackground-color: #2196F3;\ncolor: white;\npadding: 16px;\nfont-size: 16px;\nborder: none;\noutline: none;\n}\n\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\nposition: absolute;\ndisplay: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f1f1f1;\nmin-width: 160px;\nz-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\n}\n\n/* Change color of dropdown links on hover */\n.dropdown-content a:hover {background-color: #ddd}\n\n/* Show the dropdown menu on hover */\n.dropdown:hover .dropdown-content {\ndisplay: block;\n}\n\n/* Change the background color of the dropdown button when the dropdown content is shown */\n.btn:hover, .dropdown:hover .btn  {\nbackground-color: #0b7dda;\n}"
      ]
    },
    {
      "title": "How TO - Animate Buttons",
      "summary": "Learn how to animate buttons using CSS.\nAnimated Buttons\nExample\nAdd a \"pressed\" effect on click:\nExample\nAdd an arrow on hover:\nExample\nAdd a \"ripple\" effect on click:\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": []
    },
    {
      "title": "How TO - Fading Buttons",
      "summary": "Learn how to create fading buttons with CSS.\nFading Buttons\nExample\nFade in on hover:\nExample\nFade out on hover:\nExample\nFade background on hover:\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": []
    },
    {
      "title": "How TO - Button on Image",
      "summary": "Learn how to add a button to an image with CSS.\nButton on Image\nHow To Add Button over Image\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"container\">\n<img src=\"img_snow.jpg\" alt=\"Snow\">\n<button class=\"btn\">Button</button>\n</div>",
        "/* Container needed to position the button. Adjust the width as needed */\n.container {\nposition: relative;\nwidth: 50%;\n}\n\n/* Make the image responsive */\n.container img {\nwidth: 100%;\nheight: auto;\n}\n\n/* Style the button and place it in the middle of the container/image */\n.container .btn {\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n-ms-transform: translate(-50%, -50%);\nbackground-color: #555;\ncolor: white;\nfont-size: 16px;\npadding: 12px 24px;\nborder: none;\ncursor: pointer;\nborder-radius: 5px;\n}\n\n.container .btn:hover {\nbackground-color: black;\n}"
      ]
    },
    {
      "title": "How TO - Social Media Buttons",
      "summary": "Learn how to style social media buttons with CSS.\nHow To Style Social Media Buttons\nExample\nSquare Example\nREMOVE ADS\nRound Buttons\nTip: Add border-radius:50% to create round buttons, and reduce the width:\nRounded Example\nTip: Go to our Icons Tutorial to learn more about icons.\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- Add font awesome icons -->\n<a href=\"#\" class=\"fa fa-facebook\"></a>\n<a href=\"#\" class=\"fa fa-twitter\"></a>\n...",
        "/* Style all font awesome icons */\n.fa {\npadding: 20px;\nfont-size: 30px;\nwidth: 50px;\ntext-align: center;\ntext-decoration: none;\n}\n\n/* Add a hover effect if you want */\n.fa:hover {\nopacity: 0.7;\n}\n\n/* Set a specific color for each brand */\n\n/* Facebook */\n.fa-facebook {\nbackground: #3B5998;\ncolor: white;\n}\n\n/* Twitter */\n.fa-twitter {\nbackground: #55ACEE;\ncolor: white;\n}",
        ".fa {\npadding: 20px;\nfont-size: 30px;\nwidth: 30px;\ntext-align: center;\ntext-decoration: none;\nborder-radius: 50%;\n}",
        "border-radius:50%",
        "width"
      ]
    },
    {
      "title": "How TO - Read More Read Less Button",
      "summary": "Learn how to create a \"read more - read less\" button with JavaScript.\nExample Text\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas vitae scel...erisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa. Fusce luctus vestibulum augue ut aliquet. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac. In at libero sed nunc venenatis imperdiet sed ornare turpis. Donec vitae dui eget tellus gravida venenatis. Integer fringilla congue eros non fermentum. Sed dapibus pulvinar nibh tempor porta.\nRead More Read Less Button\nExample\nExample\nExample",
      "examples": [
        "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus imperdiet, nulla et dictum interdum, nisi lorem egestas vitae scel<span id=\"dots\">...</span><span id=\"more\">erisque enim ligula venenatis dolor. Maecenas nisl est, ultrices nec congue eget, auctor vitae massa. Fusce luctus vestibulum augue ut aliquet. Nunc sagittis dictum nisi, sed ullamcorper ipsum dignissim ac. In at libero sed nunc venenatis imperdiet sed ornare turpis. Donec vitae dui eget tellus gravida venenatis. Integer fringilla congue eros non fermentum. Sed dapibus pulvinar nibh tempor porta.</span></p>\n\n<button onclick=\"myFunction()\" id=\"myBtn\">Read more</button>",
        "#more {display: none;}",
        "function myFunction() {\nvar dots = document.getElementById(\"dots\");\nvar moreText = document.getElementById(\"more\");\nvar btnText = document.getElementById(\"myBtn\");\n\nif (dots.style.display === \"none\") {\ndots.style.display = \"inline\";\nbtnText.innerHTML = \"Read more\";\nmoreText.style.display = \"none\";\n} else {\ndots.style.display = \"none\";\nbtnText.innerHTML = \"Read less\";\nmoreText.style.display = \"inline\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Loading Buttons",
      "summary": "Learn how to create loading buttons with CSS.\nHow To Style Loading Buttons\nAdd an icon library, such as Font Awesome, and append icons to HTML buttons:\nExample\nExample\nTip: Go to our Icons Tutorial to learn more about icons.\nTip: Go to our How To - CSS Loader to learn how to create a loader with CSS (without an icon library).\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- Add font awesome icons to buttons (note that the fa-spin class rotates the icon) -->\n<button class=\"buttonload\">\n<i class=\"fa fa-spinner fa-spin\"></i>Loading\n</button>\n\n<button class=\"buttonload\">\n<i class=\"fa fa-circle-o-notch fa-spin\"></i>Loading\n</button>\n\n<button class=\"buttonload\">\n<i class=\"fa fa-refresh fa-spin\"></i>Loading\n</button>",
        "/* Style buttons */\n.buttonload {\nbackground-color: #04AA6D; /* Green background */\nborder: none; /* Remove borders */\ncolor: white; /* White text */\npadding: 12px 16px; /* Some padding */\nfont-size: 16px /* Set a font size */\n}"
      ]
    },
    {
      "title": "How TO - Download Button",
      "summary": "Learn how to style download buttons with CSS.\nAuto width:\nDownload\nFull width:\nDownload\nHow To Create Download Buttons\nAdd an icon library, such as font awesome, and append icons to HTML buttons:\nExample\nExample\nTip: Go to our Icons Tutorial to learn more about icons.\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- Auto width -->\n<button class=\"btn\"><i class=\"fa fa-download\"></i> Download</button>\n\n<!-- Full width -->\n<button class=\"btn\" style=\"width:100%\"><i class=\"fa fa-download\"></i> Download</button>",
        "/* Style buttons */\n.btn {\nbackground-color: DodgerBlue;\nborder: none;\ncolor: white;\npadding: 12px 30px;\ncursor: pointer;\nfont-size: 20px;\n}\n\n/* Darker background on mouse-over */\n.btn:hover {\nbackground-color: RoyalBlue;\n}"
      ]
    },
    {
      "title": "How TO - Pill Buttons",
      "summary": "Learn how to create pill buttons with CSS.\nHow To Create a Pill Button\nExample\nAdd rounded corners to a button with the border-radius property:\nExample\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<button class=\"button\">Pill Button</button>",
        ".button {\nbackground-color: #ddd;\nborder: none;\ncolor: black;\npadding: 10px 20px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nmargin: 4px 2px;\ncursor: pointer;\nborder-radius: 16px;\n}",
        "border-radius"
      ]
    },
    {
      "title": "How TO - Notification Buttons",
      "summary": "Learn how to create notification buttons with CSS.\nHow To Create a Notification Button\nExample\nExample\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<a href=\"#\" class=\"notification\">\n<span>Inbox</span>\n<span class=\"badge\">3</span>\n</a>",
        ".notification {\nbackground-color: #555;\ncolor: white;\ntext-decoration: none;\npadding: 15px 26px;\nposition: relative;\ndisplay: inline-block;\nborder-radius: 2px;\n}\n\n.notification:hover {\nbackground: red;\n}\n\n.notification .badge {\nposition: absolute;\ntop: -10px;\nright: -10px;\npadding: 5px 10px;\nborder-radius: 50%;\nbackground: red;\ncolor: white;\n}"
      ]
    },
    {
      "title": "How TO - Icon Buttons",
      "summary": "Learn how to create icon buttons with CSS.\nIcon buttons:\nIcon buttons with text:\nHow To Create Icon Buttons\nAdd an icon library, such as font awesome, and append icons to HTML buttons:\nExample\nExample\nTip: Go to our Icons Tutorial to learn more about icons.\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- Add font awesome icons to buttons  -->\n<p>Icon buttons:</p>\n<button class=\"btn\"><i class=\"fa fa-home\"></i></button>\n<button class=\"btn\"><i class=\"fa fa-bars\"></i></button>\n<button class=\"btn\"><i class=\"fa fa-trash\"></i></button>\n<button class=\"btn\"><i class=\"fa fa-close\"></i></button>\n<button class=\"btn\"><i class=\"fa fa-folder\"></i></button>\n\n<p>Icon buttons with text:</p>\n<button class=\"btn\"><i class=\"fa fa-home\"></i> Home</button>\n<button class=\"btn\"><i class=\"fa fa-bars\"></i> Menu</button>\n<button class=\"btn\"><i class=\"fa fa-trash\"></i> Trash</button>\n<button class=\"btn\"><i class=\"fa fa-close\"></i> Close</button>\n<button class=\"btn\"><i class=\"fa fa-folder\"></i> Folder</button>",
        "/* Style buttons */\n.btn {\nbackground-color: DodgerBlue; /* Blue background */\nborder: none; /* Remove borders */\ncolor: white; /* White text */\npadding: 12px 16px; /* Some padding */\nfont-size: 16px; /* Set a font size */\ncursor: pointer; /* Mouse pointer on hover */\n}\n\n/* Darker background on mouse-over */\n.btn:hover {\nbackground-color: RoyalBlue;\n}"
      ]
    },
    {
      "title": "How TO - Next and Previous Buttons",
      "summary": "Learn how to create \"next\" and \"previous\" buttons with CSS.\nNext and Previous Buttons\nHow To Create Next and Previous Buttons\nExample\nExample",
      "examples": [
        "<a href=\"#\" class=\"previous\">&laquo; Previous</a>\n<a href=\"#\" class=\"next\">Next &raquo;</a>\n\n<a href=\"#\" class=\"previous round\">&#8249;</a>\n<a href=\"#\" class=\"next round\">&#8250;</a>",
        "a {\ntext-decoration: none;\ndisplay: inline-block;\npadding: 8px 16px;\n}\n\na:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n.previous {\nbackground-color: #f1f1f1;\ncolor: black;\n}\n\n.next {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n.round {\nborder-radius: 50%;\n}"
      ]
    },
    {
      "title": "How TO - More Button in Navbar",
      "summary": "Learn how to create a \"more\" button.\n\"More\" Button in Navbar\nTry it Yourself »\nCreate A Dropdown Navbar\nCreate a dropdown menu that appears when the user moves the mouse over an element inside a navigation bar.\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropdown menu and add the dropdown links inside it.\nWrap a <div> element around the button and the <div> to position the dropdown menu correctly with CSS.\nREMOVE ADS\nExample\nExample Explained\nWe have styled the navigation bar and the navbar links with a background-color, padding, etc.\nWe have styled the dropdown button with a background-color, padding, etc.\nThe .dropdown class is the container for .dropdown-content. Since this is a <div> element, and not an <a> element, we have to float it to make sure that it stays next to the links.\nThe .dropdown-content class holds the actual dropdown menu. It is hidden by default, and will be displayed on hover (see below). Note the min-width is set to 160px. Feel free to change this.\nInstead of using a border, we have used the box-shadow property to make the dropdown menu look like a \"card\". We also use z-index to place the dropdown in front of other elements.\nThe :hover selector is used to show the dropdown menu when the user moves the mouse over the dropdown button.\nRelated Pages\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Clickable Dropdowns to learn more about clickable dropdowns\nTip: Go to our CSS Navbar Tutorial to learn more about navbars.\nTip: Go to our Responsive Top Navigation to learn about how to create a responsive navbar.",
      "examples": [
        "<div class=\"navbar\">\n<a href=\"#home\">Home</a>\n<a href=\"#news\">News</a>\n<div class=\"dropdown\">\n<button class=\"dropbtn\">More\n<i class=\"fa fa-caret-down\"></i>\n</button>\n<div class=\"dropdown-content\">\n<a href=\"#\">Link 1</a>\n<a href=\"#\">Link 2</a>\n<a href=\"#\">Link 3</a>\n</div>\n</div>\n</div>",
        "/* Navbar container */\n.navbar {\noverflow: hidden;\nbackground-color: #333;\nfont-family: Arial;\n}\n\n/* Links inside the navbar */\n.navbar a {\nfloat: left;\nfont-size: 16px;\ncolor: white;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\n}\n\n/* The dropdown container */\n.dropdown {\nfloat: left;\noverflow: hidden;\n}\n\n/* Dropdown button */\n.dropdown .dropbtn {\nfont-size: 16px;\nborder: none;\noutline: none;\ncolor: white;\npadding: 14px 16px;\nbackground-color: inherit;\nfont-family: inherit; /* Important for vertical align on mobile phones */\nmargin: 0; /* Important for vertical align on mobile phones */\n}\n\n/* Add a red background color to navbar links on hover */\n.navbar a:hover, .dropdown:hover .dropbtn {\nbackground-color: red;\n}\n\n/* Dropdown content (hidden by default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f9f9f9;\nmin-width: 160px;\nbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\nz-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\nfloat: none;\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\ntext-align: left;\n}\n\n/* Add a grey background color to dropdown links on hover */\n.dropdown-content a:hover {\nbackground-color: #ddd;\n}\n\n/* Show the dropdown menu on hover */\n.dropdown:hover .dropdown-content {\ndisplay: block;\n}",
        ".dropdown",
        ".dropdown-content",
        "min-width",
        "box-shadow",
        ":hover"
      ]
    },
    {
      "title": "How TO - Full Width (Block) Buttons",
      "summary": "Learn how to style block buttons (full-width) with CSS.\nHow To Style Block Buttons\nExample\nTo create a full-width button, add a width of 100% and make it into a block element:\nExample\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<button type=\"button\" class=\"block\">Block Button</button>",
        ".block {\ndisplay: block;\nwidth: 100%;\nborder: none;\nbackground-color: #04AA6D;\npadding: 14px 28px;\nfont-size: 16px;\ncursor: pointer;\ntext-align: center;\n}"
      ]
    },
    {
      "title": "How TO - Text Buttons",
      "summary": "Learn how to style text buttons with CSS.\nHow To Style Text Buttons\nExample\nTo get the \"text button\" look, we remove the default background color and border:\nExample\nText Buttons with Individual Backgrounds\nText buttons with a specific background color on hover:\nExample\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<button class=\"btn success\">Success</button>\n<button class=\"btn info\">Info</button>\n<button class=\"btn warning\">Warning</button>\n<button class=\"btn danger\">Danger</button>\n<button class=\"btn default\">Default</button>",
        ".btn {\nborder: none;\nbackground-color: inherit;\npadding: 14px 28px;\nfont-size: 16px;\ncursor: pointer;\ndisplay: inline-block;\n}\n\n/* On mouse-over */\n.btn:hover {background: #eee;}\n\n.success {color: green;}\n.info {color: dodgerblue;}\n.warning {color: orange;}\n.danger {color: red;}\n.default {color: black;}",
        ".btn {\nborder: none;\nbackground-color: inherit;\npadding: 14px 28px;\nfont-size: 16px;\ncursor: pointer;\ndisplay: inline-block;\n}\n\n/* Green */\n.success {\ncolor: green;\n}\n\n.success:hover {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Blue */\n.info {\ncolor: dodgerblue;\n}\n\n.info:hover {\nbackground: #2196F3;\ncolor: white;\n}\n\n/* Orange */\n.warning {\ncolor: orange;\n}\n\n.warning:hover {\nbackground: #ff9800;\ncolor: white;\n}\n\n/* Red */\n.danger {\ncolor: red;\n}\n\n.danger:hover {\nbackground: #f44336;\ncolor: white;\n}\n\n/* Gray */\n.default {\ncolor: black;\n}\n\n.default:hover {\nbackground: #e7e7e7;\n}"
      ]
    },
    {
      "title": "How TO - Round Buttons",
      "summary": "Learn how to style round buttons with CSS.\nHow To Style Round Buttons\nExample\nAdd rounded corners to a button with the border-radius property:\nExample\nGo to our CSS Buttons Tutorial to learn more about how to style buttons.",
      "examples": [
        "<button class=\"button button1\">2px</button>\n<button class=\"button button2\">4px</button>\n<button class=\"button button3\">8px</button>\n<button class=\"button button4\">12px</button>\n<button class=\"button button5\">50%</button>",
        ".button {\nbackground-color: #04AA6D;\nborder: none;\ncolor: white;\npadding: 20px;\ntext-align: center;\ntext-decoration: none;\ndisplay: inline-block;\nfont-size: 16px;\nmargin: 4px 2px;\n}\n\n.button1 {border-radius: 2px;}\n.button2 {border-radius: 4px;}\n.button3 {border-radius: 8px;}\n.button4 {border-radius: 12px;}\n.button5 {border-radius: 50%;}",
        "border-radius"
      ]
    },
    {
      "title": "How TO - Scroll Back To Top Button",
      "summary": "Learn how to create a \"scroll back to top\" button with CSS.\nTry it Yourself »\nHow To Create a Scroll To Top Button\nCreate a button that will take the user to the top of the page when clicked on:\nExample\nStyle the button:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<button onclick=\"topFunction()\" id=\"myBtn\" title=\"Go to top\">Top</button>",
        "#myBtn {\ndisplay: none; /* Hidden by default */\nposition: fixed; /* Fixed/sticky position */\nbottom: 20px; /* Place the button at the bottom of the page */\nright: 30px; /* Place the button 30px from the right */\nz-index: 99; /* Make sure it does not overlap */\nborder: none; /* Remove borders */\noutline: none; /* Remove outline */\nbackground-color: red; /* Set a background color */\ncolor: white; /* Text color */\ncursor: pointer; /* Add a mouse pointer on hover */\npadding: 15px; /* Some padding */\nborder-radius: 10px; /* Rounded corners */\nfont-size: 18px; /* Increase font size */\n}\n\n#myBtn:hover {\nbackground-color: #555; /* Add a dark-grey background on hover */\n}",
        "// Get the button:\nlet mybutton = document.getElementById(\"myBtn\");\n\n// When the user scrolls down 20px from the top of the document, show the button\nwindow.onscroll = function() {scrollFunction()};\n\nfunction scrollFunction() {\nif (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\nmybutton.style.display = \"block\";\n} else {\nmybutton.style.display = \"none\";\n}\n}\n\n// When the user clicks on the button, scroll to the top of the document\nfunction topFunction() {\ndocument.body.scrollTop = 0; // For Safari\ndocument.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n}"
      ]
    },
    {
      "title": "How TO - Login Form",
      "summary": "Learn how to create a responsive login form with CSS.\nClick on the button to open the login form:\nTry it Yourself »\nHow To Create a Login Form\nAdd an image inside a container and add inputs (with a matching label) for each field. Wrap a <form> element around them to process the input. You can learn more about how to process input in our PHP tutorial.\nExample\nREMOVE ADS\nExample\nHow To Create a Modal Login Form\nExample\nExample\nTip: You can also use the following javascript to close the modal by clicking outside of the modal content (and not just by using the \"x\" or \"cancel\" button to close it):\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<form action=\"action_page.php\" method=\"post\">\n<div class=\"imgcontainer\">\n<img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\">\n</div>\n\n<div class=\"container\">\n<label for=\"uname\"><b>Username</b></label>\n<input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required>\n\n<label for=\"psw\"><b>Password</b></label>\n<input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n\n<button type=\"submit\">Login</button>\n<label>\n<input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n</label>\n</div>\n\n<div class=\"container\" style=\"background-color:#f1f1f1\">\n<button type=\"button\" class=\"cancelbtn\">Cancel</button>\n<span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n</div>\n</form>",
        "/* Bordered form */\nform {\nborder: 3px solid #f1f1f1;\n}\n\n/* Full-width inputs */\ninput[type=text], input[type=password] {\nwidth: 100%;\npadding: 12px 20px;\nmargin: 8px 0;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nbox-sizing: border-box;\n}\n\n/* Set a style for all buttons */\nbutton {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 14px 20px;\nmargin: 8px 0;\nborder: none;\ncursor: pointer;\nwidth: 100%;\n}\n\n/* Add a hover effect for buttons */\nbutton:hover {\nopacity: 0.8;\n}\n\n/* Extra style for the cancel button (red) */\n.cancelbtn {\nwidth: auto;\npadding: 10px 18px;\nbackground-color: #f44336;\n}\n\n/* Center the avatar image inside this container */\n.imgcontainer {\ntext-align: center;\nmargin: 24px 0 12px 0;\n}\n\n/* Avatar image */\nimg.avatar {\nwidth: 40%;\nborder-radius: 50%;\n}\n\n/* Add padding to containers */\n.container {\npadding: 16px;\n}\n\n/* The \"Forgot password\" text */\nspan.psw {\nfloat: right;\npadding-top: 16px;\n}\n\n/* Change styles for span and cancel button on extra small screens */\n@media screen and (max-width: 300px) {\nspan.psw {\ndisplay: block;\nfloat: none;\n}\n.cancelbtn {\nwidth: 100%;\n}\n}",
        "<!-- Button to open the modal login form -->\n<button onclick=\"document.getElementById('id01').style.display='block'\">Login</button>\n\n<!-- The Modal -->\n<div id=\"id01\" class=\"modal\">\n<span onclick=\"document.getElementById('id01').style.display='none'\"\nclass=\"close\" title=\"Close Modal\">&times;</span>\n\n<!-- Modal Content -->\n<form class=\"modal-content animate\" action=\"/action_page.php\">\n<div class=\"imgcontainer\">\n<img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\">\n</div>\n\n<div class=\"container\">\n<label for=\"uname\"><b>Username</b></label>\n<input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required>\n\n<label for=\"psw\"><b>Password</b></label>\n<input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n\n<button type=\"submit\">Login</button>\n<label>\n<input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n</label>\n</div>\n\n<div class=\"container\" style=\"background-color:#f1f1f1\">\n<button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n<span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n</div>\n</form>\n</div>",
        "/* The Modal (background) */\n.modal {\ndisplay: none; /* Hidden by default */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Sit on top */\nleft: 0;\ntop: 0;\nwidth: 100%; /* Full width */\nheight: 100%; /* Full height */\noverflow: auto; /* Enable scroll if needed */\nbackground-color: rgb(0,0,0); /* Fallback color */\nbackground-color: rgba(0,0,0,0.4); /* Black w/ opacity */\npadding-top: 60px;\n}\n\n/* Modal Content/Box */\n.modal-content {\nbackground-color: #fefefe;\nmargin: 5px auto; /* 15% from the top and centered */\nborder: 1px solid #888;\nwidth: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button */\n.close {\n/* Position it in the top right corner outside of the modal */\nposition: absolute;\nright: 25px;\ntop: 0;\ncolor: #000;\nfont-size: 35px;\nfont-weight: bold;\n}\n\n/* Close button on hover */\n.close:hover,\n.close:focus {\ncolor: red;\ncursor: pointer;\n}\n\n/* Add Zoom Animation */\n.animate {\n-webkit-animation: animatezoom 0.6s;\nanimation: animatezoom 0.6s\n}\n\n@-webkit-keyframes animatezoom {\nfrom {-webkit-transform: scale(0)}\nto {-webkit-transform: scale(1)}\n}\n\n@keyframes animatezoom {\nfrom {transform: scale(0)}\nto {transform: scale(1)}\n}",
        "<script>\n// Get the modal\nvar modal = document.getElementById('id01');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\nif (event.target == modal) {\nmodal.style.display = \"none\";\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Sign Up Form Sign Up",
      "summary": "Learn how to create a responsive sign up form with CSS.\nClick on the button to open the sign up form:\nPlease fill in this form to create an account.\nBy creating an account you agree to our Terms & Privacy.\nTry it Yourself »\nHow To Create a Sign Up Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial. Then add inputs (with a matching label) for each field:\nExample\nExample\nHow To Create a Modal Sign Up Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial. Then add inputs (with a matching label) for each field:\nExample\nREMOVE ADS\nExample\nTip: You can also use the following javascript to close the modal by clicking outside of the modal content (and not just by using the \"x\" or \"cancel\" button to close it):\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<form action=\"action_page.php\" style=\"border:1px solid #ccc\">\n<div class=\"container\">\n<h1>Sign Up</h1>\n<p>Please fill in this form to create an account.</p>\n<hr>\n\n<label for=\"email\"><b>Email</b></label>\n<input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required>\n\n<label for=\"psw\"><b>Password</b></label>\n<input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n\n<label for=\"psw-repeat\"><b>Repeat Password</b></label>\n<input type=\"password\" placeholder=\"Repeat Password\" name=\"psw-repeat\" required>\n\n<label>\n<input type=\"checkbox\" checked=\"checked\" name=\"remember\" style=\"margin-bottom:15px\"> Remember me\n</label>\n\n<p>By creating an account you agree to our <a href=\"#\" style=\"color:dodgerblue\">Terms & Privacy</a>.</p>\n\n<div class=\"clearfix\">\n<button type=\"button\" class=\"cancelbtn\">Cancel</button>\n<button type=\"submit\" class=\"signupbtn\">Sign Up</button>\n</div>\n</div>\n</form>",
        "* {box-sizing: border-box}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\nwidth: 100%;\npadding: 15px;\nmargin: 5px 0 22px 0;\ndisplay: inline-block;\nborder: none;\nbackground: #f1f1f1;\n}\n\ninput[type=text]:focus, input[type=password]:focus {\nbackground-color: #ddd;\noutline: none;\n}\n\nhr {\nborder: 1px solid #f1f1f1;\nmargin-bottom: 25px;\n}\n\n/* Set a style for all buttons */\nbutton {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 14px 20px;\nmargin: 8px 0;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nopacity: 0.9;\n}\n\nbutton:hover {\nopacity:1;\n}\n\n/* Extra styles for the cancel button */\n.cancelbtn {\npadding: 14px 20px;\nbackground-color: #f44336;\n}\n\n/* Float cancel and signup buttons and add an equal width */\n.cancelbtn, .signupbtn {\nfloat: left;\nwidth: 50%;\n}\n\n/* Add padding to container elements */\n.container {\npadding: 16px;\n}\n\n/* Clear floats */\n.clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n/* Change styles for cancel button and signup button on extra small screens */\n@media screen and (max-width: 300px) {\n.cancelbtn, .signupbtn {\nwidth: 100%;\n}\n}",
        "<!-- Button to open the modal -->\n<button onclick=\"document.getElementById('id01').style.display='block'\">Sign Up</button>\n\n<!-- The Modal (contains the Sign Up form) -->\n<div id=\"id01\" class=\"modal\">\n<span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">times;</span>\n<form class=\"modal-content\" action=\"/action_page.php\">\n<div class=\"container\">\n<h1>Sign Up</h1>\n<p>Please fill in this form to create an account.</p>\n<hr>\n<label for=\"email\"><b>Email</b></label>\n<input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required>\n\n<label for=\"psw\"><b>Password</b></label>\n<input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n\n<label for=\"psw-repeat\"><b>Repeat Password</b></label>\n<input type=\"password\" placeholder=\"Repeat Password\" name=\"psw-repeat\" required>\n\n<label>\n<input type=\"checkbox\" checked=\"checked\" name=\"remember\" style=\"margin-bottom:15px\"> Remember me\n</label>\n\n<p>By creating an account you agree to our <a href=\"#\" style=\"color:dodgerblue\">Terms & Privacy</a>.</p>\n\n<div class=\"clearfix\">\n<button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n<button type=\"submit\" class=\"signup\">Sign Up</button>\n</div>\n</div>\n</form>\n</div>",
        "* {box-sizing: border-box}\n/* Full-width input fields */\ninput[type=text], input[type=password] {\nwidth: 100%;\npadding: 15px;\nmargin: 5px 0 22px 0;\ndisplay: inline-block;\nborder: none;\nbackground: #f1f1f1;\n}\n\n/* Add a background color when the inputs get focus */\ninput[type=text]:focus, input[type=password]:focus {\nbackground-color: #ddd;\noutline: none;\n}\n\n/* Set a style for all buttons */\nbutton {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 14px 20px;\nmargin: 8px 0;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nopacity: 0.9;\n}\n\nbutton:hover {\nopacity:1;\n}\n\n/* Extra styles for the cancel button */\n.cancelbtn {\npadding: 14px 20px;\nbackground-color: #f44336;\n}\n\n/* Float cancel and signup buttons and add an equal width */\n.cancelbtn, .signupbtn {\nfloat: left;\nwidth: 50%;\n}\n\n/* Add padding to container elements */\n.container {\npadding: 16px;\n}\n\n/* The Modal (background) */\n.modal {\ndisplay: none; /* Hidden by default */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Sit on top */\nleft: 0;\ntop: 0;\nwidth: 100%; /* Full width */\nheight: 100%; /* Full height */\noverflow: auto; /* Enable scroll if needed */\nbackground-color: #474e5d;\npadding-top: 50px;\n}\n\n/* Modal Content/Box */\n.modal-content {\nbackground-color: #fefefe;\nmargin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\nborder: 1px solid #888;\nwidth: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* Style the horizontal ruler */\nhr {\nborder: 1px solid #f1f1f1;\nmargin-bottom: 25px;\n}\n\n/* The Close Button (x) */\n.close {\nposition: absolute;\nright: 35px;\ntop: 15px;\nfont-size: 40px;\nfont-weight: bold;\ncolor: #f1f1f1;\n}\n\n.close:hover,\n.close:focus {\ncolor: #f44336;\ncursor: pointer;\n}\n\n/* Clear floats */\n.clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n/* Change styles for cancel button and signup button on extra small screens */\n@media screen and (max-width: 300px) {\n.cancelbtn, .signupbtn {\nwidth: 100%;\n}\n}",
        "<script>\n// Get the modal\nvar modal = document.getElementById('id01');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\nif (event.target == modal) {\nmodal.style.display = \"none\";\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Checkout Form",
      "summary": "Learn how to create a responsive checkout form with CSS.\nResponsive Checkout Form\nBilling Address\nPayment\nItem 1 $15\nItem 2 $5\nItem 3 $8\nItem 4 $2\nTotal $30\nTry it Yourself »\nHow To Create a Checkout Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial.\nExample\nREMOVE ADS\nUse CSS Flexbox to create a responsive layout:\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.\nTip: Go to our CSS Flexbox Tutorial to learn more about the flexible box layout module.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div class=\"row\">\n<div class=\"col-75\">\n<div class=\"container\">\n<form action=\"/action_page.php\">\n\n<div class=\"row\">\n<div class=\"col-50\">\n<h3>Billing Address</h3>\n<label for=\"fname\"><i class=\"fa fa-user\"></i> Full Name</label>\n<input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"John M. Doe\">\n<label for=\"email\"><i class=\"fa fa-envelope\"></i> Email</label>\n<input type=\"text\" id=\"email\" name=\"email\" placeholder=\"john@example.com\">\n<label for=\"adr\"><i class=\"fa fa-address-card-o\"></i> Address</label>\n<input type=\"text\" id=\"adr\" name=\"address\" placeholder=\"542 W. 15th Street\">\n<label for=\"city\"><i class=\"fa fa-institution\"></i> City</label>\n<input type=\"text\" id=\"city\" name=\"city\" placeholder=\"New York\">\n\n<div class=\"row\">\n<div class=\"col-50\">\n<label for=\"state\">State</label>\n<input type=\"text\" id=\"state\" name=\"state\" placeholder=\"NY\">\n</div>\n<div class=\"col-50\">\n<label for=\"zip\">Zip</label>\n<input type=\"text\" id=\"zip\" name=\"zip\" placeholder=\"10001\">\n</div>\n</div>\n</div>\n\n<div class=\"col-50\">\n<h3>Payment</h3>\n<label for=\"fname\">Accepted Cards</label>\n<div class=\"icon-container\">\n<i class=\"fa fa-cc-visa\" style=\"color:navy;\"></i>\n<i class=\"fa fa-cc-amex\" style=\"color:blue;\"></i>\n<i class=\"fa fa-cc-mastercard\" style=\"color:red;\"></i>\n<i class=\"fa fa-cc-discover\" style=\"color:orange;\"></i>\n</div>\n<label for=\"cname\">Name on Card</label>\n<input type=\"text\" id=\"cname\" name=\"cardname\" placeholder=\"John More Doe\">\n<label for=\"ccnum\">Credit card number</label>\n<input type=\"text\" id=\"ccnum\" name=\"cardnumber\" placeholder=\"1111-2222-3333-4444\">\n<label for=\"expmonth\">Exp Month</label>\n<input type=\"text\" id=\"expmonth\" name=\"expmonth\" placeholder=\"September\">\n\n<div class=\"row\">\n<div class=\"col-50\">\n<label for=\"expyear\">Exp Year</label>\n<input type=\"text\" id=\"expyear\" name=\"expyear\" placeholder=\"2018\">\n</div>\n<div class=\"col-50\">\n<label for=\"cvv\">CVV</label>\n<input type=\"text\" id=\"cvv\" name=\"cvv\" placeholder=\"352\">\n</div>\n</div>\n</div>\n\n</div>\n<label>\n<input type=\"checkbox\" checked=\"checked\" name=\"sameadr\"> Shipping address same as billing\n</label>\n<input type=\"submit\" value=\"Continue to checkout\" class=\"btn\">\n</form>\n</div>\n</div>\n\n<div class=\"col-25\">\n<div class=\"container\">\n<h4>Cart\n<span class=\"price\" style=\"color:black\">\n<i class=\"fa fa-shopping-cart\"></i>\n<b>4</b>\n</span>\n</h4>\n<p><a href=\"#\">Product 1</a> <span class=\"price\">$15</span></p>\n<p><a href=\"#\">Product 2</a> <span class=\"price\">$5</span></p>\n<p><a href=\"#\">Product 3</a> <span class=\"price\">$8</span></p>\n<p><a href=\"#\">Product 4</a> <span class=\"price\">$2</span></p>\n<hr>\n<p>Total <span class=\"price\" style=\"color:black\"><b>$30</b></span></p>\n</div>\n</div>\n</div>",
        ".row {\ndisplay: -ms-flexbox; /* IE10 */\ndisplay: flex;\n-ms-flex-wrap: wrap; /* IE10 */\nflex-wrap: wrap;\nmargin: 0 -16px;\n}\n\n.col-25 {\n-ms-flex: 25%; /* IE10 */\nflex: 25%;\n}\n\n.col-50 {\n-ms-flex: 50%; /* IE10 */\nflex: 50%;\n}\n\n.col-75 {\n-ms-flex: 75%; /* IE10 */\nflex: 75%;\n}\n\n.col-25,\n.col-50,\n.col-75 {\npadding: 0 16px;\n}\n\n.container {\nbackground-color: #f2f2f2;\npadding: 5px 20px 15px 20px;\nborder: 1px solid lightgrey;\nborder-radius: 3px;\n}\n\ninput[type=text] {\nwidth: 100%;\nmargin-bottom: 20px;\npadding: 12px;\nborder: 1px solid #ccc;\nborder-radius: 3px;\n}\n\nlabel {\nmargin-bottom: 10px;\ndisplay: block;\n}\n\n.icon-container {\nmargin-bottom: 20px;\npadding: 7px 0;\nfont-size: 24px;\n}\n\n.btn {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 12px;\nmargin: 10px 0;\nborder: none;\nwidth: 100%;\nborder-radius: 3px;\ncursor: pointer;\nfont-size: 17px;\n}\n\n.btn:hover {\nbackground-color: #45a049;\n}\n\nspan.price {\nfloat: right;\ncolor: grey;\n}\n\n/* Responsive layout - when the screen is less than 800px wide, make the two columns stack on top of each other instead of next to each other (and change the direction - make the \"cart\" column go on top) */\n@media (max-width: 800px) {\n.row {\nflex-direction: column-reverse;\n}\n.col-25 {\nmargin-bottom: 20px;\n}\n}"
      ]
    },
    {
      "title": "How TO - Contact Form",
      "summary": "Learn how to create a contact form with CSS.\nTry it Yourself »\nHow To Create a Contact Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial. Then add inputs (with a matching label) for each field:\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div class=\"container\">\n<form action=\"action_page.php\">\n\n<label for=\"fname\">First Name</label>\n<input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\">\n\n<label for=\"lname\">Last Name</label>\n<input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\">\n\n<label for=\"country\">Country</label>\n<select id=\"country\" name=\"country\">\n<option value=\"australia\">Australia</option>\n<option value=\"canada\">Canada</option>\n<option value=\"usa\">USA</option>\n</select>\n\n<label for=\"subject\">Subject</label>\n<textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style=\"height:200px\"></textarea>\n\n<input type=\"submit\" value=\"Submit\">\n\n</form>\n</div>",
        "/* Style inputs with type=\"text\", select elements and textareas */\ninput[type=text], select, textarea {\nwidth: 100%; /* Full width */\npadding: 12px; /* Some padding */\nborder: 1px solid #ccc; /* Gray border */\nborder-radius: 4px; /* Rounded borders */\nbox-sizing: border-box; /* Make sure that padding and width stays in place */\nmargin-top: 6px; /* Add a top margin */\nmargin-bottom: 16px; /* Bottom margin */\nresize: vertical /* Allow the user to vertically resize the textarea (not horizontally) */\n}\n\n/* Style the submit button with a specific background color etc */\ninput[type=submit] {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 12px 20px;\nborder: none;\nborder-radius: 4px;\ncursor: pointer;\n}\n\n/* When moving the mouse over the submit button, add a darker green color */\ninput[type=submit]:hover {\nbackground-color: #45a049;\n}\n\n/* Add a background color and some padding around the form */\n.container {\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 20px;\n}"
      ]
    },
    {
      "title": "How TO - Social Login Form",
      "summary": "Learn how to create a social media login form with CSS.\nResponsive Social Login Form\nTry it Yourself »\nHow To Create a Social Login Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial. Then add inputs or social media links for each field:\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<div class=\"container\">\n<form action=\"/action_page.php\">\n<div class=\"row\">\n<h2 style=\"text-align:center\">Login with Social Media or Manually</h2>\n<div class=\"vl\">\n<span class=\"vl-innertext\">or</span>\n</div>\n\n<div class=\"col\">\n<a href=\"#\" class=\"fb btn\">\n<i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\n</a>\n<a href=\"#\" class=\"twitter btn\">\n<i class=\"fa fa-twitter fa-fw\"></i> Login with Twitter\n</a>\n<a href=\"#\" class=\"google btn\">\n<i class=\"fa fa-google fa-fw\"></i> Login with Google+\n</a>\n</div>\n\n<div class=\"col\">\n<div class=\"hide-md-lg\">\n<p>Or sign in manually:</p>\n</div>\n\n<input type=\"text\" name=\"username\" placeholder=\"Username\" required>\n<input type=\"password\" name=\"password\" placeholder=\"Password\" required>\n<input type=\"submit\" value=\"Login\">\n</div>\n\n</div>\n</form>\n</div>\n\n<div class=\"bottom-container\">\n<div class=\"row\">\n<div class=\"col\">\n<a href=\"#\" style=\"color:white\" class=\"btn\">Sign up</a>\n</div>\n<div class=\"col\">\n<a href=\"#\" style=\"color:white\" class=\"btn\">Forgot password?</a>\n</div>\n</div>\n</div>",
        "* {box-sizing: border-box}\n\n/* style the container */\n.container {\nposition: relative;\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 20px 0 30px 0;\n}\n\n/* style inputs and link buttons */\ninput,\n.btn {\nwidth: 100%;\npadding: 12px;\nborder: none;\nborder-radius: 4px;\nmargin: 5px 0;\nopacity: 0.85;\ndisplay: inline-block;\nfont-size: 17px;\nline-height: 20px;\ntext-decoration: none; /* remove underline from anchors */\n}\n\ninput:hover,\n.btn:hover {\nopacity: 1;\n}\n\n/* add appropriate colors to fb, twitter and google buttons */\n.fb {\nbackground-color: #3B5998;\ncolor: white;\n}\n\n.twitter {\nbackground-color: #55ACEE;\ncolor: white;\n}\n\n.google {\nbackground-color: #dd4b39;\ncolor: white;\n}\n\n/* style the submit button */\ninput[type=submit] {\nbackground-color: #04AA6D;\ncolor: white;\ncursor: pointer;\n}\n\ninput[type=submit]:hover {\nbackground-color: #45a049;\n}\n\n/* Two-column layout */\n.col {\nfloat: left;\nwidth: 50%;\nmargin: auto;\npadding: 0 50px;\nmargin-top: 6px;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* vertical line */\n.vl {\nposition: absolute;\nleft: 50%;\ntransform: translate(-50%);\nborder: 2px solid #ddd;\nheight: 175px;\n}\n\n/* text inside the vertical line */\n.inner {\nposition: absolute;\ntop: 50%;\ntransform: translate(-50%, -50%);\nbackground-color: #f1f1f1;\nborder: 1px solid #ccc;\nborder-radius: 50%;\npadding: 8px 10px;\n}\n\n/* hide some text on medium and large screens */\n.hide-md-lg {\ndisplay: none;\n}\n\n/* bottom container */\n.bottom-container {\ntext-align: center;\nbackground-color: #666;\nborder-radius: 0px 0px 4px 4px;\n}\n\n/* Responsive layout - when the screen is less than 650px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 650px) {\n.col {\nwidth: 100%;\nmargin-top: 0;\n}\n/* hide the vertical line */\n.vl {\ndisplay: none;\n}\n/* show the hidden text on small screens */\n.hide-md-lg {\ndisplay: block;\ntext-align: center;\n}\n}"
      ]
    },
    {
      "title": "How TO - Register Form Register",
      "summary": "Learn how to create a register form with CSS.\nPlease fill in this form to create an account.\nBy creating an account you agree to our Terms & Privacy.\nAlready have an account? Sign in\nTry it Yourself »\nHow To Create a Register Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial. Then add inputs (with a matching label) for each field:\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<form action=\"action_page.php\">\n<div class=\"container\">\n<h1>Register</h1>\n<p>Please fill in this form to create an account.</p>\n<hr>\n\n<label for=\"email\"><b>Email</b></label>\n<input type=\"text\" placeholder=\"Enter Email\" name=\"email\" id=\"email\" required>\n\n<label for=\"psw\"><b>Password</b></label>\n<input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" id=\"psw\" required>\n\n<label for=\"psw-repeat\"><b>Repeat Password</b></label>\n<input type=\"password\" placeholder=\"Repeat Password\" name=\"psw-repeat\" id=\"psw-repeat\" required>\n<hr>\n\n<p>By creating an account you agree to our <a href=\"#\">Terms & Privacy</a>.</p>\n<button type=\"submit\" class=\"registerbtn\">Register</button>\n</div>\n\n<div class=\"container signin\">\n<p>Already have an account? <a href=\"#\">Sign in</a>.</p>\n</div>\n</form>",
        "* {box-sizing: border-box}\n\n/* Add padding to containers */\n.container {\npadding: 16px;\n}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\nwidth: 100%;\npadding: 15px;\nmargin: 5px 0 22px 0;\ndisplay: inline-block;\nborder: none;\nbackground: #f1f1f1;\n}\n\ninput[type=text]:focus, input[type=password]:focus {\nbackground-color: #ddd;\noutline: none;\n}\n\n/* Overwrite default styles of hr */\nhr {\nborder: 1px solid #f1f1f1;\nmargin-bottom: 25px;\n}\n\n/* Set a style for the submit/register button */\n.registerbtn {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 16px 20px;\nmargin: 8px 0;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nopacity: 0.9;\n}\n\n.registerbtn:hover {\nopacity:1;\n}\n\n/* Add a blue text color to links */\na {\ncolor: dodgerblue;\n}\n\n/* Set a grey background color and center the text of the \"sign in\" section */\n.signin {\nbackground-color: #f1f1f1;\ntext-align: center;\n}"
      ]
    },
    {
      "title": "How TO - Form with Icons",
      "summary": "Learn how to create a form with icons.\nRegister\nTry it Yourself »\nHow To Create an Icon Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial. Then add inputs for each field:\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.\nTip: Go to our CSS Flexbox Tutorial to learn more about the flexible box layout module.",
      "examples": [
        "<form action=\"/action_page.php\">\n<h2>Register Form</h2>\n<div class=\"input-container\">\n<i class=\"fa fa-user icon\"></i>\n<input class=\"input-field\" type=\"text\" placeholder=\"Username\" name=\"usrnm\">\n</div>\n\n<div class=\"input-container\">\n<i class=\"fa fa-envelope icon\"></i>\n<input class=\"input-field\" type=\"text\" placeholder=\"Email\" name=\"email\">\n</div>\n\n<div class=\"input-container\">\n<i class=\"fa fa-key icon\"></i>\n<input class=\"input-field\" type=\"password\" placeholder=\"Password\" name=\"psw\">\n</div>\n\n<button type=\"submit\" class=\"btn\">Register</button>\n</form>",
        "* {box-sizing: border-box;}\n\n/* Style the input container */\n.input-container {\ndisplay: flex;\nwidth: 100%;\nmargin-bottom: 15px;\n}\n\n/* Style the form icons */\n.icon {\npadding: 10px;\nbackground: dodgerblue;\ncolor: white;\nmin-width: 50px;\ntext-align: center;\n}\n\n/* Style the input fields */\n.input-field {\nwidth: 100%;\npadding: 10px;\noutline: none;\n}\n\n.input-field:focus {\nborder: 2px solid dodgerblue;\n}\n\n/* Set a style for the submit button */\n.btn {\nbackground-color: dodgerblue;\ncolor: white;\npadding: 15px 20px;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nopacity: 0.9;\n}\n\n.btn:hover {\nopacity: 1;\n}"
      ]
    },
    {
      "title": "How TO - Email Newsletter",
      "summary": "Learn how to create an email newsletter with CSS.\nSubscribe to our Newsletter\nLorem ipsum text about why you should subscribe to our newsletter blabla. Lorem ipsum text about why you should subscribe to our newsletter blabla. Lorem ipsum text about why you should subscribe to our newsletter blabla.\nTry it Yourself »\nHow To Create a Newsletter\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial. Then add inputs for each field, together with a \"submit\" button:\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<form action=\"action_page.php\">\n<div class=\"container\">\n<h2>Subscribe to our Newsletter</h2>\n<p>Lorem ipsum..</p>\n</div>\n\n<div class=\"container\" style=\"background-color:white\">\n<input type=\"text\" placeholder=\"Name\" name=\"name\" required>\n<input type=\"text\" placeholder=\"Email address\" name=\"mail\" required>\n<label>\n<input type=\"checkbox\" checked=\"checked\" name=\"subscribe\"> Daily Newsletter\n</label>\n</div>\n\n<div class=\"container\">\n<input type=\"submit\" value=\"Subscribe\">\n</div>\n</form>",
        "/* Style the form element with a border around it */\nform {\nborder: 4px solid #f1f1f1;\n}\n\n/* Add some padding and a grey background color to containers */\n.container {\npadding: 20px;\nbackground-color: #f1f1f1;\n}\n\n/* Style the input elements and the submit button */\ninput[type=text], input[type=submit] {\nwidth: 100%;\npadding: 12px;\nmargin: 8px 0;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nbox-sizing: border-box;\n}\n\n/* Add margins to the checkbox */\ninput[type=checkbox] {\nmargin-top: 16px;\n}\n\n/* Style the submit button */\ninput[type=submit] {\nbackground-color: #04AA6D;\ncolor: white;\nborder: none;\n}\n\ninput[type=submit]:hover {\nopacity: 0.8;\n}"
      ]
    },
    {
      "title": "How TO - Stacked Form",
      "summary": "Learn how to create a stacked form with CSS.\nStacked Form\nA vertically stacked form (where inputs and labels are placed on top of each other, instead of next to each other):\nTry it Yourself »\nHow To Create a Stacked Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial.\nAdd inputs (with a matching label) for each field:\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<form action=\"/action_page.php\">\n<label for=\"fname\">First Name</label>\n<input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\">\n\n<label for=\"lname\">Last Name</label>\n<input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\">\n\n<label for=\"country\">Country</label>\n<select id=\"country\" name=\"country\">\n<option value=\"australia\">Australia</option>\n<option value=\"canada\">Canada</option>\n<option value=\"usa\">USA</option>\n</select>\n\n<input type=\"submit\" value=\"Submit\">\n</form>",
        "/* Style inputs */\ninput[type=text], select {\nwidth: 100%;\npadding: 12px 20px;\nmargin: 8px 0;\ndisplay: inline-block;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\n}\n\n/* Style the submit button */\ninput[type=submit] {\nwidth: 100%;\nbackground-color: #04AA6D;\ncolor: white;\npadding: 14px 20px;\nmargin: 8px 0;\nborder: none;\nborder-radius: 4px;\ncursor: pointer;\n}\n\n/* Add a background color to the submit button on mouse-over */\ninput[type=submit]:hover {\nbackground-color: #45a049;\n}"
      ]
    },
    {
      "title": "How TO - Responsive Form",
      "summary": "Learn how to create a responsive form with CSS.\nResponsive Form\nResize the browser window to see the effect (the labels and inputs will stack on top of each other instead of next to each other on smaller screens):\nTry it Yourself »\nHow To Create a Responsive Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial.\nAdd inputs (with a matching label) for each field, and wrap a <div> element around each label and input to set a specified width with CSS:\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<div class=\"container\">\n<form action=\"action_page.php\">\n<div class=\"row\">\n<div class=\"col-25\">\n<label for=\"fname\">First Name</label>\n</div>\n<div class=\"col-75\">\n<input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\">\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-25\">\n<label for=\"lname\">Last Name</label>\n</div>\n<div class=\"col-75\">\n<input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\">\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-25\">\n<label for=\"country\">Country</label>\n</div>\n<div class=\"col-75\">\n<select id=\"country\" name=\"country\">\n<option value=\"australia\">Australia</option>\n<option value=\"canada\">Canada</option>\n<option value=\"usa\">USA</option>\n</select>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-25\">\n<label for=\"subject\">Subject</label>\n</div>\n<div class=\"col-75\">\n<textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style=\"height:200px\"></textarea>\n</div>\n</div>\n<div class=\"row\">\n<input type=\"submit\" value=\"Submit\">\n</div>\n</form>\n</div>",
        "/* Style inputs, select elements and textareas */\ninput[type=text], select, textarea{\nwidth: 100%;\npadding: 12px;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\nresize: vertical;\n}\n\n/* Style the label to display next to the inputs */\nlabel {\npadding: 12px 12px 12px 0;\ndisplay: inline-block;\n}\n\n/* Style the submit button */\ninput[type=submit] {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 12px 20px;\nborder: none;\nborder-radius: 4px;\ncursor: pointer;\nfloat: right;\n}\n\n/* Style the container */\n.container {\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 20px;\n}\n\n/* Floating column for labels: 25% width */\n.col-25 {\nfloat: left;\nwidth: 25%;\nmargin-top: 6px;\n}\n\n/* Floating column for inputs: 75% width */\n.col-75 {\nfloat: left;\nwidth: 75%;\nmargin-top: 6px;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.col-25, .col-75, input[type=submit] {\nwidth: 100%;\nmargin-top: 0;\n}\n}"
      ]
    },
    {
      "title": "How TO - Popup Form",
      "summary": "Learn how to create a popup form with CSS and JavaScript.\nHow To Create a Popup Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial.\nExample\nREMOVE ADS\nExample\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<!-- A button to open the popup form -->\n<button class=\"open-button\" onclick=\"openForm()\">Open Form</button>\n\n<!-- The form -->\n<div class=\"form-popup\" id=\"myForm\">\n<form action=\"/action_page.php\" class=\"form-container\">\n<h1>Login</h1>\n\n<label for=\"email\"><b>Email</b></label>\n<input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required>\n\n<label for=\"psw\"><b>Password</b></label>\n<input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n\n<button type=\"submit\" class=\"btn\">Login</button>\n<button type=\"button\" class=\"btn cancel\" onclick=\"closeForm()\">Close</button>\n</form>\n</div>",
        "{box-sizing: border-box;}\n\n/* Button used to open the contact form - fixed at the bottom of the page */\n.open-button {\nbackground-color: #555;\ncolor: white;\npadding: 16px 20px;\nborder: none;\ncursor: pointer;\nopacity: 0.8;\nposition: fixed;\nbottom: 23px;\nright: 28px;\nwidth: 280px;\n}\n\n/* The popup form - hidden by default */\n.form-popup {\ndisplay: none;\nposition: fixed;\nbottom: 0;\nright: 15px;\nborder: 3px solid #f1f1f1;\nz-index: 9;\n}\n\n/* Add styles to the form container */\n.form-container {\nmax-width: 300px;\npadding: 10px;\nbackground-color: white;\n}\n\n/* Full-width input fields */\n.form-container input[type=text], .form-container input[type=password] {\nwidth: 100%;\npadding: 15px;\nmargin: 5px 0 22px 0;\nborder: none;\nbackground: #f1f1f1;\n}\n\n/* When the inputs get focus, do something */\n.form-container input[type=text]:focus, .form-container input[type=password]:focus {\nbackground-color: #ddd;\noutline: none;\n}\n\n/* Set a style for the submit/login button */\n.form-container .btn {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 16px 20px;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nmargin-bottom:10px;\nopacity: 0.8;\n}\n\n/* Add a red background color to the cancel button */\n.form-container .cancel {\nbackground-color: red;\n}\n\n/* Add some hover effects to buttons */\n.form-container .btn:hover, .open-button:hover {\nopacity: 1;\n}",
        "function openForm() {\ndocument.getElementById(\"myForm\").style.display = \"block\";\n}\n\nfunction closeForm() {\ndocument.getElementById(\"myForm\").style.display = \"none\";\n}"
      ]
    },
    {
      "title": "How TO - Inline Form",
      "summary": "Learn how to create a responsive inline form with CSS.\nResponsive Inline Form\nResize the browser window to see the effect (the labels and inputs will stack on top of each other instead of next to each other on smaller screens):\nTry it Yourself »\nHow To Create an Inline Form\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial.\nExample\nREMOVE ADS\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<form class=\"form-inline\" action=\"/action_page.php\">\n<label for=\"email\">Email:</label>\n<input type=\"email\" id=\"email\" placeholder=\"Enter email\" name=\"email\">\n<label for=\"pwd\">Password:</label>\n<input type=\"password\" id=\"pwd\" placeholder=\"Enter password\" name=\"pswd\">\n<label>\n<input type=\"checkbox\" name=\"remember\"> Remember me\n</label>\n<button type=\"submit\">Submit</button>\n</form>",
        "/* Style the form - display items horizontally */\n.form-inline {\ndisplay: flex;\nflex-flow: row wrap;\nalign-items: center;\n}\n\n/* Add some margins for each label */\n.form-inline label {\nmargin: 5px 10px 5px 0;\n}\n\n/* Style the input fields */\n.form-inline input {\nvertical-align: middle;\nmargin: 5px 10px 5px 0;\npadding: 10px;\nbackground-color: #fff;\nborder: 1px solid #ddd;\n}\n\n/* Style the submit button */\n.form-inline button {\npadding: 10px 20px;\nbackground-color: dodgerblue;\nborder: 1px solid #ddd;\ncolor: white;\n}\n\n.form-inline button:hover {\nbackground-color: royalblue;\n}\n\n/* Add responsiveness - display the form controls vertically instead of horizontally on screens that are less than 800px wide */\n@media (max-width: 800px) {\n.form-inline input {\nmargin: 10px 0;\n}\n\n.form-inline {\nflex-direction: column;\nalign-items: stretch;\n}\n}"
      ]
    },
    {
      "title": "How TO - Clear Input Field",
      "summary": "Learn how to clear an input field on focus.\nClick on the input field to clear it:\nClear Input Field on Focus\nExample\nClear Input Field with a Button\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.",
      "examples": [
        "<!-- When the input field gets focus, replace its current value with an empty string -->\n<input type=\"text\" onfocus=\"this.value=''\" value=\"Blabla\">",
        "<button onclick=\"document.getElementById('myInput').value = ''\">Clear input field</button>\n<input type=\"text\" value=\"Blabla\" id=\"myInput\">"
      ]
    },
    {
      "title": "How TO - Hide Arrows From Input Number",
      "summary": "Learn how to remove arrows/spinners from input type number with CSS.\nTry to hover over both number inputs to see the difference:\nHidden arrows:\nDefault:\nNotes on functionality: It is still possible to increment the number when you scroll inside the number input.\nRemove Arrows/Spinners\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our HTML input type=\"number\" reference to learn more about inputs with type=\"number\".",
      "examples": [
        "/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n-webkit-appearance: none;\nmargin: 0;\n}\n\n/* Firefox */\ninput[type=number] {\n-moz-appearance: textfield;\n}"
      ]
    },
    {
      "title": "How TO - Copy Text to Clipboard",
      "summary": "Learn how to copy text to the clipboard with JavaScript.\nClick on the button to copy the text from the text field.\nCopy Text to Clipboard\nExample\nExample\nREMOVE ADS\nDisplay Copied Text in a Tooltip\nAdd CSS:\nExample",
      "examples": [
        "<!-- The text field -->\n<input type=\"text\" value=\"Hello World\" id=\"myInput\">\n\n<!-- The button used to copy the text -->\n<button onclick=\"myFunction()\">Copy text</button>",
        "function myFunction() {\n// Get the text field\nvar copyText = document.getElementById(\"myInput\");\n\n// Select the text field\ncopyText.select();\ncopyText.setSelectionRange(0, 99999); // For mobile devices\n\n// Copy the text inside the text field\nnavigator.clipboard.writeText(copyText.value);\n\n// Alert the copied text\nalert(\"Copied the text: \" + copyText.value);\n}",
        ".tooltip {\nposition: relative;\ndisplay: inline-block;\n}\n\n.tooltip .tooltiptext {\nvisibility: hidden;\nwidth: 140px;\nbackground-color: #555;\ncolor: #fff;\ntext-align: center;\nborder-radius: 6px;\npadding: 5px;\nposition: absolute;\nz-index: 1;\nbottom: 150%;\nleft: 50%;\nmargin-left: -75px;\nopacity: 0;\ntransition: opacity 0.3s;\n}\n\n.tooltip .tooltiptext::after {\ncontent: \"\";\nposition: absolute;\ntop: 100%;\nleft: 50%;\nmargin-left: -5px;\nborder-width: 5px;\nborder-style: solid;\nborder-color: #555 transparent transparent transparent;\n}\n\n.tooltip:hover .tooltiptext {\nvisibility: visible;\nopacity: 1;\n}"
      ]
    },
    {
      "title": "How TO - Animated Search Form",
      "summary": "Learn how to create an animated search form with CSS.\nHow To Create an Animated Search Form\nClick on the input field:\nExample\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nGo to our CSS Forms Tutorial to learn more about how to style HTML Forms.",
      "examples": [
        "<input type=\"text\" name=\"search\" placeholder=\"Search..\">",
        "input[type=text] {\nwidth: 130px;\n-webkit-transition: width 0.4s ease-in-out;\ntransition: width 0.4s ease-in-out;\n}\n\n/* When the input field gets focus, change its width to 100% */\ninput[type=text]:focus {\nwidth: 100%;\n}"
      ]
    },
    {
      "title": "How TO - Search Button",
      "summary": "Learn how to create a search button with CSS.\nFull-width:\nCentered inside a form with max-width:\nHow To Create a Search Button\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Load icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- The form -->\n<form class=\"example\" action=\"action_page.php\">\n<input type=\"text\" placeholder=\"Search..\" name=\"search\">\n<button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n</form>",
        "* {\nbox-sizing: border-box;\n}\n\n/* Style the search field */\nform.example input[type=text] {\npadding: 10px;\nfont-size: 17px;\nborder: 1px solid grey;\nfloat: left;\nwidth: 80%;\nbackground: #f1f1f1;\n}\n\n/* Style the submit button */\nform.example button {\nfloat: left;\nwidth: 20%;\npadding: 10px;\nbackground: #2196F3;\ncolor: white;\nfont-size: 17px;\nborder: 1px solid grey;\nborder-left: none; /* Prevent double borders */\ncursor: pointer;\n}\n\nform.example button:hover {\nbackground: #0b7dda;\n}\n\n/* Clear floats */\nform.example::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}"
      ]
    },
    {
      "title": "How TO - Fullscreen Search",
      "summary": "Learn how to create a full screen search box with CSS and JavaScript.\nHow To Create a Fullscreen Search Box\nExample\nExample\nREMOVE ADS\nUse JavaScript to turn on and off the overlay/fullscreen effect:\nExample",
      "examples": [
        "<div id=\"myOverlay\" class=\"overlay\">\n<span class=\"closebtn\" onclick=\"closeSearch()\" title=\"Close Overlay\">x</span>\n<div class=\"overlay-content\">\n<form action=\"action_page.php\">\n<input type=\"text\" placeholder=\"Search..\" name=\"search\">\n<button type=\"submit\"><i class=\"fa fa-search\"></i></button>\n</form>\n</div>\n</div>",
        "/* The overlay effect with black background */\n.overlay {\nheight: 100%;\nwidth: 100%;\ndisplay: none;\nposition: fixed;\nz-index: 1;\ntop: 0;\nleft: 0;\nbackground-color: rgb(0,0,0);\nbackground-color: rgba(0,0,0, 0.9); /* Black with a little bit see-through */\n}\n\n/* The content */\n.overlay-content {\nposition: relative;\ntop: 46%;\nwidth: 80%;\ntext-align: center;\nmargin-top: 30px;\nmargin: auto;\n}\n\n/* Close button */\n.overlay .closebtn {\nposition: absolute;\ntop: 20px;\nright: 45px;\nfont-size: 60px;\ncursor: pointer;\ncolor: white;\n}\n\n.overlay .closebtn:hover {\ncolor: #ccc;\n}\n\n/* Style the search field */\n.overlay input[type=text] {\npadding: 15px;\nfont-size: 17px;\nborder: none;\nfloat: left;\nwidth: 80%;\nbackground: white;\n}\n\n.overlay input[type=text]:hover {\nbackground: #f1f1f1;\n}\n\n/* Style the submit button */\n.overlay button {\nfloat: left;\nwidth: 20%;\npadding: 15px;\nbackground: #ddd;\nfont-size: 17px;\nborder: none;\ncursor: pointer;\n}\n\n.overlay button:hover {\nbackground: #bbb;\n}",
        "// Open the full screen search box\nfunction openSearch() {\ndocument.getElementById(\"myOverlay\").style.display = \"block\";\n}\n\n// Close the full screen search box\nfunction closeSearch() {\ndocument.getElementById(\"myOverlay\").style.display = \"none\";\n}"
      ]
    },
    {
      "title": "How TO - Input Field in a Menu",
      "summary": "Learn how to create a navigation menu with an input field inside of it.\nHow To Add an Input Field in Navbar\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"topnav\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#about\">About</a>\n<a href=\"#contact\">Contact</a>\n<div class=\"search-container\">\n<form action=\"/action_page.php\">\n<input type=\"text\" placeholder=\"Search..\" name=\"search\">\n<button type=\"submit\">Submit</button>\n</form>\n</div>\n</div>",
        "* {box-sizing: border-box;}\n\n/* Style the navbar */\n.topnav {\noverflow: hidden;\nbackground-color: #e9e9e9;\n}\n\n/* Navbar links */\n.topnav a {\nfloat: left;\ndisplay: block;\ncolor: black;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Navbar links on mouse-over */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Active/current link */\n.topnav a.active {\nbackground-color: #2196F3;\ncolor: white;\n}\n\n/* Style the input container */\n.topnav .search-container {\nfloat: right;\n}\n\n/* Style the input field inside the navbar */\n.topnav input[type=text] {\npadding: 6px;\nmargin-top: 8px;\nfont-size: 17px;\nborder: none;\n}\n\n/* Style the button inside the input container */\n.topnav .search-container button {\nfloat: right;\npadding: 6px;\nmargin-top: 8px;\nmargin-right: 16px;\nbackground: #ddd;\nfont-size: 17px;\nborder: none;\ncursor: pointer;\n}\n\n.topnav .search-container button:hover {\nbackground: #ccc;\n}\n\n/* Add responsiveness - On small screens, display the navbar vertically instead of horizontally */\n@media screen and (max-width: 600px) {\n.topnav .search-container {\nfloat: none;\n}\n.topnav a, .topnav input[type=text], .topnav .search-container button {\nfloat: none;\ndisplay: block;\ntext-align: left;\nwidth: 100%;\nmargin: 0;\npadding: 14px;\n}\n.topnav input[type=text] {\nborder: 1px solid #ccc;\n}\n}"
      ]
    },
    {
      "title": "How TO - Login Form in a Menu",
      "summary": "Learn how to create a responsive navigation menu with a login form inside of it.\nHow To Add a Login Form in Navbar\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"topnav\">\n<a class=\"active\" href=\"#home\">Home</a>\n<a href=\"#about\">About</a>\n<a href=\"#contact\">Contact</a>\n<div class=\"login-container\">\n<form action=\"/action_page.php\">\n<input type=\"text\" placeholder=\"Username\" name=\"username\">\n<input type=\"text\" placeholder=\"Password\" name=\"psw\">\n<button type=\"submit\">Login</button>\n</form>\n</div>\n</div>",
        "* {box-sizing: border-box;}\n\n/* Style the navbar */\n.topnav {\noverflow: hidden;\nbackground-color: #e9e9e9;\n}\n\n/* Navbar links */\n.topnav a {\nfloat: left;\ndisplay: block;\ncolor: black;\ntext-align: center;\npadding: 14px 16px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Navbar links on mouse-over */\n.topnav a:hover {\nbackground-color: #ddd;\ncolor: black;\n}\n\n/* Active/current link */\n.topnav a.active {\nbackground-color: #2196F3;\ncolor: white;\n}\n\n/* Style the input container */\n.topnav .login-container {\nfloat: right;\n}\n\n/* Style the input field inside the navbar */\n.topnav input[type=text] {\npadding: 6px;\nmargin-top: 8px;\nfont-size: 17px;\nborder: none;\nwidth: 150px; /* adjust as needed (as long as it doesn't break the topnav) */\n}\n\n/* Style the button inside the input container */\n.topnav .login-container button {\nfloat: right;\npadding: 6px;\nmargin-top: 8px;\nmargin-right: 16px;\nbackground: #ddd;\nfont-size: 17px;\nborder: none;\ncursor: pointer;\n}\n\n.topnav .login-container button:hover {\nbackground: #ccc;\n}\n\n/* Add responsiveness - On small screens, display the navbar vertically instead of horizontally */\n@media screen and (max-width: 600px) {\n.topnav .login-container {\nfloat: none;\n}\n.topnav a, .topnav input[type=text], .topnav .login-container button {\nfloat: none;\ndisplay: block;\ntext-align: left;\nwidth: 100%;\nmargin: 0;\npadding: 14px;\n}\n.topnav input[type=text] {\nborder: 1px solid #ccc;\n}\n}"
      ]
    },
    {
      "title": "How TO - Custom Checkbox",
      "summary": "Learn how to create custom checkboxes and radio buttons with CSS.\nDefault:\nCustom checkbox:\nCustom radio button:\nTry it Yourself »\nHow To Create a Custom Checkbox\nExample\nREMOVE ADS\nExample\nHow To Create a Custom Radio Button\nExample",
      "examples": [
        "<label class=\"container\">One\n<input type=\"checkbox\" checked=\"checked\">\n<span class=\"checkmark\"></span>\n</label>\n\n<label class=\"container\">Two\n<input type=\"checkbox\">\n<span class=\"checkmark\"></span>\n</label>\n\n<label class=\"container\">Three\n<input type=\"checkbox\">\n<span class=\"checkmark\"></span>\n</label>\n\n<label class=\"container\">Four\n<input type=\"checkbox\">\n<span class=\"checkmark\"></span>\n</label>",
        "/* Customize the label (the container) */\n.container {\ndisplay: block;\nposition: relative;\npadding-left: 35px;\nmargin-bottom: 12px;\ncursor: pointer;\nfont-size: 22px;\n-webkit-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n}\n\n/* Hide the browser's default checkbox */\n.container input {\nposition: absolute;\nopacity: 0;\ncursor: pointer;\nheight: 0;\nwidth: 0;\n}\n\n/* Create a custom checkbox */\n.checkmark {\nposition: absolute;\ntop: 0;\nleft: 0;\nheight: 25px;\nwidth: 25px;\nbackground-color: #eee;\n}\n\n/* On mouse-over, add a grey background color */\n.container:hover input ~ .checkmark {\nbackground-color: #ccc;\n}\n\n/* When the checkbox is checked, add a blue background */\n.container input:checked ~ .checkmark {\nbackground-color: #2196F3;\n}\n\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\ncontent: \"\";\nposition: absolute;\ndisplay: none;\n}\n\n/* Show the checkmark when checked */\n.container input:checked ~ .checkmark:after {\ndisplay: block;\n}\n\n/* Style the checkmark/indicator */\n.container .checkmark:after {\nleft: 9px;\ntop: 5px;\nwidth: 5px;\nheight: 10px;\nborder: solid white;\nborder-width: 0 3px 3px 0;\n-webkit-transform: rotate(45deg);\n-ms-transform: rotate(45deg);\ntransform: rotate(45deg);\n}",
        "/* Customize the label (the container) */\n.container {\ndisplay: block;\nposition: relative;\npadding-left: 35px;\nmargin-bottom: 12px;\ncursor: pointer;\nfont-size: 22px;\n-webkit-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n}\n\n/* Hide the browser's default radio button */\n.container input {\nposition: absolute;\nopacity: 0;\ncursor: pointer;\nheight: 0;\nwidth: 0;\n}\n\n/* Create a custom radio button */\n.checkmark {\nposition: absolute;\ntop: 0;\nleft: 0;\nheight: 25px;\nwidth: 25px;\nbackground-color: #eee;\nborder-radius: 50%;\n}\n\n/* On mouse-over, add a grey background color */\n.container:hover input ~ .checkmark {\nbackground-color: #ccc;\n}\n\n/* When the radio button is checked, add a blue background */\n.container input:checked ~ .checkmark {\nbackground-color: #2196F3;\n}\n\n/* Create the indicator (the dot/circle - hidden when not checked) */\n.checkmark:after {\ncontent: \"\";\nposition: absolute;\ndisplay: none;\n}\n\n/* Show the indicator (dot/circle) when checked */\n.container input:checked ~ .checkmark:after {\ndisplay: block;\n}\n\n/* Style the indicator (dot/circle) */\n.container .checkmark:after {\ntop: 9px;\nleft: 9px;\nwidth: 8px;\nheight: 8px;\nborder-radius: 50%;\nbackground: white;\n}"
      ]
    },
    {
      "title": "How TO - Custom Select Box",
      "summary": "Learn how to create custom select boxes with CSS and JavaScript.\nCustom Select Box\nDefault:\nCustom:\nTry it Yourself »\nCreate a Custom Select Menu\nExample\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Wrap the select box in a \".custom-select\" DIV element.\nRemember to set the width: -->\n<div class=\"custom-select\" style=\"width:200px;\">\n<select>\n<option value=\"0\">Select car:</option>\n<option value=\"1\">Audi</option>\n<option value=\"2\">BMW</option>\n<option value=\"3\">Citroen</option>\n<option value=\"4\">Ford</option>\n<option value=\"5\">Honda</option>\n<option value=\"6\">Jaguar</option>\n<option value=\"7\">Land Rover</option>\n<option value=\"8\">Mercedes</option>\n<option value=\"9\">Mini</option>\n<option value=\"10\">Nissan</option>\n<option value=\"11\">Toyota</option>\n<option value=\"12\">Volvo</option>\n</select>\n</div>",
        "/* The container must be positioned relative: */\n.custom-select {\nposition: relative;\nfont-family: Arial;\n}\n\n.custom-select select {\ndisplay: none; /*hide original SELECT element: */\n}\n\n.select-selected {\nbackground-color: DodgerBlue;\n}\n\n/* Style the arrow inside the select element: */\n.select-selected:after {\nposition: absolute;\ncontent: \"\";\ntop: 14px;\nright: 10px;\nwidth: 0;\nheight: 0;\nborder: 6px solid transparent;\nborder-color: #fff transparent transparent transparent;\n}\n\n/* Point the arrow upwards when the select box is open (active): */\n.select-selected.select-arrow-active:after {\nborder-color: transparent transparent #fff transparent;\ntop: 7px;\n}\n\n/* style the items (options), including the selected item: */\n.select-items div,.select-selected {\ncolor: #ffffff;\npadding: 8px 16px;\nborder: 1px solid transparent;\nborder-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;\ncursor: pointer;\n}\n\n/* Style items (options): */\n.select-items {\nposition: absolute;\nbackground-color: DodgerBlue;\ntop: 100%;\nleft: 0;\nright: 0;\nz-index: 99;\n}\n\n/* Hide the items when the select box is closed: */\n.select-hide {\ndisplay: none;\n}\n\n.select-items div:hover, .same-as-selected {\nbackground-color: rgba(0, 0, 0, 0.1);\n}",
        "var x, i, j, l, ll, selElmnt, a, b, c;\n/* Look for any elements with the class \"custom-select\": */\nx = document.getElementsByClassName(\"custom-select\");\nl = x.length;\nfor (i = 0; i < l; i++) {\nselElmnt = x[i].getElementsByTagName(\"select\")[0];\nll = selElmnt.length;\n/* For each element, create a new DIV that will act as the selected item: */\na = document.createElement(\"DIV\");\na.setAttribute(\"class\", \"select-selected\");\na.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\nx[i].appendChild(a);\n/* For each element, create a new DIV that will contain the option list: */\nb = document.createElement(\"DIV\");\nb.setAttribute(\"class\", \"select-items select-hide\");\nfor (j = 1; j < ll; j++) {\n/* For each option in the original select element,\ncreate a new DIV that will act as an option item: */\nc = document.createElement(\"DIV\");\nc.innerHTML = selElmnt.options[j].innerHTML;\nc.addEventListener(\"click\", function(e) {\n/* When an item is clicked, update the original select box,\nand the selected item: */\nvar y, i, k, s, h, sl, yl;\ns = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\nsl = s.length;\nh = this.parentNode.previousSibling;\nfor (i = 0; i < sl; i++) {\nif (s.options[i].innerHTML == this.innerHTML) {\ns.selectedIndex = i;\nh.innerHTML = this.innerHTML;\ny = this.parentNode.getElementsByClassName(\"same-as-selected\");\nyl = y.length;\nfor (k = 0; k < yl; k++) {\ny[k].removeAttribute(\"class\");\n}\nthis.setAttribute(\"class\", \"same-as-selected\");\nbreak;\n}\n}\nh.click();\n});\nb.appendChild(c);\n}\nx[i].appendChild(b);\na.addEventListener(\"click\", function(e) {\n/* When the select box is clicked, close any other select boxes,\nand open/close the current select box: */\ne.stopPropagation();\ncloseAllSelect(this);\nthis.nextSibling.classList.toggle(\"select-hide\");\nthis.classList.toggle(\"select-arrow-active\");\n});\n}\n\nfunction closeAllSelect(elmnt) {\n/* A function that will close all select boxes in the document,\nexcept the current select box: */\nvar x, y, i, xl, yl, arrNo = [];\nx = document.getElementsByClassName(\"select-items\");\ny = document.getElementsByClassName(\"select-selected\");\nxl = x.length;\nyl = y.length;\nfor (i = 0; i < yl; i++) {\nif (elmnt == y[i]) {\narrNo.push(i)\n} else {\ny[i].classList.remove(\"select-arrow-active\");\n}\n}\nfor (i = 0; i < xl; i++) {\nif (arrNo.indexOf(i)) {\nx[i].classList.add(\"select-hide\");\n}\n}\n}\n\n/* If the user clicks anywhere outside the select box,\nthen close all select boxes: */\ndocument.addEventListener(\"click\", closeAllSelect);"
      ]
    },
    {
      "title": "How TO - Toggle Switch",
      "summary": "Learn how to create a \"toggle switch\" (on/off button) with CSS.\nTry it Yourself »\nHow To Create a Toggle Switch\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Rectangular switch -->\n<label class=\"switch\">\n<input type=\"checkbox\">\n<span class=\"slider\"></span>\n</label>\n\n<!-- Rounded switch -->\n<label class=\"switch\">\n<input type=\"checkbox\">\n<span class=\"slider round\"></span>\n</label>",
        "/* The switch - the box around the slider */\n.switch {\nposition: relative;\ndisplay: inline-block;\nwidth: 60px;\nheight: 34px;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\nopacity: 0;\nwidth: 0;\nheight: 0;\n}\n\n/* The slider */\n.slider {\nposition: absolute;\ncursor: pointer;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\nbackground-color: #ccc;\n-webkit-transition: .4s;\ntransition: .4s;\n}\n\n.slider:before {\nposition: absolute;\ncontent: \"\";\nheight: 26px;\nwidth: 26px;\nleft: 4px;\nbottom: 4px;\nbackground-color: white;\n-webkit-transition: .4s;\ntransition: .4s;\n}\n\ninput:checked + .slider {\nbackground-color: #2196F3;\n}\n\ninput:focus + .slider {\nbox-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n-webkit-transform: translateX(26px);\n-ms-transform: translateX(26px);\ntransform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\nborder-radius: 34px;\n}\n\n.slider.round:before {\nborder-radius: 50%;\n}"
      ]
    },
    {
      "title": "How TO - Display Text when Checkbox is Checked",
      "summary": "Check whether a checkbox is checked with JavaScript.\nDisplay some text when the checkbox is checked:\nCheckbox is CHECKED!\nCheck Whether a Checkbox is Checked\nExample\nExample",
      "examples": [
        "Checkbox: <input type=\"checkbox\" id=\"myCheck\" onclick=\"myFunction()\">\n\n<p id=\"text\" style=\"display:none\">Checkbox is CHECKED!</p>",
        "function myFunction() {\n// Get the checkbox\nvar checkBox = document.getElementById(\"myCheck\");\n// Get the output text\nvar text = document.getElementById(\"text\");\n\n// If the checkbox is checked, display the output text\nif (checkBox.checked == true){\ntext.style.display = \"block\";\n} else {\ntext.style.display = \"none\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Detect Caps Lock",
      "summary": "Learn how to find out if capslock is on inside an input field with JavaScript.\nDetect if Caps Lock is On\nTry to press the \"Caps Lock\" key inside the input field:\nWARNING! Caps lock is ON.\nExample\nTip: Read more about the getModifierState() method in our JavaScript Event Reference - getModifierState().",
      "examples": [
        "// Get the input field\nvar input = document.getElementById(\"myInput\");\n\n// Get the warning text\nvar text = document.getElementById(\"text\");\n\n// When the user presses any key on the keyboard, run the function\ninput.addEventListener(\"keyup\", function(event) {\n\n// If \"caps lock\" is pressed, display the warning text\nif (event.getModifierState(\"CapsLock\")) {\ntext.style.display = \"block\";\n} else {\ntext.style.display = \"none\"\n}\n});"
      ]
    },
    {
      "title": "How TO - Trigger Button Click on Enter",
      "summary": "Trigger a button click on keyboard \"enter\" with JavaScript.\nTrigger a Button Click on Enter\nPress the \"Enter\" key inside the input field to trigger the button:\nExample\nTip: Learn more about the KeyboardEvent key Property in our JavaScript Reference.",
      "examples": [
        "// Get the input field\nvar input = document.getElementById(\"myInput\");\n\n// Execute a function when the user presses a key on the keyboard\ninput.addEventListener(\"keypress\", function(event) {\n// If the user presses the \"Enter\" key on the keyboard\nif (event.key === \"Enter\") {\n// Cancel the default action, if needed\nevent.preventDefault();\n// Trigger the button element with a click\ndocument.getElementById(\"myBtn\").click();\n}\n});"
      ]
    },
    {
      "title": "How TO - Password Validation",
      "summary": "Learn how to create a password validation form with CSS and JavaScript.\nPassword Validation\nTry it Yourself »\nCreate A Password Validation Form\nExample\nNote: We use the pattern attribute (with a regular expression) inside the password field to set a restriction for submitting the form: it must contain 8 or more characters that are of at least one number, and one uppercase and lowercase letter.\nREMOVE ADS\nStyle the input fields and the message box:\nExample\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.",
      "examples": [
        "<div class=\"container\">\n<form action=\"/action_page.php\">\n<label for=\"usrname\">Username</label>\n<input type=\"text\" id=\"usrname\" name=\"usrname\" required>\n\n<label for=\"psw\">Password</label>\n<  input type=\"password\" id=\"psw\" name=\"psw\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\" required>\n\n<input type=\"submit\" value=\"Submit\">\n</form>\n</div>\n\n<div id=\"message\">\n<h3>Password must contain the following:</h3>\n<p id=\"letter\" class=\"invalid\">A <b>lowercase</b> letter</p>\n<p id=\"capital\" class=\"invalid\">A <b>capital (uppercase)</b> letter</p>\n<p id=\"number\" class=\"invalid\">A <b>number</b></p>\n<p id=\"length\" class=\"invalid\">Minimum <b>8 characters</b></p>\n</div>",
        "/* Style all input fields */\ninput {\nwidth: 100%;\npadding: 12px;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\nmargin-top: 6px;\nmargin-bottom: 16px;\n}\n\n/* Style the submit button */\ninput[type=submit] {\nbackground-color: #04AA6D;\ncolor: white;\n}\n\n/* Style the container for inputs */\n.container {\nbackground-color: #f1f1f1;\npadding: 20px;\n}\n\n/* The message box is shown when the user clicks on the password field */\n#message {\ndisplay:none;\nbackground: #f1f1f1;\ncolor: #000;\nposition: relative;\npadding: 20px;\nmargin-top: 10px;\n}\n\n#message p {\npadding: 10px 35px;\nfont-size: 18px;\n}\n\n/* Add a green text color and a checkmark when the requirements are right */\n.valid {\ncolor: green;\n}\n\n.valid:before {\nposition: relative;\nleft: -35px;\ncontent: \"&#10004;\";\n}\n\n/* Add a red text color and an \"x\" icon when the requirements are wrong */\n.invalid {\ncolor: red;\n}\n\n.invalid:before {\nposition: relative;\nleft: -35px;\ncontent: \"&#10006;\";\n}",
        "<script>\nvar myInput = document.getElementById(\"psw\");\nvar letter = document.getElementById(\"letter\");\nvar capital = document.getElementById(\"capital\");\nvar number = document.getElementById(\"number\");\nvar length = document.getElementById(\"length\");\n\n// When the user clicks on the password field, show the message box\nmyInput.onfocus = function() {\ndocument.getElementById(\"message\").style.display = \"block\";\n}\n\n// When the user clicks outside of the password field, hide the message box\nmyInput.onblur = function() {\ndocument.getElementById(\"message\").style.display = \"none\";\n}\n\n// When the user starts to type something inside the password field\nmyInput.onkeyup = function() {\n// Validate lowercase letters\nvar lowerCaseLetters = /[a-z]/g;\nif(myInput.value.match(lowerCaseLetters)) {\nletter.classList.remove(\"invalid\");\nletter.classList.add(\"valid\");\n} else {\nletter.classList.remove(\"valid\");\nletter.classList.add(\"invalid\");\n}\n\n// Validate capital letters\nvar upperCaseLetters = /[A-Z]/g;\nif(myInput.value.match(upperCaseLetters)) {\ncapital.classList.remove(\"invalid\");\ncapital.classList.add(\"valid\");\n} else {\ncapital.classList.remove(\"valid\");\ncapital.classList.add(\"invalid\");\n}\n\n// Validate numbers\nvar numbers = /[0-9]/g;\nif(myInput.value.match(numbers)) {\nnumber.classList.remove(\"invalid\");\nnumber.classList.add(\"valid\");\n} else {\nnumber.classList.remove(\"valid\");\nnumber.classList.add(\"invalid\");\n}\n\n// Validate length\nif(myInput.value.length >= 8) {\nlength.classList.remove(\"invalid\");\nlength.classList.add(\"valid\");\n} else {\nlength.classList.remove(\"valid\");\nlength.classList.add(\"invalid\");\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Toggle Password Visibility",
      "summary": "Toggle between password visibility with JavaScript.\nShow Password\nToggle Password Visibility\nExample\nExample",
      "examples": [
        "<!-- Password field -->\nPassword: <input type=\"password\" value=\"FakePSW\" id=\"myInput\">\n\n<!-- An element to toggle between password visibility -->\n<input type=\"checkbox\" onclick=\"myFunction()\">Show Password",
        "function myFunction() {\nvar x = document.getElementById(\"myInput\");\nif (x.type === \"password\") {\nx.type = \"text\";\n} else {\nx.type = \"password\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Form with Multiple Steps Register:",
      "summary": "Learn how to create a form with multiple steps.\nForm Wizard - Multi Step Form:\nTry it Yourself »\nExample\nREMOVE ADS\nStyle the form elements:\nExample\nExample",
      "examples": [
        "<form id=\"regForm\" action=\"\">\n\n<h1>Register:</h1>\n\n<!-- One \"tab\" for each step in the form: -->\n<div class=\"tab\">Name:\n<p><input placeholder=\"First name...\" oninput=\"this.className = ''\"></p>\n<p><input placeholder=\"Last name...\" oninput=\"this.className = ''\"></p>\n</div>\n\n<div class=\"tab\">Contact Info:\n<p><input placeholder=\"E-mail...\" oninput=\"this.className = ''\"></p>\n<p><input placeholder=\"Phone...\" oninput=\"this.className = ''\"></p>\n</div>\n\n<div class=\"tab\">Birthday:\n<p><input placeholder=\"dd\" oninput=\"this.className = ''\"></p>\n<p><input placeholder=\"mm\" oninput=\"this.className = ''\"></p>\n<p><input placeholder=\"yyyy\" oninput=\"this.className = ''\"></p>\n</div>\n\n<div class=\"tab\">Login Info:\n<p><input placeholder=\"Username...\" oninput=\"this.className = ''\"></p>\n<p><input placeholder=\"Password...\" oninput=\"this.className = ''\"></p>\n</div>\n\n<div style=\"overflow:auto;\">\n<div style=\"float:right;\">\n<button type=\"button\" id=\"prevBtn\" onclick=\"nextPrev(-1)\">Previous</button>\n<button type=\"button\" id=\"nextBtn\" onclick=\"nextPrev(1)\">Next</button>\n</div>\n</div>\n\n<!-- Circles which indicates the steps of the form: -->\n<div style=\"text-align:center;margin-top:40px;\">\n<span class=\"step\"></span>\n<span class=\"step\"></span>\n<span class=\"step\"></span>\n<span class=\"step\"></span>\n</div>\n\n</form>",
        "/* Style the form */\n#regForm {\nbackground-color: #ffffff;\nmargin: 100px auto;\npadding: 40px;\nwidth: 70%;\nmin-width: 300px;\n}\n\n/* Style the input fields */\ninput {\npadding: 10px;\nwidth: 100%;\nfont-size: 17px;\nfont-family: Raleway;\nborder: 1px solid #aaaaaa;\n}\n\n/* Mark input boxes that gets an error on validation: */\ninput.invalid {\nbackground-color: #ffdddd;\n}\n\n/* Hide all steps by default: */\n.tab {\ndisplay: none;\n}\n\n/* Make circles that indicate the steps of the form: */\n.step {\nheight: 15px;\nwidth: 15px;\nmargin: 0 2px;\nbackground-color: #bbbbbb;\nborder: none;\nborder-radius: 50%;\ndisplay: inline-block;\nopacity: 0.5;\n}\n\n/* Mark the active step: */\n.step.active {\nopacity: 1;\n}\n\n/* Mark the steps that are finished and valid: */\n.step.finish {\nbackground-color: #04AA6D;\n}",
        "var currentTab = 0; // Current tab is set to be the first tab (0)\nshowTab(currentTab); // Display the current tab\n\nfunction showTab(n) {\n// This function will display the specified tab of the form ...\nvar x = document.getElementsByClassName(\"tab\");\nx[n].style.display = \"block\";\n// ... and fix the Previous/Next buttons:\nif (n == 0) {\ndocument.getElementById(\"prevBtn\").style.display = \"none\";\n} else {\ndocument.getElementById(\"prevBtn\").style.display = \"inline\";\n}\nif (n == (x.length - 1)) {\ndocument.getElementById(\"nextBtn\").innerHTML = \"Submit\";\n} else {\ndocument.getElementById(\"nextBtn\").innerHTML = \"Next\";\n}\n// ... and run a function that displays the correct step indicator:\nfixStepIndicator(n)\n}\n\nfunction nextPrev(n) {\n// This function will figure out which tab to display\nvar x = document.getElementsByClassName(\"tab\");\n// Exit the function if any field in the current tab is invalid:\nif (n == 1 && !validateForm()) return false;\n// Hide the current tab:\nx[currentTab].style.display = \"none\";\n// Increase or decrease the current tab by 1:\ncurrentTab = currentTab + n;\n// if you have reached the end of the form... :\nif (currentTab >= x.length) {\n//...the form gets submitted:\ndocument.getElementById(\"regForm\").submit();\nreturn false;\n}\n// Otherwise, display the correct tab:\nshowTab(currentTab);\n}\n\nfunction validateForm() {\n// This function deals with validation of the form fields\nvar x, y, i, valid = true;\nx = document.getElementsByClassName(\"tab\");\ny = x[currentTab].getElementsByTagName(\"input\");\n// A loop that checks every input field in the current tab:\nfor (i = 0; i < y.length; i++) {\n// If a field is empty...\nif (y[i].value == \"\") {\n// add an \"invalid\" class to the field:\ny[i].className += \" invalid\";\n// and set the current valid status to false:\nvalid = false;\n}\n}\n// If the valid status is true, mark the step as finished and valid:\nif (valid) {\ndocument.getElementsByClassName(\"step\")[currentTab].className += \" finish\";\n}\nreturn valid; // return the valid status\n}\n\nfunction fixStepIndicator(n) {\n// This function removes the \"active\" class of all steps...\nvar i, x = document.getElementsByClassName(\"step\");\nfor (i = 0; i < x.length; i++) {\nx[i].className = x[i].className.replace(\" active\", \"\");\n}\n//... and adds the \"active\" class to the current step:\nx[n].className += \" active\";\n}"
      ]
    },
    {
      "title": "How TO - Autocomplete",
      "summary": "Learn how to create an Autocomplete.\nAutocomplete\nStart typing:\nTry it Yourself »\nCreate an Autocomplete Form\nExample\nExample\nAn Array of all the countries in the world:\nThe container must have a \"relative\" positioning.\nExample\nREMOVE ADS\nExample\nExample\nPass the countries array as the second parameter of the autocomplete function:",
      "examples": [
        "<!--Make sure the form has the autocomplete function switched off:-->\n<form autocomplete=\"off\" action=\"/action_page.php\">\n<div class=\"autocomplete\" style=\"width:300px;\">\n<input id=\"myInput\" type=\"text\" name=\"myCountry\" placeholder=\"Country\">\n</div>\n<input type=\"submit\">\n</form>",
        "var countries = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua &amp; Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin Islands\",\"Brunei\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\"Central Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\"Netherlands Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Korea\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre &amp; Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; Nevis\",\"St Lucia\",\"St Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks &amp; Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican City\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];",
        "* { box-sizing: border-box; }\nbody {\nfont: 16px Arial;\n}\n.autocomplete {\n/*the container must be positioned relative:*/\nposition: relative;\ndisplay: inline-block;\n}\ninput {\nborder: 1px solid transparent;\nbackground-color: #f1f1f1;\npadding: 10px;\nfont-size: 16px;\n}\ninput[type=text] {\nbackground-color: #f1f1f1;\nwidth: 100%;\n}\ninput[type=submit] {\nbackground-color: DodgerBlue;\ncolor: #fff;\n}\n.autocomplete-items {\nposition: absolute;\nborder: 1px solid #d4d4d4;\nborder-bottom: none;\nborder-top: none;\nz-index: 99;\n/*position the autocomplete items to be the same width as the container:*/\ntop: 100%;\nleft: 0;\nright: 0;\n}\n.autocomplete-items div {\npadding: 10px;\ncursor: pointer;\nbackground-color: #fff;\nborder-bottom: 1px solid #d4d4d4;\n}\n.autocomplete-items div:hover {\n/*when hovering an item:*/\nbackground-color: #e9e9e9;\n}\n.autocomplete-active {\n/*when navigating through the items using the arrow keys:*/\nbackground-color: DodgerBlue !important;\ncolor: #ffffff;\n}",
        "function autocomplete(inp, arr) {\n/*the autocomplete function takes two arguments,\nthe text field element and an array of possible autocompleted values:*/\nvar currentFocus;\n/*execute a function when someone writes in the text field:*/\ninp.addEventListener(\"input\", function(e) {\nvar a, b, i, val = this.value;\n/*close any already open lists of autocompleted values*/\ncloseAllLists();\nif (!val) { return false;}\ncurrentFocus = -1;\n/*create a DIV element that will contain the items (values):*/\na = document.createElement(\"DIV\");\na.setAttribute(\"id\", this.id + \"autocomplete-list\");\na.setAttribute(\"class\", \"autocomplete-items\");\n/*append the DIV element as a child of the autocomplete container:*/\nthis.parentNode.appendChild(a);\n/*for each item in the array...*/\nfor (i = 0; i < arr.length; i++) {\n/*check if the item starts with the same letters as the text field value:*/\nif (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n/*create a DIV element for each matching element:*/\nb = document.createElement(\"DIV\");\n/*make the matching letters bold:*/\nb.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\nb.innerHTML += arr[i].substr(val.length);\n/*insert a input field that will hold the current array item's value:*/\nb.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n/*execute a function when someone clicks on the item value (DIV element):*/\nb.addEventListener(\"click\", function(e) {\n/*insert the value for the autocomplete text field:*/\ninp.value = this.getElementsByTagName(\"input\")[0].value;\n/*close the list of autocompleted values,\n(or any other open lists of autocompleted values:*/\ncloseAllLists();\n});\na.appendChild(b);\n}\n}\n});\n/*execute a function presses a key on the keyboard:*/\ninp.addEventListener(\"keydown\", function(e) {\nvar x = document.getElementById(this.id + \"autocomplete-list\");\nif (x) x = x.getElementsByTagName(\"div\");\nif (e.keyCode == 40) {\n/*If the arrow DOWN key is pressed,\nincrease the currentFocus variable:*/\ncurrentFocus++;\n/*and and make the current item more visible:*/\naddActive(x);\n} else if (e.keyCode == 38) { //up\n/*If the arrow UP key is pressed,\ndecrease the currentFocus variable:*/\ncurrentFocus--;\n/*and and make the current item more visible:*/\naddActive(x);\n} else if (e.keyCode == 13) {\n/*If the ENTER key is pressed, prevent the form from being submitted,*/\ne.preventDefault();\nif (currentFocus > -1) {\n/*and simulate a click on the \"active\" item:*/\nif (x) x[currentFocus].click();\n}\n}\n});\nfunction addActive(x) {\n/*a function to classify an item as \"active\":*/\nif (!x) return false;\n/*start by removing the \"active\" class on all items:*/\nremoveActive(x);\nif (currentFocus >= x.length) currentFocus = 0;\nif (currentFocus < 0) currentFocus = (x.length - 1);\n/*add class \"autocomplete-active\":*/\nx[currentFocus].classList.add(\"autocomplete-active\");\n}\nfunction removeActive(x) {\n/*a function to remove the \"active\" class from all autocomplete items:*/\nfor (var i = 0; i < x.length; i++) {\nx[i].classList.remove(\"autocomplete-active\");\n}\n}\nfunction closeAllLists(elmnt) {\n/*close all autocomplete lists in the document,\nexcept the one passed as an argument:*/\nvar x = document.getElementsByClassName(\"autocomplete-items\");\nfor (var i = 0; i < x.length; i++) {\nif (elmnt != x[i] && elmnt != inp) {\nx[i].parentNode.removeChild(x[i]);\n}\n}\n}\n/*execute a function when someone clicks in the document:*/\ndocument.addEventListener(\"click\", function (e) {\ncloseAllLists(e.target);\n});\n}",
        "<script>\nautocomplete(document.getElementById(\"myInput\"), countries);\n</script>"
      ]
    },
    {
      "title": "How TO - Turn Off Autocomplete For Input",
      "summary": "Learn how to disable autocomplete of an input field.\nTurn Off Autocomplete\nUse the autocomplete attribute to turn off autocomplete for input fields:\nExample\nYou can also turn off autocomplete for the whole form:\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our HTML autocomplete attribute reference to learn more about the automcomplete attribute.\nTip: Go to How TO - Autocomplete to learn how to create your own autocomplete component.",
      "examples": [
        "<input type=\"text\" autocomplete=\"off\">",
        "<form autocomplete=\"off\">",
        "autocomplete"
      ]
    },
    {
      "title": "How TO - Disable Spellcheck for Forms",
      "summary": "Learn how to turn off spell checking (grammar correction) for form elements.\nTurn Off Spellcheck\nBy default, when you enter text inside a form element, you will see a red underline below words that are not spelled right/incorrect. However, you can use spellcheck=\"false\" to turn off spell checking:\nExample\nYou can also turn of spell checking for the whole form:\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our HTML spellcheck Attribute Reference to learn more about the global spellcheck attribute.",
      "examples": [
        "<!-- for inputs -->\n<input type=\"text\" spellcheck=\"false\">\n\n<!-- for textareas -->\n<textarea spellcheck=\"false\"></textarea>",
        "<form spellcheck=\"false\">",
        "spellcheck=\"false\""
      ]
    },
    {
      "title": "How TO - File Upload Button",
      "summary": "Learn how to create a file upload button with HTML.\nClick \"Choose File\" button to upload a file:\nFile Upload\nExample",
      "examples": [
        "<form action=\"/action_page.php\">\n<input type=\"file\" id=\"myFile\" name=\"filename\">\n<input type=\"submit\">\n</form>"
      ]
    },
    {
      "title": "How TO - JS Validation For Empty Fields",
      "summary": "Learn how to add form validation for empty input fields with JavaScript.\nForm Validation For Empty Inputs\nExample\nIf an input field (fname) is empty, this function alerts a message, and returns false, to prevent the form from being submitted:\nExample",
      "examples": [
        "<form name=\"myForm\" action=\"/action_page.php\" onsubmit=\"return validateForm()\" method=\"post\" required>\nName: <input type=\"text\" name=\"fname\">\n<input type=\"submit\" value=\"Submit\">\n</form>",
        "function validateForm() {\nvar x = document.forms[\"myForm\"][\"fname\"].value;\nif (x == \"\") {\nalert(\"Name must be filled out\");\nreturn false;\n}\n}"
      ]
    },
    {
      "title": "How TO - Filter/Search List",
      "summary": "Learn how to create a filter list with JavaScript.\nFilter List\nHow to use JavaScript to search for items in a list.\nAdele\nAgnes\nBilly\nBob\nCalvin\nChristina\nCindy\nTry it Yourself »\nCreate A Search List\nExample\nNote: We use href=\"#\" in this demo since we do not have a page to link it to. In real life this should be a real URL to a specific page.\nStyle the input element and the list:\nExample\nREMOVE ADS\nExample\nTip: Remove toUpperCase() if you want to perform a case-sensitive search.\nTip: Also check out Filter Table.",
      "examples": [
        "<input type=\"text\" id=\"myInput\" onkeyup=\"myFunction()\" placeholder=\"Search for names..\">\n\n<ul id=\"myUL\">\n<li><a href=\"#\">Adele</a></li>\n<li><a href=\"#\">Agnes</a></li>\n\n<li><a href=\"#\">Billy</a></li>\n<li><a href=\"#\">Bob</a></li>\n\n<li><a href=\"#\">Calvin</a></li>\n<li><a href=\"#\">Christina</a></li>\n<li><a href=\"#\">Cindy</a></li>\n</ul>",
        "#myInput {\nbackground-image: url('/css/searchicon.png'); /* Add a search icon to input */\nbackground-position: 10px 12px; /* Position the search icon */\nbackground-repeat: no-repeat; /* Do not repeat the icon image */\nwidth: 100%; /* Full-width */\nfont-size: 16px; /* Increase font-size */\npadding: 12px 20px 12px 40px; /* Add some padding */\nborder: 1px solid #ddd; /* Add a grey border */\nmargin-bottom: 12px; /* Add some space below the input */\n}\n\n#myUL {\n/* Remove default list styling */\nlist-style-type: none;\npadding: 0;\nmargin: 0;\n}\n\n#myUL li a {\nborder: 1px solid #ddd; /* Add a border to all links */\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6; /* Grey background color */\npadding: 12px; /* Add some padding */\ntext-decoration: none; /* Remove default text underline */\nfont-size: 18px; /* Increase the font-size */\ncolor: black; /* Add a black text color */\ndisplay: block; /* Make it into a block element to fill the whole list */\n}\n\n#myUL li a:hover:not(.header) {\nbackground-color: #eee; /* Add a hover effect to all links, except for headers */\n}",
        "<script>\nfunction myFunction() {\n// Declare variables\nvar input, filter, ul, li, a, i, txtValue;\ninput = document.getElementById('myInput');\nfilter = input.value.toUpperCase();\nul = document.getElementById(\"myUL\");\nli = ul.getElementsByTagName('li');\n\n// Loop through all list items, and hide those who don't match the search query\nfor (i = 0; i < li.length; i++) {\na = li[i].getElementsByTagName(\"a\")[0];\ntxtValue = a.textContent || a.innerText;\nif (txtValue.toUpperCase().indexOf(filter) > -1) {\nli[i].style.display = \"\";\n} else {\nli[i].style.display = \"none\";\n}\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Filter/Search Table",
      "summary": "Learn how to create a filter table with JavaScript.\nFilter Table\nHow to use JavaScript to search for specific data in a table.\nTry it Yourself »\nCreate A Filtered Table\nExample\nStyle the input element and the table:\nExample\nREMOVE ADS\nExample\nTip: Remove toUpperCase() if you want to perform a case-sensitive search.\nTip: Change tr[i].getElementsByTagName('td')[0] to [1] if you want to search for \"Country\" (index 1) instead of \"Name\" (index 0).\nTip: Also check out Filter List.",
      "examples": [
        "<input type=\"text\" id=\"myInput\" onkeyup=\"myFunction()\" placeholder=\"Search for names..\">\n\n<table id=\"myTable\">\n<tr class=\"header\">\n<th style=\"width:60%;\">Name</th>\n<th style=\"width:40%;\">Country</th>\n</tr>\n<tr>\n<td>Alfreds Futterkiste</td>\n<td>Germany</td>\n</tr>\n<tr>\n<td>Berglunds snabbkop</td>\n<td>Sweden</td>\n</tr>\n<tr>\n<td>Island Trading</td>\n<td>UK</td>\n</tr>\n<tr>\n<td>Koniglich Essen</td>\n<td>Germany</td>\n</tr>\n</table>",
        "#myInput {\nbackground-image: url('/css/searchicon.png'); /* Add a search icon to input */\nbackground-position: 10px 12px; /* Position the search icon */\nbackground-repeat: no-repeat; /* Do not repeat the icon image */\nwidth: 100%; /* Full-width */\nfont-size: 16px; /* Increase font-size */\npadding: 12px 20px 12px 40px; /* Add some padding */\nborder: 1px solid #ddd; /* Add a grey border */\nmargin-bottom: 12px; /* Add some space below the input */\n}\n\n#myTable {\nborder-collapse: collapse; /* Collapse borders */\nwidth: 100%; /* Full-width */\nborder: 1px solid #ddd; /* Add a grey border */\nfont-size: 18px; /* Increase font-size */\n}\n\n#myTable th, #myTable td {\ntext-align: left; /* Left-align text */\npadding: 12px; /* Add padding */\n}\n\n#myTable tr {\n/* Add a bottom border to all table rows */\nborder-bottom: 1px solid #ddd;\n}\n\n#myTable tr.header, #myTable tr:hover {\n/* Add a grey background color to the table header and on hover */\nbackground-color: #f1f1f1;\n}",
        "<script>\nfunction myFunction() {\n// Declare variables\nvar input, filter, table, tr, td, i, txtValue;\ninput = document.getElementById(\"myInput\");\nfilter = input.value.toUpperCase();\ntable = document.getElementById(\"myTable\");\ntr = table.getElementsByTagName(\"tr\");\n\n// Loop through all table rows, and hide those who don't match the search query\nfor (i = 0; i < tr.length; i++) {\ntd = tr[i].getElementsByTagName(\"td\")[0];\nif (td) {\ntxtValue = td.textContent || td.innerText;\nif (txtValue.toUpperCase().indexOf(filter) > -1) {\ntr[i].style.display = \"\";\n} else {\ntr[i].style.display = \"none\";\n}\n}\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Filter Elements",
      "summary": "Learn how to filter a DIV element based on its class name.\nFilter DIV Elements\nTry it Yourself »\nCreate Filterable DIV Elements\nExample\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Control buttons -->\n<div id=\"myBtnContainer\">\n<button class=\"btn active\" onclick=\"filterSelection('all')\"> Show all</button>\n<button class=\"btn\" onclick=\"filterSelection('cars')\"> Cars</button>\n<button class=\"btn\" onclick=\"filterSelection('animals')\"> Animals</button>\n<button class=\"btn\" onclick=\"filterSelection('fruits')\"> Fruits</button>\n<button class=\"btn\" onclick=\"filterSelection('colors')\"> Colors</button>\n</div>\n\n<!-- The filterable elements. Note that some have multiple class names (this can be used if they belong to multiple categories) -->\n<div class=\"container\">\n<div class=\"filterDiv cars\">BMW</div>\n<div class=\"filterDiv colors fruits\">Orange</div>\n<div class=\"filterDiv cars\">Volvo</div>\n<div class=\"filterDiv colors\">Red</div>\n<div class=\"filterDiv cars\">Ford</div>\n<div class=\"filterDiv colors\">Blue</div>\n<div class=\"filterDiv animals\">Cat</div>\n<div class=\"filterDiv animals\">Dog</div>\n<div class=\"filterDiv fruits\">Melon</div>\n<div class=\"filterDiv fruits animals\">Kiwi</div>\n<div class=\"filterDiv fruits\">Banana</div>\n<div class=\"filterDiv fruits\">Lemon</div>\n<div class=\"filterDiv animals\">Cow</div>\n</div>",
        ".container {\noverflow: hidden;\n}\n\n.filterDiv {\nfloat: left;\nbackground-color: #2196F3;\ncolor: #ffffff;\nwidth: 100px;\nline-height: 100px;\ntext-align: center;\nmargin: 2px;\ndisplay: none; /* Hidden by default */\n}\n\n/* The \"show\" class is added to the filtered elements */\n.show {\ndisplay: block;\n}\n\n/* Style the buttons */\n.btn {\nborder: none;\noutline: none;\npadding: 12px 16px;\nbackground-color: #f1f1f1;\ncursor: pointer;\n}\n\n/* Add a light grey background on mouse-over */\n.btn:hover {\nbackground-color: #ddd;\n}\n\n/* Add a dark background to the active button */\n.btn.active {\nbackground-color: #666;\ncolor: white;\n}",
        "filterSelection(\"all\")\nfunction filterSelection(c) {\nvar x, i;\nx = document.getElementsByClassName(\"filterDiv\");\nif (c == \"all\") c = \"\";\n// Add the \"show\" class (display:block) to the filtered elements, and remove the \"show\" class from the elements that are not selected\nfor (i = 0; i < x.length; i++) {\nw3RemoveClass(x[i], \"show\");\nif (x[i].className.indexOf(c) > -1) w3AddClass(x[i], \"show\");\n}\n}\n\n// Show filtered elements\nfunction w3AddClass(element, name) {\nvar i, arr1, arr2;\narr1 = element.className.split(\" \");\narr2 = name.split(\" \");\nfor (i = 0; i < arr2.length; i++) {\nif (arr1.indexOf(arr2[i]) == -1) {\nelement.className += \" \" + arr2[i];\n}\n}\n}\n\n// Hide elements that are not selected\nfunction w3RemoveClass(element, name) {\nvar i, arr1, arr2;\narr1 = element.className.split(\" \");\narr2 = name.split(\" \");\nfor (i = 0; i < arr2.length; i++) {\nwhile (arr1.indexOf(arr2[i]) > -1) {\narr1.splice(arr1.indexOf(arr2[i]), 1);\n}\n}\nelement.className = arr1.join(\" \");\n}\n\n// Add active class to the current control button (highlight it)\nvar btnContainer = document.getElementById(\"myBtnContainer\");\nvar btns = btnContainer.getElementsByClassName(\"btn\");\nfor (var i = 0; i < btns.length; i++) {\nbtns[i].addEventListener(\"click\", function() {\nvar current = document.getElementsByClassName(\"active\");\ncurrent[0].className = current[0].className.replace(\" active\", \"\");\nthis.className += \" active\";\n});\n}"
      ]
    },
    {
      "title": "How TO - Search/Filter Dropdown",
      "summary": "Learn how to search for items in a dropdown menu with CSS and JavaScript.\nFilter Dropdown Menu\nCreate a Clickable Dropdown\nCreate a dropdown menu that appears when the user clicks on a button.\nExample\nExample Explained\nUse any element to open the dropdown menu, e.g. a <button>, <a> or <p> element.\nUse a container element (like <div>) to create the dropdown menu and add the dropdown links inside it.\nWrap a <div> element around the button and the <div> to position the dropdown menu correctly with CSS.\nExample\nExample Explained\nWe have styled the dropdown button with a background-color, padding, hover effect, etc.\nThe .dropdown class uses position:relative, which is needed when we want the dropdown content to be placed right below the dropdown button (using position:absolute).\nThe .dropdown-content class holds the actual dropdown menu. It is hidden by default, and will be displayed on hover (see below). Note the min-width is set to 230px. Feel free to change this. Tip: If you want the width of the dropdown content to be as wide as the dropdown button, set the width to 100% (and overflow:auto to enable scroll on small screens).\nThe search field (#myInput) is styled to fit inside the dropdown menu. We have added a search icon, which is placed to the left inside the search field to indicate that this is actually a search field.\nREMOVE ADS\nExample\nTip: Go to our CSS Dropdowns Tutorial to learn more about dropdowns.\nTip: Go to our Hoverable Dropdowns to learn more about hoverable dropdowns",
      "examples": [
        "<div class=\"dropdown\">\n<button onclick=\"myFunction()\" class=\"dropbtn\">Dropdown</button>\n<div id=\"myDropdown\" class=\"dropdown-content\">\n<input type=\"text\" placeholder=\"Search..\" id=\"myInput\" onkeyup=\"filterFunction()\">\n<a href=\"#about\">About</a>\n<a href=\"#base\">Base</a>\n<a href=\"#blog\">Blog</a>\n<a href=\"#contact\">Contact</a>\n<a href=\"#custom\">Custom</a>\n<a href=\"#support\">Support</a>\n<a href=\"#tools\">Tools</a>\n</div>\n</div>",
        "/* Dropdown Button */\n.dropbtn {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 16px;\nfont-size: 16px;\nborder: none;\ncursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n.dropbtn:hover, .dropbtn:focus {\nbackground-color: #3e8e41;\n}\n\n/* The search field */\n#myInput {\nbox-sizing: border-box;\nbackground-image: url('searchicon.png');\nbackground-position: 14px 12px;\nbackground-repeat: no-repeat;\nfont-size: 16px;\npadding: 14px 20px 12px 45px;\nborder: none;\nborder-bottom: 1px solid #ddd;\n}\n\n/* The search field when it gets focus/clicked on */\n#myInput:focus {outline: 3px solid #ddd;}\n\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\nposition: relative;\ndisplay: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\ndisplay: none;\nposition: absolute;\nbackground-color: #f6f6f6;\nmin-width: 230px;\nborder: 1px solid #ddd;\nz-index: 1;\n}\n\n/* Links inside the dropdown */\n.dropdown-content a {\ncolor: black;\npadding: 12px 16px;\ntext-decoration: none;\ndisplay: block;\n}\n\n/* Change color of dropdown links on hover */\n.dropdown-content a:hover {background-color: #f1f1f1}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n.show {display:block;}",
        "/* When the user clicks on the button,\ntoggle between hiding and showing the dropdown content */\nfunction myFunction() {\ndocument.getElementById(\"myDropdown\").classList.toggle(\"show\");\n}\n\nfunction filterFunction() {\nvar input, filter, ul, li, a, i;\ninput = document.getElementById(\"myInput\");\nfilter = input.value.toUpperCase();\ndiv = document.getElementById(\"myDropdown\");\na = div.getElementsByTagName(\"a\");\nfor (i = 0; i < a.length; i++) {\ntxtValue = a[i].textContent || a[i].innerText;\nif (txtValue.toUpperCase().indexOf(filter) > -1) {\na[i].style.display = \"\";\n} else {\na[i].style.display = \"none\";\n}\n}\n}",
        ".dropdown",
        "position:relative",
        "position:absolute",
        ".dropdown-content",
        "min-width",
        "width",
        "overflow:auto"
      ]
    },
    {
      "title": "How TO - Sort a List",
      "summary": "Learn how to sort an HTML list, using JavaScript.\nClick the button to sort the list alphabetically:\nOslo\nStockholm\nHelsinki\nBerlin\nRome\nMadrid\nTry it Yourself »\nCreating a Sort Function\nExample\nREMOVE ADS\nSorting Ascending and Descending\nThe first time you click the button, the sorting direction is ascending (A to Z).\nClick again, and the sorting direction will be descending (Z to A):\nOslo\nStockholm\nHelsinki\nBerlin\nRome\nMadrid\nExample\nSort List Numerically\nExample",
      "examples": [
        "<ul id=\"id01\">\n<li>Oslo</li>\n<li>Stockholm</li>\n<li>Helsinki</li>\n<li>Berlin</li>\n<li>Rome</li>\n<li>Madrid</li>\n</ul>\n\n<script>\nfunction sortList() {\nvar list, i, switching, b, shouldSwitch;\nlist = document.getElementById(\"id01\");\nswitching = true;\n/* Make a loop that will continue until\nno switching has been done: */\nwhile (switching) {\n// Start by saying: no switching is done:\nswitching = false;\nb = list.getElementsByTagName(\"LI\");\n// Loop through all list items:\nfor (i = 0; i < (b.length - 1); i++) {\n// Start by saying there should be no switching:\nshouldSwitch = false;\n/* Check if the next item should\nswitch place with the current item: */\nif (b[i].innerHTML.toLowerCase() > b[i + 1].innerHTML.toLowerCase()) {\n/* If next item is alphabetically lower than current item,\nmark as a switch and break the loop: */\nshouldSwitch = true;\nbreak;\n}\n}\nif (shouldSwitch) {\n/* If a switch has been marked, make the switch\nand mark the switch as done: */\nb[i].parentNode.insertBefore(b[i + 1], b[i]);\nswitching = true;\n}\n}\n}\n</script>",
        "<ul id=\"id01\">\n<li>Oslo</li>\n<li>Stockholm</li>\n<li>Helsinki</li>\n<li>Berlin</li>\n<li>Rome</li>\n<li>Madrid</li>\n</ul>\n\n<script>\nfunction sortListDir() {\nvar list, i, switching, b, shouldSwitch, dir, switchcount = 0;\nlist = document.getElementById(\"id01\");\nswitching = true;\n// Set the sorting direction to ascending:\ndir = \"asc\";\n// Make a loop that will continue until no switching has been done:\nwhile (switching) {\n// Start by saying: no switching is done:\nswitching = false;\nb = list.getElementsByTagName(\"LI\");\n// Loop through all list-items:\nfor (i = 0; i < (b.length - 1); i++) {\n// Start by saying there should be no switching:\nshouldSwitch = false;\n/* Check if the next item should switch place with the current item,\nbased on the sorting direction (asc or desc): */\nif (dir == \"asc\") {\nif (b[i].innerHTML.toLowerCase() > b[i + 1].innerHTML.toLowerCase()) {\n/* If next item is alphabetically lower than current item,\nmark as a switch and break the loop: */\nshouldSwitch = true;\nbreak;\n}\n} else if (dir == \"desc\") {\nif (b[i].innerHTML.toLowerCase() < b[i + 1].innerHTML.toLowerCase()) {\n/* If next item is alphabetically higher than current item,\nmark as a switch and break the loop: */\nshouldSwitch= true;\nbreak;\n}\n}\n}\nif (shouldSwitch) {\n/* If a switch has been marked, make the switch\nand mark that a switch has been done: */\nb[i].parentNode.insertBefore(b[i + 1], b[i]);\nswitching = true;\n// Each time a switch is done, increase switchcount by 1:\nswitchcount ++;\n} else {\n/* If no switching has been done AND the direction is \"asc\",\nset the direction to \"desc\" and run the while loop again. */\nif (switchcount == 0 && dir == \"asc\") {\ndir = \"desc\";\nswitching = true;\n}\n}\n}\n}\n</script>",
        "if (Number(b[i].innerHTML) > Number(b[i + 1].innerHTML)) {\nshouldSwitch =  true;\nbreak;\n}"
      ]
    },
    {
      "title": "How TO - Sort a Table",
      "summary": "Learn how to sort an HTML table, using JavaScript.\nClick the button to sort the table alphabetically, based on customer name:\nTry it Yourself »\nCreating a Sort Function\nExample\nREMOVE ADS\nSort Table by Clicking the Headers\nClick the headers to sort the table.\nClick \"Name\" to sort by names, and \"Country\" to sort by country.\nThe first time you click, the sorting direction is ascending (A to Z).\nClick again, and the sorting direction will be descending (Z to A):\nExample\nSort Table Numerically\nExample",
      "examples": [
        "function sortTable() {\nvar table, rows, switching, i, x, y, shouldSwitch;\ntable = document.getElementById(\"myTable\");\nswitching = true;\n/* Make a loop that will continue until\nno switching has been done: */\nwhile (switching) {\n// Start by saying: no switching is done:\nswitching = false;\nrows = table.rows;\n/* Loop through all table rows (except the\nfirst, which contains table headers): */\nfor (i = 1; i < (rows.length - 1); i++) {\n// Start by saying there should be no switching:\nshouldSwitch = false;\n/* Get the two elements you want to compare,\none from current row and one from the next: */\nx = rows[i].getElementsByTagName(\"TD\")[0];\ny = rows[i + 1].getElementsByTagName(\"TD\")[0];\n// Check if the two rows should switch place:\nif (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n// If so, mark as a switch and break the loop:\nshouldSwitch = true;\nbreak;\n}\n}\nif (shouldSwitch) {\n/* If a switch has been marked, make the switch\nand mark that a switch has been done: */\nrows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\nswitching = true;\n}\n}\n}",
        "<table id=\"myTable2\">\n<tr>\n<!--When a header is clicked, run the sortTable function, with a parameter,\n0 for sorting by names, 1 for sorting by country: -->\n<th onclick=\"sortTable(0)\">Name</th>\n<th onclick=\"sortTable(1)\">Country</th>\n</tr>\n...\n\n<script>\nfunction sortTable(n) {\nvar table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;\ntable = document.getElementById(\"myTable2\");\nswitching = true;\n// Set the sorting direction to ascending:\ndir = \"asc\";\n/* Make a loop that will continue until\nno switching has been done: */\nwhile (switching) {\n// Start by saying: no switching is done:\nswitching = false;\nrows = table.rows;\n/* Loop through all table rows (except the\nfirst, which contains table headers): */\nfor (i = 1; i < (rows.length - 1); i++) {\n// Start by saying there should be no switching:\nshouldSwitch = false;\n/* Get the two elements you want to compare,\none from current row and one from the next: */\nx = rows[i].getElementsByTagName(\"TD\")[n];\ny = rows[i + 1].getElementsByTagName(\"TD\")[n];\n/* Check if the two rows should switch place,\nbased on the direction, asc or desc: */\nif (dir == \"asc\") {\nif (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n// If so, mark as a switch and break the loop:\nshouldSwitch = true;\nbreak;\n}\n} else if (dir == \"desc\") {\nif (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n// If so, mark as a switch and break the loop:\nshouldSwitch = true;\nbreak;\n}\n}\n}\nif (shouldSwitch) {\n/* If a switch has been marked, make the switch\nand mark that a switch has been done: */\nrows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\nswitching = true;\n// Each time a switch is done, increase this count by 1:\nswitchcount ++;\n} else {\n/* If no switching has been done AND the direction is \"asc\",\nset the direction to \"desc\" and run the while loop again. */\nif (switchcount == 0 && dir == \"asc\") {\ndir = \"desc\";\nswitching = true;\n}\n}\n}\n}\n</script>",
        "if (Number(x.innerHTML) > Number(y.innerHTML)) {\nshouldSwitch = true;\nbreak;\n}"
      ]
    },
    {
      "title": "How TO - Zebra Striped Table",
      "summary": "Learn how to create a zebra striped table with CSS.\nZebra Striping a Table\nTo create a zebra-striped table, use the nth-child() selector and add a background-color to all even (or odd) table rows:\nExample\nGo to our CSS Tables Tutorial to learn more about how to style tables.\nGo to our CSS Selector Reference to learn more about the nth-child() selector.",
      "examples": [
        "tr:nth-child(even) {\nbackground-color: #f2f2f2;\n}",
        "nth-child()"
      ]
    },
    {
      "title": "How TO - Center Tables",
      "summary": "Learn how to center a table with CSS.\nCentered table:\nHow To Center Tables\nExample\nTo center a table, set left and right margin to auto:\nExample\nNote that a table cannot be centered if the width is set to 100% (full-width).\nTip: Go to our CSS Tables Tutorial to learn more about how to style tables.",
      "examples": [
        "<table class=\"center\">\n<tr>\n<th>Firstname</th>\n<th>Lastname</th>\n<th>Age</th>\n</tr>\n<tr>\n<td>Jill</td>\n<td>Smith</td>\n<td>50</td>\n</tr>\n<tr>\n<td>Eve</td>\n<td>Jackson</td>\n<td>94</td>\n</tr>\n<tr>\n<td>John</td>\n<td>Doe</td>\n<td>80</td>\n</tr>\n</table>",
        ".center {\nmargin-left: auto;\nmargin-right: auto;\n}",
        "auto"
      ]
    },
    {
      "title": "How TO - Full-width Table",
      "summary": "Learn how to create a full-width table with CSS.\nA table that does not have a set width:\nA full-width table:\nHow To Create a Full-width Table\nTo create a full-width table, use width: 100%:\nExample\nTip: Go to our CSS Tables Tutorial to learn more about how to style tables.",
      "examples": [
        "table {\nwidth: 100%;\n}",
        "width: 100%"
      ]
    },
    {
      "title": "How TO - Nested Table",
      "summary": "Learn how to create a nested table (a table inside a table).\nNested Table\nA table inside another table:\nExample\nTip: Go to our HTML Table Tutorial to learn more about tables.",
      "examples": [
        "<table>\n<tr>\n<td>Cell</td>\n<td>Nested Table\n<table>\n<tr>\n<td>Cell 1</td>\n</tr>\n<tr>\n<td>Cell 2</td>\n</tr>\n<tr>\n<td>Cell 3</td>\n</tr>\n<tr>\n<td>Cell 4</td>\n</tr>\n</table>\n</td>\n</tr>\n</table>"
      ]
    },
    {
      "title": "How TO - Side-by-side Tables",
      "summary": "Learn how to create side-by-side tables with CSS.\nHow To Place Tables Side by Side\nHow to create side-by-side tables with the CSS float property:\nExample\nHow to create side-by-side tables with the CSS flex property:\nExample\nNote: Flexbox is not supported in Internet Explorer 10 and earlier versions. It is up to you if you want to use floats or flex. However, if you need support for IE10 and down, you should use float.\nTip: To learn more about the Flexible Box Layout Module, read our CSS Flexbox chapter.\nREMOVE ADS\nAdd Responsiveness\nThe example above will not look good on a mobile device, as two columns will take up too much space of the page. To create a responsive table, that should go from a two-column layout to a full-width layout on mobile devices, add the following media queries:\nExample\nTip: Go to our CSS Tables Tutorial to learn more about how to style tables.\nTip: Go to our CSS Float Tutorial to learn more about the float property.\nTip: Go to our CSS Flexbox Tutorial to learn more about the flex property.",
      "examples": [
        "* {\nbox-sizing: border-box;\n}\n\n/* Create a two-column layout */\n.column {\nfloat: left;\nwidth: 50%;\npadding: 5px;\n}\n\n/* Clearfix (clear floats) */\n.row::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}",
        "* {\nbox-sizing: border-box;\n}\n\n.row {\ndisplay: flex;\n}\n\n.column {\nflex: 50%;\npadding: 5px;\n}",
        "/* Responsive layout - makes the two columns stack on top of each other instead of next to each other on screens that are smaller than 600 px */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}",
        "float",
        "flex"
      ]
    },
    {
      "title": "How TO - Responsive Tables",
      "summary": "Learn how to create a responsive table.\nResponsive Tables\nA responsive table will display a horizontal scroll bar if the screen is too small to display the full content. Resize the browser window to see the effect:\nTo create a responsive table, add a container element with overflow-x:auto around the <table>:\nExample\nNote: In OS X Lion (on Mac), scrollbars are hidden by default and only shown when being used (even though \"overflow:scroll\" or auto is set).\nTip: Go to our CSS Tables Tutorial to learn more about how to style tables.",
      "examples": [
        "<div style=\"overflow-x:auto;\">\n<table>\n...\n</table>\n</div>",
        "overflow-x:auto"
      ]
    },
    {
      "title": "How TO - Comparison Table",
      "summary": "Learn how to create a comparison table with CSS.\nTry it Yourself »\nHow To Create a Comparison Table\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Font Awesome Icon Library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<table>\n<tr>\n<th style=\"width:50%\">Features</th>\n<th>Basic</th>\n<th>Pro</th>\n</tr>\n<tr>\n<td>Sample text</td>\n<td><i class=\"fa fa-remove\"></i></td>\n<td><i class=\"fa fa-check\"></i></td>\n</tr>\n<tr>\n<td>Sample text</td>\n<td><i class=\"fa fa-check\"></i></td>\n<td><i class=\"fa fa-check\"></i></td>\n</tr>\n</table>",
        "/* Style the table */\ntable {\nborder-collapse: collapse;\nborder-spacing: 0;\nwidth: 100%;\nborder: 1px solid #ddd;\n}\n\n/* Style table headers and table data */\nth, td {\ntext-align: center;\npadding: 16px;\n}\n\nth:first-child, td:first-child {\ntext-align: left;\n}\n\n/* Zebra-striped table rows */\ntr:nth-child(even) {\nbackground-color: #f2f2f2\n}\n\n.fa-check {\ncolor: green;\n}\n\n.fa-remove {\ncolor: red;\n}"
      ]
    },
    {
      "title": "How TO - Fullscreen Video",
      "summary": "Learn how to create a full screen video background with CSS.\nFullscreen Video Background\nLearn how to create a full screen video background that covers the entire browser window:\nHow To Create a Fullscreen Video\nExample\nExample\nREMOVE ADS\nOptionally, you can add JavaScript to pause/play the video with a click of a button:\nExample",
      "examples": [
        "<!-- The video -->\n<video autoplay muted loop id=\"myVideo\">\n<source src=\"rain.mp4\" type=\"video/mp4\">\n</video>\n\n<!-- Optional: some overlay text to describe the video -->\n<div class=\"content\">\n<h1>Heading</h1>\n<p>Lorem ipsum...</p>\n<!-- Use a button to pause/play the video with JavaScript -->\n<button id=\"myBtn\" onclick=\"myFunction()\">Pause</button>\n</div>",
        "/* Style the video: 100% width and height to cover the entire window */\n#myVideo {\nposition: fixed;\nright: 0;\nbottom: 0;\nmin-width: 100%;\nmin-height: 100%;\n}\n\n/* Add some content at the bottom of the video/page */\n.content {\nposition: fixed;\nbottom: 0;\nbackground: rgba(0, 0, 0, 0.5);\ncolor: #f1f1f1;\nwidth: 100%;\npadding: 20px;\n}\n\n/* Style the button used to pause/play the video */\n#myBtn {\nwidth: 200px;\nfont-size: 18px;\npadding: 10px;\nborder: none;\nbackground: #000;\ncolor: #fff;\ncursor: pointer;\n}\n\n#myBtn:hover {\nbackground: #ddd;\ncolor: black;\n}",
        "<script>\n// Get the video\nvar video = document.getElementById(\"myVideo\");\n\n// Get the button\nvar btn = document.getElementById(\"myBtn\");\n\n// Pause and play the video, and change the button text\nfunction myFunction() {\nif (video.paused) {\nvideo.play();\nbtn.innerHTML = \"Pause\";\n} else {\nvideo.pause();\nbtn.innerHTML = \"Play\";\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - CSS/JS Modal",
      "summary": "Learn how to create a Modal Box with CSS and JavaScript.\nHow To Create a Modal Box\nA modal is a dialog box/popup window that is displayed on top of the current page:\nModal Header\nHello World!\nModals are awesome!\nModal Footer\nExample\nExample\nExample\nREMOVE ADS\nAdd Header and Footer\nAdd a class for modal-header, modal-body and modal-footer:\nExample\nStyle the modal header, body and footer, and add animation (slide in the modal):\nExample\nBottom Modal (\"Bottom sheets\")\nAn example on how to create a full-width modal that slides in from the bottom:\nExample\nTip: Also check out Modal Images and Lightbox.",
      "examples": [
        "<!-- Trigger/Open The Modal -->\n<button id=\"myBtn\">Open Modal</button>\n\n<!-- The Modal -->\n<div id=\"myModal\" class=\"modal\">\n\n<!-- Modal content -->\n<div class=\"modal-content\">\n<span class=\"close\">&times;</span>\n<p>Some text in the Modal..</p>\n</div>\n\n</div>",
        "/* The Modal (background) */\n.modal {\ndisplay: none; /* Hidden by default */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Sit on top */\nleft: 0;\ntop: 0;\nwidth: 100%; /* Full width */\nheight: 100%; /* Full height */\noverflow: auto; /* Enable scroll if needed */\nbackground-color: rgb(0,0,0); /* Fallback color */\nbackground-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content/Box */\n.modal-content {\nbackground-color: #fefefe;\nmargin: 15% auto; /* 15% from the top and centered */\npadding: 20px;\nborder: 1px solid #888;\nwidth: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button */\n.close {\ncolor: #aaa;\nfloat: right;\nfont-size: 28px;\nfont-weight: bold;\n}\n\n.close:hover,\n.close:focus {\ncolor: black;\ntext-decoration: none;\ncursor: pointer;\n}",
        "// Get the modal\nvar modal = document.getElementById(\"myModal\");\n\n// Get the button that opens the modal\nvar btn = document.getElementById(\"myBtn\");\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks on the button, open the modal\nbtn.onclick = function() {\nmodal.style.display = \"block\";\n}\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function() {\nmodal.style.display = \"none\";\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\nif (event.target == modal) {\nmodal.style.display = \"none\";\n}\n}",
        "<!-- Modal content -->\n<div class=\"modal-content\">\n<div class=\"modal-header\">\n<span class=\"close\">&times;</span>\n<h2>Modal Header</h2>\n</div>\n<div class=\"modal-body\">\n<p>Some text in the Modal Body</p>\n<p>Some other text...</p>\n</div>\n<div class=\"modal-footer\">\n<h3>Modal Footer</h3>\n</div>\n</div>",
        "/* Modal Header */\n.modal-header {\npadding: 2px 16px;\nbackground-color: #5cb85c;\ncolor: white;\n}\n\n/* Modal Body */\n.modal-body {padding: 2px 16px;}\n\n/* Modal Footer */\n.modal-footer {\npadding: 2px 16px;\nbackground-color: #5cb85c;\ncolor: white;\n}\n\n/* Modal Content */\n.modal-content {\nposition: relative;\nbackground-color: #fefefe;\nmargin: auto;\npadding: 0;\nborder: 1px solid #888;\nwidth: 80%;\nbox-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\nanimation-name: animatetop;\nanimation-duration: 0.4s\n}\n\n/* Add Animation */\n@keyframes animatetop {\nfrom {top: -300px; opacity: 0}\nto {top: 0; opacity: 1}\n}"
      ]
    },
    {
      "title": "How TO - Delete Modal Delete Account",
      "summary": "Learn how to create a delete confirmation modal with CSS.\nClick on the button to open the modal:\nAre you sure you want to delete your account?\nTry it Yourself »\nHow To Create a Delete Modal\nExample\nREMOVE ADS\nExample\nTip: You can also use the following javascript to close the modal by clicking outside of the modal content (and not just by using the \"x\" or \"cancel\" button to close it):\nExample",
      "examples": [
        "<button onclick=\"document.getElementById('id01').style.display='block'\">Open Modal</button>\n\n<div id=\"id01\" class=\"modal\">\n<span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n<form class=\"modal-content\" action=\"/action_page.php\">\n<div class=\"container\">\n<h1>Delete Account</h1>\n<p>Are you sure you want to delete your account?</p>\n\n<div class=\"clearfix\">\n<button type=\"button\" class=\"cancelbtn\">Cancel</button>\n<button type=\"button\" class=\"deletebtn\">Delete</button>\n</div>\n</div>\n</form>\n</div>",
        "* {box-sizing: border-box}\n\n/* Set a style for all buttons */\nbutton {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 14px 20px;\nmargin: 8px 0;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nopacity: 0.9;\n}\n\nbutton:hover {\nopacity:1;\n}\n\n/* Float cancel and delete buttons and add an equal width */\n.cancelbtn, .deletebtn {\nfloat: left;\nwidth: 50%;\n}\n\n/* Add a color to the cancel button */\n.cancelbtn {\nbackground-color: #ccc;\ncolor: black;\n}\n\n/* Add a color to the delete button */\n.deletebtn {\nbackground-color: #f44336;\n}\n\n/* Add padding and center-align text to the container */\n.container {\npadding: 16px;\ntext-align: center;\n}\n\n/* The Modal (background) */\n.modal {\ndisplay: none; /* Hidden by default */\nposition: fixed; /* Stay in place */\nz-index: 1; /* Sit on top */\nleft: 0;\ntop: 0;\nwidth: 100%; /* Full width */\nheight: 100%; /* Full height */\noverflow: auto; /* Enable scroll if needed */\nbackground-color: #474e5d;\npadding-top: 50px;\n}\n\n/* Modal Content/Box */\n.modal-content {\nbackground-color: #fefefe;\nmargin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\nborder: 1px solid #888;\nwidth: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* Style the horizontal ruler */\nhr {\nborder: 1px solid #f1f1f1;\nmargin-bottom: 25px;\n}\n\n/* The Modal Close Button (x) */\n.close {\nposition: absolute;\nright: 35px;\ntop: 15px;\nfont-size: 40px;\nfont-weight: bold;\ncolor: #f1f1f1;\n}\n\n.close:hover,\n.close:focus {\ncolor: #f44336;\ncursor: pointer;\n}\n\n/* Clear floats */\n.clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n/* Change styles for cancel button and delete button on extra small screens */\n@media screen and (max-width: 300px) {\n.cancelbtn, .deletebtn {\nwidth: 100%;\n}\n}",
        "<script>\n// Get the modal\nvar modal = document.getElementById('id01');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\nif (event.target == modal) {\nmodal.style.display = \"none\";\n}\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Timeline",
      "summary": "Learn how to create a responsive \"timeline\" with CSS.\nTimeline\n2017\nLorem ipsum dolor sit amet, quo ei simul congue exerci, ad nec admodum perfecto mnesarchum, vim ea mazim fierent detracto. Ea quis iuvaret expetendis his, te elit voluptua dignissim per, habeo iusto primis ea eam.\n2016\nLorem ipsum dolor sit amet, quo ei simul congue exerci.\n2015\nLorem ipsum dolor sit amet, quo ei simul congue exerci, ad nec admodum perfecto perfecto perfecti perfect!\nTry it Yourself »\nHow To Create a Timeline\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"timeline\">\n<div class=\"container left\">\n<div class=\"content\">\n<h2>2017</h2>\n<p>Lorem ipsum..</p>\n</div>\n</div>\n<div class=\"container right\">\n<div class=\"content\">\n<h2>2016</h2>\n<p>Lorem ipsum..</p>\n</div>\n</div>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\n/* Set a background color */\nbody {\nbackground-color: #474e5d;\nfont-family: Helvetica, sans-serif;\n}\n\n/* The actual timeline (the vertical ruler) */\n.timeline {\nposition: relative;\nmax-width: 1200px;\nmargin: 0 auto;\n}\n\n/* The actual timeline (the vertical ruler) */\n.timeline::after {\ncontent: '';\nposition: absolute;\nwidth: 6px;\nbackground-color: white;\ntop: 0;\nbottom: 0;\nleft: 50%;\nmargin-left: -3px;\n}\n\n/* Container around content */\n.container {\npadding: 10px 40px;\nposition: relative;\nbackground-color: inherit;\nwidth: 50%;\n}\n\n/* The circles on the timeline */\n.container::after {\ncontent: '';\nposition: absolute;\nwidth: 25px;\nheight: 25px;\nright: -17px;\nbackground-color: white;\nborder: 4px solid #FF9F55;\ntop: 15px;\nborder-radius: 50%;\nz-index: 1;\n}\n\n/* Place the container to the left */\n.left {\nleft: 0;\n}\n\n/* Place the container to the right */\n.right {\nleft: 50%;\n}\n\n/* Add arrows to the left container (pointing right) */\n.left::before {\ncontent: \" \";\nheight: 0;\nposition: absolute;\ntop: 22px;\nwidth: 0;\nz-index: 1;\nright: 30px;\nborder: medium solid white;\nborder-width: 10px 0 10px 10px;\nborder-color: transparent transparent transparent white;\n}\n\n/* Add arrows to the right container (pointing left) */\n.right::before {\ncontent: \" \";\nheight: 0;\nposition: absolute;\ntop: 22px;\nwidth: 0;\nz-index: 1;\nleft: 30px;\nborder: medium solid white;\nborder-width: 10px 10px 10px 0;\nborder-color: transparent white transparent transparent;\n}\n\n/* Fix the circle for containers on the right side */\n.right::after {\nleft: -16px;\n}\n\n/* The actual content */\n.content {\npadding: 20px 30px;\nbackground-color: white;\nposition: relative;\nborder-radius: 6px;\n}\n\n/* Media queries - Responsive timeline on screens less than 600px wide */\n@media screen and (max-width: 600px) {\n/* Place the timelime to the left */\n.timeline::after {\nleft: 31px;\n}\n\n/* Full-width containers */\n.container {\nwidth: 100%;\npadding-left: 70px;\npadding-right: 25px;\n}\n\n/* Make sure that all arrows are pointing leftwards */\n.container::before {\nleft: 60px;\nborder: medium solid white;\nborder-width: 10px 10px 10px 0;\nborder-color: transparent white transparent transparent;\n}\n\n/* Make sure all circles are at the same spot */\n.left::after, .right::after {\nleft: 15px;\n}\n\n/* Make all right containers behave like the left ones */\n.right {\nleft: 0%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Scroll Indicator",
      "summary": "Learn how to create a scroll indicator with CSS and JavaScript.\nTry it Yourself »\nHow To Create a Scroll Indicator\nExample\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"header\">\n<h2>Scroll Indicator</h2>\n<div class=\"progress-container\">\n<div class=\"progress-bar\" id=\"myBar\"></div>\n</div>\n</div>\n\n<div>content...</div>",
        "/* Style the header: fixed position (always stay at the top) */\n.header {\nposition: fixed;\ntop: 0;\nz-index: 1;\nwidth: 100%;\nbackground-color: #f1f1f1;\n}\n\n/* The progress container (grey background) */\n.progress-container {\nwidth: 100%;\nheight: 8px;\nbackground: #ccc;\n}\n\n/* The progress bar (scroll indicator) */\n.progress-bar {\nheight: 8px;\nbackground: #04AA6D;\nwidth: 0%;\n}",
        "// When the user scrolls the page, execute myFunction\nwindow.onscroll = function() {myFunction()};\n\nfunction myFunction() {\nvar winScroll = document.body.scrollTop || document.documentElement.scrollTop;\nvar height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\nvar scrolled = (winScroll / height) * 100;\ndocument.getElementById(\"myBar\").style.width = scrolled + \"%\";\n}"
      ]
    },
    {
      "title": "How TO - JavaScript Progress Bar",
      "summary": "Learn how to create a progress bar using JavaScript.\nCreating a Progress Bar\nExample\nExample\nCreate a Dynamic Progress Bar (animated) Using JavaScript:\nExample\nREMOVE ADS\nAdd Labels\nIf you want to add labels to indicate how far the user is in the process, add a new element inside (or outside) the progress bar:\nExample\nExample\nIf you want to dynamically update the text inside the label to the same value of the width of the progress bar, add the following:\nExample",
      "examples": [
        "<div id=\"myProgress\">\n<div id=\"myBar\"></div>\n</div>",
        "#myProgress {\nwidth: 100%;\nbackground-color: grey;\n}\n\n#myBar {\nwidth: 1%;\nheight: 30px;\nbackground-color: green;\n}",
        "var i = 0;\nfunction move() {\nif (i == 0) {\ni = 1;\nvar elem = document.getElementById(\"myBar\");\nvar width = 1;\nvar id = setInterval(frame, 10);\nfunction frame() {\nif (width >= 100) {\nclearInterval(id);\ni = 0;\n} else {\nwidth++;\nelem.style.width = width + \"%\";\n}\n}\n}\n}",
        "<div id=\"myProgress\">\n<div id=\"myBar\">10%</div>\n</div>",
        "#myBar {\nwidth: 10%;\nheight: 30px;\nbackground-color: #04AA6D;\ntext-align: center; /* To center it horizontally (if you want) */\nline-height: 30px; /* To center it vertically */\ncolor: white;\n}",
        "var i = 0;\nfunction move() {\nif (i == 0) {\ni = 1;\nvar elem = document.getElementById(\"myBar\");\nvar width = 10;\nvar id = setInterval(frame, 10);\nfunction frame() {\nif (width >= 100) {\nclearInterval(id);\ni = 0;\n} else {\nwidth++;\nelem.style.width = width + \"%\";\nelem.innerHTML = width + \"%\";\n}\n}\n}\n}"
      ]
    },
    {
      "title": "How TO - CSS Skill Bar My Skills",
      "summary": "Learn how to create a skill bar with CSS.\nA \"skill bar\" is often used in online CV's/resumes to display your skills in different subjects:\nHTML\nCSS\nJavaScript\nPHP\nTry it Yourself »\nHow To Create a Skill Bar\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<p>HTML</p>\n<div class=\"container\">\n<div class=\"skills html\">90%</div>\n</div>\n\n<p>CSS</p>\n<div class=\"container\">\n<div class=\"skills css\">80%</div>\n</div>\n\n<p>JavaScript</p>\n<div class=\"container\">\n<div class=\"skills js\">65%</div>\n</div>\n\n<p>PHP</p>\n<div class=\"container\">\n<div class=\"skills php\">60%</div>\n</div>",
        "/* Make sure that padding behaves as expected */\n* {box-sizing:border-box}\n\n/* Container for skill bars */\n.container {\nwidth: 100%; /* Full width */\nbackground-color: #ddd; /* Grey background */\n}\n\n.skills {\ntext-align: right; /* Right-align text */\npadding-top: 10px; /* Add top padding */\npadding-bottom: 10px; /* Add bottom padding */\ncolor: white; /* White text color */\n}\n\n.html {width: 90%; background-color: #04AA6D;} /* Green */\n.css {width: 80%; background-color: #2196F3;} /* Blue */\n.js {width: 65%; background-color: #f44336;} /* Red */\n.php {width: 60%; background-color: #808080;} /* Dark Grey */"
      ]
    },
    {
      "title": "How TO - Range Sliders",
      "summary": "Learn how to create custom range sliders with CSS and JavaScript.\nTry it Yourself »\nCreating a Range Slider\nExample\nExample\nCreate a dynamic range slider to display the current value, with JavaScript:\nExample\nREMOVE ADS\nRound Slider\nTo create a round slider handle, use the border-radius property. Tip: Set the height of the slider to a different value than the slider thumbs if you want unequal heights (15px vs. 25px in this example):\nExample\nSlider Icon/Image\nTo create a slider handle icon/image, use the background property and insert an image url:\nExample",
      "examples": [
        "<div class=\"slidecontainer\">\n<input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\n</div>",
        ".slidecontainer {\nwidth: 100%; /* Width of the outside container */\n}\n\n/* The slider itself */\n.slider {\n-webkit-appearance: none;  /* Override default CSS styles */\nappearance: none;\nwidth: 100%; /* Full-width */\nheight: 25px; /* Specified height */\nbackground: #d3d3d3; /* Grey background */\noutline: none; /* Remove outline */\nopacity: 0.7; /* Set transparency (for mouse-over effects on hover) */\n-webkit-transition: .2s; /* 0.2 seconds transition on hover */\ntransition: opacity .2s;\n}\n\n/* Mouse-over effects */\n.slider:hover {\nopacity: 1; /* Fully shown on mouse-over */\n}\n\n/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */\n.slider::-webkit-slider-thumb {\n-webkit-appearance: none; /* Override default look */\nappearance: none;\nwidth: 25px; /* Set a specific slider handle width */\nheight: 25px; /* Slider handle height */\nbackground: #04AA6D; /* Green background */\ncursor: pointer; /* Cursor on hover */\n}\n\n.slider::-moz-range-thumb {\nwidth: 25px; /* Set a specific slider handle width */\nheight: 25px; /* Slider handle height */\nbackground: #04AA6D; /* Green background */\ncursor: pointer; /* Cursor on hover */\n}",
        "var slider = document.getElementById(\"myRange\");\nvar output = document.getElementById(\"demo\");\noutput.innerHTML = slider.value; // Display the default slider value\n\n// Update the current slider value (each time you drag the slider handle)\nslider.oninput = function() {\noutput.innerHTML = this.value;\n}",
        ".slider {\n-webkit-appearance: none;\nwidth: 100%;\nheight: 15px;\nborder-radius: 5px;\nbackground: #d3d3d3;\noutline: none;\nopacity: 0.7;\n-webkit-transition: .2s;\ntransition: opacity .2s;\n}\n\n.slider::-webkit-slider-thumb {\n-webkit-appearance: none;\nappearance: none;\nwidth: 25px;\nheight: 25px;\nborder-radius: 50%;\nbackground: #04AA6D;\ncursor: pointer;\n}\n\n.slider::-moz-range-thumb {\nwidth: 25px;\nheight: 25px;\nborder-radius: 50%;\nbackground: #04AA6D;\ncursor: pointer;\n}",
        ".slider::-webkit-slider-thumb {\n-webkit-appearance: none;\nappearance: none;\nwidth: 23px;\nheight: 24px;\nborder: 0;\nbackground: url('contrasticon.png');\ncursor: pointer;\n}\n\n.slider::-moz-range-thumb {\nwidth: 23px;\nheight: 25px;\nborder: 0;\nbackground: url('contrasticon.png');\ncursor: pointer;\n}",
        "border-radius",
        "background"
      ]
    },
    {
      "title": "How TO - Color Picker",
      "summary": "Learn how to create a color picker in HTML.\nColor picker\nYou can use the input type=\"color\" attribute to create a color picker:\nExample\nNote that you have to use hex values inside the value property. The default value is black (#000000) if nothing is used. You can learn more about HEX values in our HTML Colors Tutorial.",
      "examples": [
        "<label for=\"favcolor\">Select your favorite color:</label>\n<input type=\"color\" id=\"favcolor\" value=\"#ff0000\">",
        "input type=\"color\""
      ]
    },
    {
      "title": "How TO - Email Field",
      "summary": "Learn how to create an email field in HTML.\nEmail Field\nYou can use the input type=\"email\" attribute to create an email field:\nExample\nThe input type=\"email\" defines a field for an e-mail address.\nThe input value is automatically validated to ensure it is a properly formatted e-mail address.\nTip: To Learn more about forms and input fields, read our HTML Forms Tutorial.",
      "examples": [
        "<label for=\"email\">Enter your email:</label>\n<input type=\"email\" id=\"email\" name=\"email\">",
        "input type=\"email\""
      ]
    },
    {
      "title": "How TO - Tooltip",
      "summary": "Learn how to create tooltips with CSS.\nHover over the text below:\nTry it Yourself »\nHow To Create Tooltips\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Tooltip Tutorial to learn more about tooltips.\nTip: To create \"clickable\" tooltips, go to our How To Create Popups Tutorial\nTip: Modals are also similar to tooltips. Go to our How To Create Modals Tutorial to learn about modals.",
      "examples": [
        "<div class=\"tooltip\">Hover over me\n<span class=\"tooltiptext\">Tooltip text</span>\n</div>",
        "/* Tooltip container */\n.tooltip {\nposition: relative;\ndisplay: inline-block;\nborder-bottom: 1px dotted black; /* If you want dots under the hoverable text */\n}\n\n/* Tooltip text */\n.tooltip .tooltiptext {\nvisibility: hidden;\nwidth: 120px;\nbackground-color: #555;\ncolor: #fff;\ntext-align: center;\npadding: 5px 0;\nborder-radius: 6px;\n\n/* Position the tooltip text */\nposition: absolute;\nz-index: 1;\nbottom: 125%;\nleft: 50%;\nmargin-left: -60px;\n\n/* Fade in tooltip */\nopacity: 0;\ntransition: opacity 0.3s;\n}\n\n/* Tooltip arrow */\n.tooltip .tooltiptext::after {\ncontent: \"\";\nposition: absolute;\ntop: 100%;\nleft: 50%;\nmargin-left: -5px;\nborder-width: 5px;\nborder-style: solid;\nborder-color: #555 transparent transparent transparent;\n}\n\n/* Show the tooltip text when you mouse over the tooltip container */\n.tooltip:hover .tooltiptext {\nvisibility: visible;\nopacity: 1;\n}"
      ]
    },
    {
      "title": "How TO - Display an Element on Hover",
      "summary": "Learn how to display an element on hover.\nHow To Display an Element on Hover\nExample\nExample\nExample Explained\nThe adjacent sibling selector (+) selects all elements that are the adjacent siblings of a specified element.\nThe word \"adjacent\" means \"immediately following\", and the example above selects all elements with class=\".hide\", that are placed immediately after elements with class=\".myDIV\", on hover.\nGo to our CSS Combinators Tutorial to learn more about adjacent selectors.",
      "examples": [
        "<div class=\"myDIV\">Hover over me.</div>\n<div class=\"hide\">I am shown when someone hovers over the div above.</div>",
        ".hide {\ndisplay: none;\n}\n\n.myDIV:hover + .hide {\ndisplay: block;\ncolor: red;\n}",
        "+",
        "class=\".hide\"",
        "class=\".myDIV"
      ]
    },
    {
      "title": "How TO - Popup",
      "summary": "Learn how to create popups with CSS and JavaScript.\nTry it Yourself »\nHow To Create Popups\nExample\nExample\nREMOVE ADS\nExample\nRelated Pages\nTip: Tooltips are similar to popups. Go to our How To Create Tooltips Tutorial to learn about tooltips.\nTip: Modals are also similar to popups. Go to our How To Create Modals Tutorial to learn about modals.",
      "examples": [
        "<div class=\"popup\" onclick=\"myFunction()\">Click me!\n<span class=\"popuptext\" id=\"myPopup\">Popup text...</span>\n</div>",
        "/* Popup container */\n.popup {\nposition: relative;\ndisplay: inline-block;\ncursor: pointer;\n}\n\n/* The actual popup (appears on top) */\n.popup .popuptext {\nvisibility: hidden;\nwidth: 160px;\nbackground-color: #555;\ncolor: #fff;\ntext-align: center;\nborder-radius: 6px;\npadding: 8px 0;\nposition: absolute;\nz-index: 1;\nbottom: 125%;\nleft: 50%;\nmargin-left: -80px;\n}\n\n/* Popup arrow */\n.popup .popuptext::after {\ncontent: \"\";\nposition: absolute;\ntop: 100%;\nleft: 50%;\nmargin-left: -5px;\nborder-width: 5px;\nborder-style: solid;\nborder-color: #555 transparent transparent transparent;\n}\n\n/* Toggle this class when clicking on the popup container (hide and show the popup) */\n.popup .show {\nvisibility: visible;\n-webkit-animation: fadeIn 1s;\nanimation: fadeIn 1s\n}\n\n/* Add animation (fade in the popup) */\n@-webkit-keyframes fadeIn {\nfrom {opacity: 0;}\nto {opacity: 1;}\n}\n\n@keyframes fadeIn {\nfrom {opacity: 0;}\nto {opacity:1 ;}\n}",
        "<script>\n// When the user clicks on <div>, open the popup\nfunction myFunction() {\nvar popup = document.getElementById(\"myPopup\");\npopup.classList.toggle(\"show\");\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Collapse",
      "summary": "Learn how to create a collapsible section.\nCollapsible\nClick the button to toggle between showing and hiding the collapsible content.\nSome collapsible content. Click the button to toggle between showing and hiding the collapsible content. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nTry it Yourself »\nCreate A Collapsible\nExample\nStyle the accordion:\nExample\nREMOVE ADS\nExample\nAnimated Collapsible (Slide Down)\nTo make an animated collapsible, add max-height: 0, overflow: hidden and a transition for the max-height property, to the panel class.\nThen, use JavaScript to slide down the content by setting a calculated max-height, depending on the panel's height on different screen sizes:\nExample\nAdd Icons\nAdd a symbol to each button to indicate whether the collapsible content is open or closed:\nExample",
      "examples": [
        "<button type=\"button\" class=\"collapsible\">Open Collapsible</button>\n<div class=\"content\">\n<p>Lorem ipsum...</p>\n</div>",
        "/* Style the button that is used to open and close the collapsible content */\n.collapsible {\nbackground-color: #eee;\ncolor: #444;\ncursor: pointer;\npadding: 18px;\nwidth: 100%;\nborder: none;\ntext-align: left;\noutline: none;\nfont-size: 15px;\n}\n\n/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n.active, .collapsible:hover {\nbackground-color: #ccc;\n}\n\n/* Style the collapsible content. Note: hidden by default */\n.content {\npadding: 0 18px;\ndisplay: none;\noverflow: hidden;\nbackground-color: #f1f1f1;\n}",
        "var coll = document.getElementsByClassName(\"collapsible\");\nvar i;\n\nfor (i = 0; i < coll.length; i++) {\ncoll[i].addEventListener(\"click\", function() {\nthis.classList.toggle(\"active\");\nvar content = this.nextElementSibling;\nif (content.style.display === \"block\") {\ncontent.style.display = \"none\";\n} else {\ncontent.style.display = \"block\";\n}\n});\n}",
        "<style>\n.content {\npadding: 0 18px;\nbackground-color: white;\nmax-height: 0;\noverflow: hidden;\ntransition: max-height 0.2s ease-out;\n}\n</style>\n\n<script>\nvar coll = document.getElementsByClassName(\"collapsible\");\nvar i;\n\nfor (i = 0; i < coll.length; i++) {\ncoll[i].addEventListener(\"click\", function() {\nthis.classList.toggle(\"active\");\nvar content = this.nextElementSibling;\nif (content.style.maxHeight){\ncontent.style.maxHeight = null;\n} else {\ncontent.style.maxHeight = content.scrollHeight + \"px\";\n}\n});\n}\n</script>",
        ".collapsible:after {\ncontent: '\\02795'; /* Unicode character for \"plus\" sign (+) */\nfont-size: 13px;\ncolor: white;\nfloat: right;\nmargin-left: 5px;\n}\n\n.active:after {\ncontent: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n}",
        "max-height: 0",
        "overflow: hidden",
        "transition",
        "panel",
        "max-height"
      ]
    },
    {
      "title": "How TO - CSS Calendar",
      "summary": "Learn how to create a Calendar with CSS.\nHow To Create a Calendar Layout\n❮\n❯\nAugust\n2021\nMo\nTu\nWe\nTh\nFr\nSa\nSu\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\nTry it Yourself »\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"month\">\n<ul>\n<li class=\"prev\">&#10094;</li>\n<li class=\"next\">&#10095;</li>\n<li>August<br><span style=\"font-size:18px\">2021</span></li>\n</ul>\n</div>\n\n<ul class=\"weekdays\">\n<li>Mo</li>\n<li>Tu</li>\n<li>We</li>\n<li>Th</li>\n<li>Fr</li>\n<li>Sa</li>\n<li>Su</li>\n</ul>\n\n<ul class=\"days\">\n<li>1</li>\n<li>2</li>\n<li>3</li>\n<li>4</li>\n<li>5</li>\n<li>6</li>\n<li>7</li>\n<li>8</li>\n<li>9</li>\n<li><span class=\"active\">10</span></li>\n<li>11</li>\n...etc\n</ul>",
        "ul {list-style-type: none;}\nbody {font-family: Verdana, sans-serif;}\n\n/* Month header */\n.month {\npadding: 70px 25px;\nwidth: 100%;\nbackground: #1abc9c;\ntext-align: center;\n}\n\n/* Month list */\n.month ul {\nmargin: 0;\npadding: 0;\n}\n\n.month ul li {\ncolor: white;\nfont-size: 20px;\ntext-transform: uppercase;\nletter-spacing: 3px;\n}\n\n/* Previous button inside month header */\n.month .prev {\nfloat: left;\npadding-top: 10px;\n}\n\n/* Next button */\n.month .next {\nfloat: right;\npadding-top: 10px;\n}\n\n/* Weekdays (Mon-Sun) */\n.weekdays {\nmargin: 0;\npadding: 10px 0;\nbackground-color:#ddd;\n}\n\n.weekdays li {\ndisplay: inline-block;\nwidth: 13.6%;\ncolor: #666;\ntext-align: center;\n}\n\n/* Days (1-31) */\n.days {\npadding: 10px 0;\nbackground: #eee;\nmargin: 0;\n}\n\n.days li {\nlist-style-type: none;\ndisplay: inline-block;\nwidth: 13.6%;\ntext-align: center;\nmargin-bottom: 5px;\nfont-size:12px;\ncolor: #777;\n}\n\n/* Highlight the \"current\" day */\n.days li .active {\npadding: 5px;\nbackground: #1abc9c;\ncolor: white !important\n}"
      ]
    },
    {
      "title": "How TO - Include HTML",
      "summary": "Learn how to include HTML snippets in HTML.\nThe HTML\nSave the HTML you want to include in an .html file:\ncontent.html\nInclude the HTML\nIncluding HTML is done by using a w3-include-html attribute:\nExample\nAdd the JavaScript\nHTML includes are done by JavaScript.\nExample\nCall includeHTML() at the bottom of the page:\nExample\nREMOVE ADS\nInclude Many HTML Snippets\nYou can include any number of HTML snippets:\nExample",
      "examples": [
        "<a href=\"howto_google_maps.asp\">Google Maps</a><br>\n<a href=\"howto_css_animate_buttons.asp\">Animated Buttons</a><br>\n<a href=\"howto_css_modals.asp\">Modal Boxes</a><br>\n<a href=\"howto_js_animate.asp\">Animations</a><br>\n<a href=\"howto_js_progressbar.asp\">Progress Bars</a><br>\n<a href=\"howto_css_dropdown.asp\">Hover Dropdowns</a><br>\n<a href=\"howto_js_dropdown.asp\">Click Dropdowns</a><br>\n<a href=\"howto_css_table_responsive.asp\">Responsive Tables</a><br>",
        "<div w3-include-html=\"content.html\"></div>",
        "<script>\nfunction includeHTML() {\nvar z, i, elmnt, file, xhttp;\n/* Loop through a collection of all HTML elements: */\nz = document.getElementsByTagName(\"*\");\nfor (i = 0; i < z.length; i++) {\nelmnt = z[i];\n/*search for elements with a certain atrribute:*/\nfile = elmnt.getAttribute(\"w3-include-html\");\nif (file) {\n/* Make an HTTP request using the attribute value as the file name: */\nxhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\nif (this.readyState == 4) {\nif (this.status == 200) {elmnt.innerHTML = this.responseText;}\nif (this.status == 404) {elmnt.innerHTML = \"Page not found.\";}\n/* Remove the attribute, and call this function once more: */\nelmnt.removeAttribute(\"w3-include-html\");\nincludeHTML();\n}\n}\nxhttp.open(\"GET\", file, true);\nxhttp.send();\n/* Exit the function: */\nreturn;\n}\n}\n}\n</script>",
        "<script>\nincludeHTML();\n</script>",
        "<div w3-include-html=\"h1.html\"></div>\n<div w3-include-html=\"content.html\"></div>"
      ]
    },
    {
      "title": "How TO - Create a To Do List",
      "summary": "Learn how to create a \"to-do list\" with CSS and JavaScript.\nThe To Do List\nUse CSS and JavaScript to create a \"to-do list\" to organize and prioritize your tasks.\nTry it Yourself »\nCreate The To Do List\nExample\nStyle the header and the list:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div id=\"myDIV\" class=\"header\">\n<h2>My To Do List</h2>\n<input type=\"text\" id=\"myInput\" placeholder=\"Title...\">\n<span onclick=\"newElement()\" class=\"addBtn\">Add</span>\n</div>\n\n<ul id=\"myUL\">\n<li>Hit the gym</li>\n<li class=\"checked\">Pay bills</li>\n<li>Meet George</li>\n<li>Buy eggs</li>\n<li>Read a book</li>\n<li>Organize office</li>\n</ul>",
        "/* Include the padding and border in an element's total width and height */\n* {\nbox-sizing: border-box;\n}\n\n/* Remove margins and padding from the list */\nul {\nmargin: 0;\npadding: 0;\n}\n\n/* Style the list items */\nul li {\ncursor: pointer;\nposition: relative;\npadding: 12px 8px 12px 40px;\nbackground: #eee;\nfont-size: 18px;\ntransition: 0.2s;\n\n/* make the list items unselectable */\n-webkit-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n}\n\n/* Set all odd list items to a different color (zebra-stripes) */\nul li:nth-child(odd) {\nbackground: #f9f9f9;\n}\n\n/* Darker background-color on hover */\nul li:hover {\nbackground: #ddd;\n}\n\n/* When clicked on, add a background color and strike out text */\nul li.checked {\nbackground: #888;\ncolor: #fff;\ntext-decoration: line-through;\n}\n\n/* Add a \"checked\" mark when clicked on */\nul li.checked::before {\ncontent: '';\nposition: absolute;\nborder-color: #fff;\nborder-style: solid;\nborder-width: 0 2px 2px 0;\ntop: 10px;\nleft: 16px;\ntransform: rotate(45deg);\nheight: 15px;\nwidth: 7px;\n}\n\n/* Style the close button */\n.close {\nposition: absolute;\nright: 0;\ntop: 0;\npadding: 12px 16px 12px 16px;\n}\n\n.close:hover {\nbackground-color: #f44336;\ncolor: white;\n}\n\n/* Style the header */\n.header {\nbackground-color: #f44336;\npadding: 30px 40px;\ncolor: white;\ntext-align: center;\n}\n\n/* Clear floats after the header */\n.header:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Style the input */\ninput {\nmargin: 0;\nborder: none;\nborder-radius: 0;\nwidth: 75%;\npadding: 10px;\nfloat: left;\nfont-size: 16px;\n}\n\n/* Style the \"Add\" button */\n.addBtn {\npadding: 10px;\nwidth: 25%;\nbackground: #d9d9d9;\ncolor: #555;\nfloat: left;\ntext-align: center;\nfont-size: 16px;\ncursor: pointer;\ntransition: 0.3s;\nborder-radius: 0;\n}\n\n.addBtn:hover {\nbackground-color: #bbb;\n}",
        "// Create a \"close\" button and append it to each list item\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\nfor (i = 0; i < myNodelist.length; i++) {\nvar span = document.createElement(\"SPAN\");\nvar txt = document.createTextNode(\"\\u00D7\");\nspan.className = \"close\";\nspan.appendChild(txt);\nmyNodelist[i].appendChild(span);\n}\n\n// Click on a close button to hide the current list item\nvar close = document.getElementsByClassName(\"close\");\nvar i;\nfor (i = 0; i < close.length; i++) {\nclose[i].onclick = function() {\nvar div = this.parentElement;\ndiv.style.display = \"none\";\n}\n}\n\n// Add a \"checked\" symbol when clicking on a list item\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function(ev) {\nif (ev.target.tagName === 'LI') {\nev.target.classList.toggle('checked');\n}\n}, false);\n\n// Create a new list item when clicking on the \"Add\" button\nfunction newElement() {\nvar li = document.createElement(\"li\");\nvar inputValue = document.getElementById(\"myInput\").value;\nvar t = document.createTextNode(inputValue);\nli.appendChild(t);\nif (inputValue === '') {\nalert(\"You must write something!\");\n} else {\ndocument.getElementById(\"myUL\").appendChild(li);\n}\ndocument.getElementById(\"myInput\").value = \"\";\n\nvar span = document.createElement(\"SPAN\");\nvar txt = document.createTextNode(\"\\u00D7\");\nspan.className = \"close\";\nspan.appendChild(txt);\nli.appendChild(span);\n\nfor (i = 0; i < close.length; i++) {\nclose[i].onclick = function() {\nvar div = this.parentElement;\ndiv.style.display = \"none\";\n}\n}\n}"
      ]
    },
    {
      "title": "How TO - CSS Loader",
      "summary": "Learn how to create a preloader with CSS.\nHow To Create a Loader\nTry it Yourself »\nExample\nExample\nExample Explained\nThe border property specifies the border size and the border color of the loader. The border-radius property transforms the loader into a circle.\nThe blue thing that spins around inside the border is specified with the border-top property. You can also include border-bottom, border-left and/or border-right if you want more \"spinners\" (see example below).\nThe size of the loader is specified with the width and height properties.\nAt last, we add an animation that makes the blue thing spin forever with a 2 second animation speed.\nNote: You should also include a -webkit- prefix for browsers that do not support animation and transform properties. Click on the example to see how.\nREMOVE ADS\nAdd more spinners\nExample\nExample\nExample\nAnother Example\nAn example of how to place the loader in the middle of the page and show \"page content\" when loading is complete:\nExample",
      "examples": [
        "<div class=\"loader\"></div>",
        ".loader {\nborder: 16px solid #f3f3f3; /* Light grey */\nborder-top: 16px solid #3498db; /* Blue */\nborder-radius: 50%;\nwidth: 120px;\nheight: 120px;\nanimation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n0% { transform: rotate(0deg); }\n100% { transform: rotate(360deg); }\n}",
        ".loader {\nborder-top: 16px solid blue;\nborder-bottom: 16px solid blue;\n}",
        ".loader {\nborder-top: 16px solid blue;\nborder-right: 16px solid green;\nborder-bottom: 16px solid red;\n}",
        ".loader {\nborder-top: 16px solid blue;\nborder-right: 16px solid green;\nborder-bottom: 16px solid red;\nborder-left: 16px solid pink;\n}",
        "border",
        "border-radius",
        "border-top",
        "border-bottom",
        "border-left",
        "border-right",
        "width",
        "height",
        "animation"
      ]
    },
    {
      "title": "How TO - Badges",
      "summary": "Learn how to create a badge with CSS.\nHow To Create a Badge\nBadges can be used to add additional information to an element/content:\nExample heading New\nExample heading New\nTry it Yourself »\nExample\nExample",
      "examples": [
        "<span class=\"badge\">New</span>",
        ".badge {\nbackground-color: red;\ncolor: white;\npadding: 4px 8px;\ntext-align: center;\nborder-radius: 5px;\n}"
      ]
    },
    {
      "title": "How TO - Star Rating",
      "summary": "Learn how to create a simple \"star rating\" look with CSS.\nStar Rating\nTry it Yourself »\nHow To Create Notes\nExample\nExample\nTip: Go to our Icons Tutorial to learn more about icons.",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star\"></span>\n<span class=\"fa fa-star\"></span>",
        ".checked {\ncolor: orange;\n}"
      ]
    },
    {
      "title": "How TO - User Rating",
      "summary": "Learn how to create a \"user rating\" scorecard with CSS.\n4.1 average based on 254 reviews.\nTry it Yourself »\nHow To Create a User Rating Scorecard\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<span class=\"heading\">User Rating</span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star checked\"></span>\n<span class=\"fa fa-star\"></span>\n<p>4.1 average based on 254 reviews.</p>\n<hr style=\"border:3px solid #f1f1f1\">\n\n<div class=\"row\">\n<div class=\"side\">\n<div>5 star</div>\n</div>\n<div class=\"middle\">\n<div class=\"bar-container\">\n<div class=\"bar-5\"></div>\n</div>\n</div>\n<div class=\"side right\">\n<div>150</div>\n</div>\n<div class=\"side\">\n<div>4 star</div>\n</div>\n<div class=\"middle\">\n<div class=\"bar-container\">\n<div class=\"bar-4\"></div>\n</div>\n</div>\n<div class=\"side right\">\n<div>63</div>\n</div>\n<div class=\"side\">\n<div>3 star</div>\n</div>\n<div class=\"middle\">\n<div class=\"bar-container\">\n<div class=\"bar-3\"></div>\n</div>\n</div>\n<div class=\"side right\">\n<div>15</div>\n</div>\n<div class=\"side\">\n<div>2 star</div>\n</div>\n<div class=\"middle\">\n<div class=\"bar-container\">\n<div class=\"bar-2\"></div>\n</div>\n</div>\n<div class=\"side right\">\n<div>6</div>\n</div>\n<div class=\"side\">\n<div>1 star</div>\n</div>\n<div class=\"middle\">\n<div class=\"bar-container\">\n<div class=\"bar-1\"></div>\n</div>\n</div>\n<div class=\"side right\">\n<div>20</div>\n</div>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\nbody {\nfont-family: Arial;\nmargin: 0 auto; /* Center website */\nmax-width: 800px; /* Max width */\npadding: 20px;\n}\n\n.heading {\nfont-size: 25px;\nmargin-right: 25px;\n}\n\n.fa {\nfont-size: 25px;\n}\n\n.checked {\ncolor: orange;\n}\n\n/* Three column layout */\n.side {\nfloat: left;\nwidth: 15%;\nmargin-top: 10px;\n}\n\n.middle {\nfloat: left;\nwidth: 70%;\nmargin-top: 10px;\n}\n\n/* Place text to the right */\n.right {\ntext-align: right;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* The bar container */\n.bar-container {\nwidth: 100%;\nbackground-color: #f1f1f1;\ntext-align: center;\ncolor: white;\n}\n\n/* Individual bars */\n.bar-5 {width: 60%; height: 18px; background-color: #04AA6D;}\n.bar-4 {width: 30%; height: 18px; background-color: #2196F3;}\n.bar-3 {width: 10%; height: 18px; background-color: #00bcd4;}\n.bar-2 {width: 4%; height: 18px; background-color: #ff9800;}\n.bar-1 {width: 15%; height: 18px; background-color: #f44336;}\n\n/* Responsive layout - make the columns stack on top of each other instead of next to each other */\n@media (max-width: 400px) {\n.side, .middle {\nwidth: 100%;\n}\n/* Hide the right column on small screens */\n.right {\ndisplay: none;\n}\n}"
      ]
    },
    {
      "title": "How TO - Overlay",
      "summary": "Learn how to create an overlay effect with CSS.\nOverlay\nLearn how to create an overlay effect:\nHow To Create an Overlay Effect\nUse any element and place it anywhere inside the document:\nExample\nStyle the overlay element:\nExample\nREMOVE ADS\nUse JavaScript to turn on and off the overlay effect:\nExample\nOverlay Effect with Text\nAdd anything you want inside the overlay, and place it where you want. In this example we add text in the middle of the page:\nExample",
      "examples": [
        "<div id=\"overlay\"></div>",
        "#overlay {\nposition: fixed; /* Sit on top of the page content */\ndisplay: none; /* Hidden by default */\nwidth: 100%; /* Full width (cover the whole page) */\nheight: 100%; /* Full height (cover the whole page) */\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\nbackground-color: rgba(0,0,0,0.5); /* Black background with opacity */\nz-index: 2; /* Specify a stack order in case you're using a different order for other elements */\ncursor: pointer; /* Add a pointer on hover */\n}",
        "function on() {\ndocument.getElementById(\"overlay\").style.display = \"block\";\n}\n\nfunction off() {\ndocument.getElementById(\"overlay\").style.display = \"none\";\n}",
        "<style>\n#text{\nposition: absolute;\ntop: 50%;\nleft: 50%;\nfont-size: 50px;\ncolor: white;\ntransform: translate(-50%,-50%);\n-ms-transform: translate(-50%,-50%);\n}\n</style>\n\n<div id=\"overlay\">\n<div id=\"text\">Overlay Text</div>\n</div>"
      ]
    },
    {
      "title": "How TO - Contact Chips",
      "summary": "Learn how to create contact chips with CSS.\nContact Chips\nCreate Contact Chips\nExample\nExample\nREMOVE ADS\nClosable Contact Chips\nTo close/hide the contact chip, add an element with an onclick event attribute that says \"when you click you on me, hide my parent element\" - which is the container div (class=\"chip\").\nExample\nTip: Use the HTML entity \"&times;\" to create the letter \"x\".\nNext, style the close button:\nExample",
      "examples": [
        "<div class=\"chip\">\n<img src=\"img_avatar.jpg\" alt=\"Person\" width=\"96\" height=\"96\">\nJohn Doe\n</div>",
        ".chip {\ndisplay: inline-block;\npadding: 0 25px;\nheight: 50px;\nfont-size: 16px;\nline-height: 50px;\nborder-radius: 25px;\nbackground-color: #f1f1f1;\n}\n\n.chip img {\nfloat: left;\nmargin: 0 10px 0 -25px;\nheight: 50px;\nwidth: 50px;\nborder-radius: 50%;\n}",
        "<div class=\"chip\">\n<img src=\"img_avatar.jpg\" alt=\"Person\" width=\"96\" height=\"96\">\nJohn Doe\n<span class=\"closebtn\" onclick=\"this.parentElement.style.display='none'\">&times;</span>\n</div>",
        ".closebtn {\npadding-left: 10px;\ncolor: #888;\nfont-weight: bold;\nfloat: right;\nfont-size: 20px;\ncursor: pointer;\n}\n\n.closebtn:hover {\ncolor: #000;\n}",
        "&times;"
      ]
    },
    {
      "title": "How TO - Cards",
      "summary": "Learn how to create a \"card\" with CSS.\nArchitect & Engineer\nInterior Designer\nTry it Yourself »\nHow To Create a Card\nExample\nREMOVE ADS\nExample\nExample\nTip: Go to our CSS Shadow Effects Tutorial to learn more about shadows.",
      "examples": [
        "<div class=\"card\">\n<img src=\"img_avatar.png\" alt=\"Avatar\" style=\"width:100%\">\n<div class=\"container\">\n<h4><b>John Doe</b></h4>\n<p>Architect & Engineer</p>\n</div>\n</div>",
        ".card {\n/* Add shadows to create the \"card\" effect */\nbox-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\ntransition: 0.3s;\n}\n\n/* On mouse-over, add a deeper shadow */\n.card:hover {\nbox-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n}\n\n/* Add some padding inside the card container */\n.container {\npadding: 2px 16px;\n}",
        ".card {\nbox-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\ntransition: 0.3s;\nborder-radius: 5px; /* 5px rounded corners */\n}\n\n/* Add rounded corners to the top left and the top right corner of the image */\nimg {\nborder-radius: 5px 5px 0 0;\n}"
      ]
    },
    {
      "title": "How TO - Flip Card John Doe",
      "summary": "Learn how to create a flip card with CSS.\nMove your mouse over the image below:\nArchitect & Engineer\nWe love that guy\nTry it Yourself »\nHow To Create a Flip Card\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"flip-card\">\n<div class=\"flip-card-inner\">\n<div class=\"flip-card-front\">\n<img src=\"img_avatar.png\" alt=\"Avatar\" style=\"width:300px;height:300px;\">\n</div>\n<div class=\"flip-card-back\">\n<h1>John Doe</h1>\n<p>Architect & Engineer</p>\n<p>We love that guy</p>\n</div>\n</div>\n</div>",
        "/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */\n.flip-card {\nbackground-color: transparent;\nwidth: 300px;\nheight: 200px;\nborder: 1px solid #f1f1f1;\nperspective: 1000px; /* Remove this if you don't want the 3D effect */\n}\n\n/* This container is needed to position the front and back side */\n.flip-card-inner {\nposition: relative;\nwidth: 100%;\nheight: 100%;\ntext-align: center;\ntransition: transform 0.8s;\ntransform-style: preserve-3d;\n}\n\n/* Do an horizontal flip when you move the mouse over the flip box container */\n.flip-card:hover .flip-card-inner {\ntransform: rotateY(180deg);\n}\n\n/* Position the front and back side */\n.flip-card-front, .flip-card-back {\nposition: absolute;\nwidth: 100%;\nheight: 100%;\n-webkit-backface-visibility: hidden; /* Safari */\nbackface-visibility: hidden;\n}\n\n/* Style the front side (fallback if image is missing) */\n.flip-card-front {\nbackground-color: #bbb;\ncolor: black;\n}\n\n/* Style the back side */\n.flip-card-back {\nbackground-color: dodgerblue;\ncolor: white;\ntransform: rotateY(180deg);\n}"
      ]
    },
    {
      "title": "How TO - Profile Card John Doe",
      "summary": "Learn how to create a profile card with CSS.\nCEO & Founder, Example\nHarvard University\nContact\nTry it Yourself »\nHow To Create a Profile Card\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<div class=\"card\">\n<img src=\"img.jpg\" alt=\"John\" style=\"width:100%\">\n<h1>John Doe</h1>\n<p class=\"title\">CEO & Founder, Example</p>\n<p>Harvard University</p>\n<a href=\"#\"><i class=\"fa fa-dribbble\"></i></a>\n<a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\n<a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\n<a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\n<p><button>Contact</button></p>\n</div>",
        ".card {\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\nmax-width: 300px;\nmargin: auto;\ntext-align: center;\n}\n\n.title {\ncolor: grey;\nfont-size: 18px;\n}\n\nbutton {\nborder: none;\noutline: 0;\ndisplay: inline-block;\npadding: 8px;\ncolor: white;\nbackground-color: #000;\ntext-align: center;\ncursor: pointer;\nwidth: 100%;\nfont-size: 18px;\n}\n\na {\ntext-decoration: none;\nfont-size: 22px;\ncolor: black;\n}\n\nbutton:hover, a:hover {\nopacity: 0.7;\n}"
      ]
    },
    {
      "title": "How TO - Product Card Tailored Jeans",
      "summary": "Learn how to create a product card with CSS.\n$19.99\nSome text about the jeans. Super slim and comfy lorem ipsum lorem jeansum. Lorem jeamsun denim lorem jeansum.\nAdd to Cart\nTry it Yourself »\nHow To Create a Product Card\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"card\">\n<img src=\"jeans3.jpg\" alt=\"Denim Jeans\" style=\"width:100%\">\n<h1>Tailored Jeans</h1>\n<p class=\"price\">$19.99</p>\n<p>Some text about the jeans..</p>\n<p><button>Add to Cart</button></p>\n</div>",
        ".card {\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\nmax-width: 300px;\nmargin: auto;\ntext-align: center;\nfont-family: arial;\n}\n\n.price {\ncolor: grey;\nfont-size: 22px;\n}\n\n.card button {\nborder: none;\noutline: 0;\npadding: 12px;\ncolor: white;\nbackground-color: #000;\ntext-align: center;\ncursor: pointer;\nwidth: 100%;\nfont-size: 18px;\n}\n\n.card button:hover {\nopacity: 0.7;\n}"
      ]
    },
    {
      "title": "How TO - Alerts",
      "summary": "Learn how to create alert messages with CSS.\nAlerts\nAlert messages can be used to notify the user about something special: danger, success, information or warning.\nTry it Yourself »\nCreate An Alert Message\nExample\nIf you want the ability to close the alert message, add a <span> element with an onclick attribute that says \"when you click on me, hide my parent element\" - which is the container <div> (class=\"alert\").\nTip: Use the HTML entity \"&times;\" to create the letter \"x\".\nREMOVE ADS\nStyle the alert box and the close button:\nExample\nMany Alerts\nIf you have many alert messages on a page, you can add the following script to close different alerts without using the onclick attribute on each <span> element.\nAnd, if you want the alerts to slowly fade out when you click on them, add opacity and transition to the alert class:\nExample\nTip: Also check out Notes.",
      "examples": [
        "<div class=\"alert\">\n<span class=\"closebtn\" onclick=\"this.parentElement.style.display='none';\">&times;</span>\nThis is an alert box.\n</div>",
        "/* The alert message box */\n.alert {\npadding: 20px;\nbackground-color: #f44336; /* Red */\ncolor: white;\nmargin-bottom: 15px;\n}\n\n/* The close button */\n.closebtn {\nmargin-left: 15px;\ncolor: white;\nfont-weight: bold;\nfloat: right;\nfont-size: 22px;\nline-height: 20px;\ncursor: pointer;\ntransition: 0.3s;\n}\n\n/* When moving the mouse over the close button */\n.closebtn:hover {\ncolor: black;\n}",
        "<style>\n.alert {\nopacity: 1;\ntransition: opacity 0.6s; /* 600ms to fade out */\n}\n</style>\n\n<script>\n// Get all elements with class=\"closebtn\"\nvar close = document.getElementsByClassName(\"closebtn\");\nvar i;\n\n// Loop through all close buttons\nfor (i = 0; i < close.length; i++) {\n// When someone clicks on a close button\nclose[i].onclick = function(){\n\n// Get the parent of <span class=\"closebtn\"> (<div class=\"alert\">)\nvar div = this.parentElement;\n\n// Set the opacity of div to 0 (transparent)\ndiv.style.opacity = \"0\";\n\n// Hide the div after 600ms (the same amount of milliseconds it takes to fade out)\nsetTimeout(function(){ div.style.display = \"none\"; }, 600);\n}\n}\n</script>",
        "onclick",
        "&times;",
        "opacity",
        "transition",
        "alert"
      ]
    },
    {
      "title": "How TO - Callout Message",
      "summary": "Learn how to create callout messages with CSS.\nCallout\nA callout message is often positioned at the bottom of a page to notify the user about something special: tips/tricks, discounts, action needed, other.\nTry it Yourself »\nCreate a Callout\nExample\nIf you want the ability to close the callout message, add a <span> element with an onclick attribute that says \"when you click on me, hide my parent element\" - which is the container <div> (class=\"alert\").\nTip: Use the HTML entity \"&times;\" to create the letter \"x\".\nREMOVE ADS\nStyle the callout box and the close button:\nExample\nTip: Also check out Alert Messages.\nTip: Also check out Notes.",
      "examples": [
        "<div class=\"callout\">\n<div class=\"callout-header\">Callout Header</div>\n<span class=\"closebtn\" onclick=\"this.parentElement.style.display='none';\">&times;</span>\n<div class=\"callout-container\">\n<p>Some text...</p>\n</div>\n</div>",
        "/* Callout box - fixed position at the bottom of the page */\n.callout {\nposition: fixed;\nbottom: 35px;\nright: 20px;\nmargin-left: 20px;\nmax-width: 300px;\n}\n\n/* Callout header */\n.callout-header {\npadding: 25px 15px;\nbackground: #555;\nfont-size: 30px;\ncolor: white;\n}\n\n/* Callout container/body */\n.callout-container {\npadding: 15px;\nbackground-color: #ccc;\ncolor: black\n}\n\n/* Close button */\n.closebtn {\nposition: absolute;\ntop: 5px;\nright: 15px;\ncolor: white;\nfont-size: 30px;\ncursor: pointer;\n}\n\n/* Change color on mouse-over */\n.closebtn:hover {\ncolor: lightgrey;\n}",
        "onclick",
        "&times;"
      ]
    },
    {
      "title": "How TO - Notes",
      "summary": "Learn how to create \"notes\" with CSS.\nNotes\nNotes can be used to notify the user about something special: danger, success, information or warning\nDanger! Some text...\nSuccess! Some text...\nInfo! Some text...\nWarning! Some text...\nTry it Yourself »\nHow To Create Notes\nExample\nExample\nTip: Also check out Alerts.",
      "examples": [
        "<div class=\"danger\">\n<p><strong>Danger!</strong> Some text...</p>\n</div>",
        ".danger {\nbackground-color: #ffdddd;\nborder-left: 6px solid #f44336;\n}"
      ]
    },
    {
      "title": "How TO - Labels",
      "summary": "Learn how to style labels with CSS.\nHow To Style Labels\nExample\nExample",
      "examples": [
        "<span class=\"label success\">Success</span>\n<span class=\"label info\">Info</span>\n<span class=\"label warning\">Warning</span>\n<span class=\"label danger\">Danger</span>\n<span class=\"label other\">Other</span>",
        ".label {\ncolor: white;\npadding: 8px;\n}\n\n.success {background-color: #04AA6D;} /* Green */\n.info {background-color: #2196F3;} /* Blue */\n.warning {background-color: #ff9800;} /* Orange */\n.danger {background-color: #f44336;} /* Red */\n.other {background-color: #e7e7e7; color: black;} /* Gray */"
      ]
    },
    {
      "title": "How TO - CSS Ribbon",
      "summary": "Learn how to create a ribbon with CSS.\nHow To Create a Ribbon\nIn this example, the ribbon belongs to a button element:\nExample\nExample",
      "examples": [
        "<button class=\"btn\">A button for something cool <span class=\"ribbon\">NEW</span></button>",
        ".btn {\nborder: none;\nborder-radius: 5px;\npadding: 12px 20px;\nfont-size: 16px;\ncursor: pointer;\nbackground-color: #282A35;\ncolor: white;\nposition: relative;\n}\n\n.ribbon {\nwidth: 60px;\nfont-size: 14px;\npadding: 4px;\nposition: absolute;\nright: -25px;\ntop: -12px;\ntext-align: center;\nborder-radius: 25px;\ntransform: rotate(20deg);\nbackground-color: #ff9800;\ncolor: white;\n}"
      ]
    },
    {
      "title": "How TO - CSS Tag Cloud",
      "summary": "Learn how to create a tag cloud with CSS.\nHow To Create a Tag Cloud\nExample\nExample",
      "examples": [
        "<span class=\"tag-cloud\">Volvo</span>\n<span class=\"tag-cloud\">BMW</span>\n<span class=\"tag-cloud\">Tesla</span>\n<span class=\"tag-cloud\">Nissan</span>\n<span class=\"tag-cloud\">Toyota</span>\n<span class=\"tag-cloud\">Saab</span>\n<span class=\"tag-cloud\">Porsche</span>\n<span class=\"tag-cloud\">VW</span>\n<span class=\"tag-cloud\">Fiat</span>",
        ".tag-cloud {\ndisplay: inline-block;\ncolor: white;\npadding: 8px 20px;\nborder-radius: 25px;\nbackground-color: #2196F3;\nmargin-top: 8px;\n}"
      ]
    },
    {
      "title": "How TO - Circles",
      "summary": "Learn how to create empty circles with CSS.\nHow To Create Circles\nExample\nTo create a circle, use the border-radius property and set the value to 50%. Then combine the height and width properties with a matching value:\nExample",
      "examples": [
        "<span class=\"dot\"></span>\n<span class=\"dot\"></span>\n<span class=\"dot\"></span>\n<span class=\"dot\"></span>",
        ".dot {\nheight: 25px;\nwidth: 25px;\nbackground-color: #bbb;\nborder-radius: 50%;\ndisplay: inline-block;\n}"
      ]
    },
    {
      "title": "How TO - Style HR (Horizontal Ruler/Line)",
      "summary": "Learn how to style an hr element with CSS.\nHow To Style HR\nHorizontal Line\nYou can use the border property to style a hr element:\nExample\nRelated Pages\nThe HTML hr tag.",
      "examples": [
        "/* Red border */\nhr.new1 {\nborder-top: 1px solid red;\n}\n\n/* Dashed red border */\nhr.new2 {\nborder-top: 1px dashed red;\n}\n\n/* Dotted red border */\nhr.new3 {\nborder-top: 1px dotted red;\n}\n\n/* Thick red border */\nhr.new4 {\nborder: 1px solid red;\n}\n\n/* Large rounded green border */\nhr.new5 {\nborder: 10px solid green;\nborder-radius: 5px;\n}",
        "border",
        "hr"
      ]
    },
    {
      "title": "How TO - Coupon",
      "summary": "Learn how to create a \"coupon\" with CSS.\nCompany Logo\n20% OFF YOUR PURCHASE\nLorem ipsum dolor sit amet, et nam pertinax gloriatur. Sea te minim soleat senserit, ex quo luptatum tacimates voluptatum, salutandi delicatissimi eam ea. In sed nullam laboramus appellantur, mei ei omnis dolorem mnesarchum.\nUse Promo Code: BOH232\nExpires: Jan 03, 2021\nTry it Yourself »\nHow To Create a Coupon\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"coupon\">\n<div class=\"container\">\n<h3>Company Logo</h3>\n</div>\n<img src=\"hamburger.jpg\" alt=\"Avatar\" style=\"width:100%;\">\n<div class=\"container\" style=\"background-color:white\">\n<h2><b>20% OFF YOUR PURCHASE</b></h2>\n<p>Lorem ipsum..</p>\n</div>\n<div class=\"container\">\n<p>Use Promo Code: <span class=\"promo\">BOH232</span></p>\n<p class=\"expire\">Expires: Jan 03, 2021</p>\n</div>\n</div>",
        ".coupon {\nborder: 5px dotted #bbb; /* Dotted border */\nwidth: 80%;\nborder-radius: 15px; /* Rounded border */\nmargin: 0 auto; /* Center the coupon */\nmax-width: 600px;\n}\n\n.container {\npadding: 2px 16px;\nbackground-color: #f1f1f1;\n}\n\n.promo {\nbackground: #ccc;\npadding: 3px;\n}\n\n.expire {\ncolor: red;\n}"
      ]
    },
    {
      "title": "How TO - List Group",
      "summary": "Learn how to transform a basic list into a \"list group\" with CSS.\nList Group\nAdele\nAgnes\nBilly\nBob\nCalvin\nChristina\nCindy\nTry it Yourself »\nHow To Create a List Group\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS List Tutorial to learn more about HTML lists and how to style them.",
      "examples": [
        "<ul>\n<li>Adele</li>\n<li>Agnes</li>\n<li>Billy</li>\n<li>Bob</li>\n<li>Calvin</li>\n<li>Christina</li>\n<li>Cindy</li>\n</ul>",
        "ul {\nlist-style-type: none; /* Remove bullets */\npadding: 0; /* Remove padding */\nmargin: 0; /* Remove margins */\n}\n\nul li {\nborder: 1px solid #ddd; /* Add a thin border to each list item */\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6; /* Add a grey background color */\npadding: 12px; /* Add some padding */\n}"
      ]
    },
    {
      "title": "How TO - List Group with Badges",
      "summary": "Learn how to create a List Group with Badges, using CSS.\nList Group with Badges\nInbox 2\nOther 5\nSaved\nStuff\nOld\nTry it Yourself »\nHow To Create a List Group\nExample\nExample\nTip: Go to our CSS List Tutorial to learn more about HTML lists and how to style them.",
      "examples": [
        "<ul>\n<li>Inbox <span class=\"badge\">2</span></li>\n<li>Other <span class=\"badge\">5</span></li>\n<li>Saved</li>\n<li>Stuff</li>\n<li>Old</li>\n</ul>",
        "/* Transform a basic list into a customized list group */\nul.list-group {\nlist-style-type: none;\npadding: 0;\nmargin: 0;\n}\n\nul.list-group li {\nborder: 1px solid #ddd;\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6;\npadding: 12px;\n}\n\n/* Style badges inside the list group */\nul.list-group .badge {\nbackground-color: red;\ncolor: #fff;\nfont-weight: bold;\nborder-radius: 50%;\npadding: 5px 10px;\ntext-align: center;\nmargin-left: 5px;\n}"
      ]
    },
    {
      "title": "How TO - List Without Bullets",
      "summary": "Learn how create an unordered list without bullets, using CSS.\nHow To Create a List Without Bullets\nThe list-style-type:none property can be used to remove the default markers/bullets in a list. Note that the list also has default margin and padding. To remove this as well, add margin:0 and padding:0 to <ul>:\nExample\nTip: Go to our CSS List Tutorial to learn more about HTML lists and how to style them.",
      "examples": [
        "ul.no-bullets {\nlist-style-type: none; /* Remove bullets */\npadding: 0; /* Remove padding */\nmargin: 0; /* Remove margins */\n}",
        "list-style-type:none",
        "margin:0",
        "padding:0"
      ]
    },
    {
      "title": "How TO - Responsive Text Hello World Variable Font Size.",
      "summary": "Learn how to create responsive typography with CSS.\nResize the browser window to see how the font size scales.\nResponsive Font Size\nThe text size can be set with a vw unit, which means the \"viewport width\".\nThat way the text size will follow the size of the browser window:\nExample\nViewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.\nREMOVE ADS\nChange Font Size With Media Queries\nYou could also use media queries to change the font size of an element on specific screen sizes:\nExample\nTip: Go to our CSS Font Tutorial to learn more about fonts.\nTo learn more about media queries, read our CSS Media Queries Tutorial.",
      "examples": [
        "<h1 style=\"font-size:8vw;\">Hello World</h1>\n<p style=\"font-size:2vw;\">Resize the browser window to see how the font size scales.</p>",
        "/* If the screen size is 601px wide or more, set the font-size of <div> to 80px */\n@media screen and (min-width: 601px) {\ndiv.example {\nfont-size: 80px;\n}\n}\n\n/* If the screen size is 600px wide or less, set the font-size of <div> to 30px */\n@media screen and (max-width: 600px) {\ndiv.example {\nfont-size: 30px;\n}\n}",
        "vw"
      ]
    },
    {
      "title": "How TO - Cutout Text",
      "summary": "Learn how to create a responsive cutout/knockout text with CSS.\nA cutout text (or knockout text) is a see-through text that appears cut out on top of a background image:\nNote: This example does not work in Internet Explorer or Edge.\nHow To Create a Cutout Text\nExample\nREMOVE ADS\nThe mix-blend-mode property makes it possible to add the cutout text to the image. However, it is not supported in IE or Edge:\nExample\nIf you want a black container text, change the mix-blend-mode to \"multiply\" and background-color to black, and color to white:\nExample",
      "examples": [
        "<div class=\"image-container\">\n<div class=\"text\">NATURE</div>\n</div>",
        ".image-container {\nbackground-image: url(\"img_nature.jpg\"); /* The image used - important! */\nbackground-size: cover;\nposition: relative; /* Needed to position the cutout text in the middle of the image */\nheight: 300px; /* Some height */\n}\n\n.text {\nbackground-color: white;\ncolor: black;\nfont-size: 10vw; /* Responsive font size */\nfont-weight: bold;\nmargin: 0 auto; /* Center the text container */\npadding: 10px;\nwidth: 50%;\ntext-align: center; /* Center text */\nposition: absolute; /* Position text */\ntop: 50%; /* Position text in the middle */\nleft: 50%; /* Position text in the middle */\ntransform: translate(-50%, -50%); /* Position text in the middle */\nmix-blend-mode: screen; /* This makes the cutout text possible */\n}",
        ".text {\nbackground-color: black;\ncolor: white;\nmix-blend-mode: multiply;\n....\n}",
        "mix-blend-mode"
      ]
    },
    {
      "title": "How TO - Glowing Text",
      "summary": "Learn how to create a glowing text with CSS.\nHow To Create a Glowing Text\nUse the text-shadow property to create the neon light effect, and then use animation together with keyframes to add the repeatedly glowing effect:\nExample",
      "examples": [
        ".glow {\nfont-size: 80px;\ncolor: #fff;\ntext-align: center;\n-webkit-animation: glow 1s ease-in-out infinite alternate;\n-moz-animation: glow 1s ease-in-out infinite alternate;\nanimation: glow 1s ease-in-out infinite alternate;\n}\n\n@-webkit-keyframes glow {\nfrom {\ntext-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #e60073, 0 0 40px #e60073, 0 0 50px #e60073, 0 0 60px #e60073, 0 0 70px #e60073;\n}\nto {\ntext-shadow: 0 0 20px #fff, 0 0 30px #ff4da6, 0 0 40px #ff4da6, 0 0 50px #ff4da6, 0 0 60px #ff4da6, 0 0 70px #ff4da6, 0 0 80px #ff4da6;\n}\n}",
        "text-shadow",
        "animation",
        "keyframes"
      ]
    },
    {
      "title": "How TO - Fixed Footer",
      "summary": "Learn how to create a fixed/sticky footer with CSS.\nTry it Yourself »\nHow To Create a Fixed Footer\nExample\nTip: Go to our CSS Position Tutorial to learn more about positioning.",
      "examples": [
        "<style>\n.footer {\nposition: fixed;\nleft: 0;\nbottom: 0;\nwidth: 100%;\nbackground-color: red;\ncolor: white;\ntext-align: center;\n}\n</style>\n\n<div class=\"footer\">\n<p>Footer</p>\n</div>"
      ]
    },
    {
      "title": "How TO - Sticky Element",
      "summary": "Learn how to create a sticky element with CSS.\nTry it Yourself »\nNote: This example does not work in Internet Explorer or Edge 15 and earlier versions.\nSticky Element\nExample\nAn element with position: sticky; is positioned based on the user's scroll position.\nA sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it \"sticks\" in place (like position:fixed).\nNote: You must specify at least one of top, right, bottom or left for sticky positioning to work.\nTo learn more about CSS positoning, read our CSS Position tutorial.",
      "examples": [
        "div.sticky {\nposition: sticky;\ntop: 0;\n}",
        "position: sticky;",
        "relative",
        "fixed",
        "top",
        "right",
        "bottom",
        "left"
      ]
    },
    {
      "title": "How TO - Equal Height",
      "summary": "Learn how to create equal height columns with CSS.\nHow To Create Equal Height Columns\nWhen you have columns that should appear side by side, you'll often want them to be of equal height (matching the height of the tallest).\nThe Problem:\nThe Desire:\nTry it Yourself »\nExample\nExample\nREMOVE ADS\nResponsive Equal Height\nThe columns we made in the previous example are responsive (if you resize the browser window in the try it example, you will see that they automatically adjust to the necessary width and height). However, for small screens (like smartphones), you might want them to stack vertically instead of horizontally:\nOn medium and large screens:\nHello World.\nHello World.\nHello World.\nHello World.\nHello World.\nOn small screens:\nHello World.\nHello World.\nHello World.\nHello World.\nHello World.\nTo achieve this, add a media query and specify a breakpoint pixel value for when this should happen:\nExample\nEqual Height and Width using Flexbox\nYou can also use Flexbox to create equal height boxes:\nExample\nNote: Flexbox is not supported in Internet Explorer 10 and earlier versions.\nTip: Read more about flexible boxes in our CSS Flexbox Tutorial.",
      "examples": [
        "<div class=\"col-container\">\n<div class=\"col\">\n<h2>Column 1</h2>\n<p>Hello World</p>\n</div>\n\n<div class=\"col\">\n<h2>Column 2</h2>\n<p>Hello World!</p>\n<p>Hello World!</p>\n<p>Hello World!</p>\n<p>Hello World!</p>\n</div>\n\n<div class=\"col\">\n<h2>Column 3</h2>\n<p>Some other text..</p>\n<p>Some other text..</p>\n</div>\n</div>",
        ".col-container {\ndisplay: table; /* Make the container element behave like a table */\nwidth: 100%; /* Set full-width to expand the whole page */\n}\n\n.col {\ndisplay: table-cell; /* Make elements inside the container behave like table cells */\n}",
        "/* If the browser window is smaller than 600px, make the columns stack on top of each other */\n@media only screen and (max-width: 600px) {\n.col {\ndisplay: block;\nwidth: 100%;\n}\n}",
        ".col-container {\ndisplay: flex;\nwidth: 100%;\n}\n.col {\nflex: 1;\npadding: 16px;\n}"
      ]
    },
    {
      "title": "How TO - Clear Floats (Clearfix)",
      "summary": "Learn how to clear floats with the \"clearfix\" hack.\nHow To Clear Floats (Clearfix)\nElements after a floating element will flow around it. Use the \"clearfix\" hack to fix the problem:\nWithout Clearfix\nWith Clearfix\nThe clearfix Hack\nIf an element is taller than the element containing it, and it is floated, it will overflow outside of its container.\nThen we can add overflow: auto; to the containing element to fix this problem:\nExample\nThe overflow:auto clearfix works well as long as you are able to keep control of your margins and padding (else you might see scrollbars). The new, modern clearfix hack however, is safer to use, and the following code is used for most webpages:\nExample\nTip: Learn more about floats in our CSS Float Tutorial.",
      "examples": [
        ".clearfix {\noverflow: auto;\n}",
        ".clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}",
        "overflow: auto;"
      ]
    },
    {
      "title": "How TO - Responsive Floats",
      "summary": "Learn how to create responsive floating elements with CSS.\nResponsive floats\nUse media queries and set the specified screen width (in pixels) for when the element should float:\nExample\nTip: Learn more about floats in our CSS Float Tutorial.",
      "examples": [
        "/* Float to the right on screens that are equal to or less than 768px wide */\n@media (max-width: 768px) {\n.float-right-sm {\nfloat: right;\n}\n}\n\n/* Float to the right on screens that are equal to or greater than 769px wide */\n@media (min-width: 769px) {\n.float-right-lg {\nfloat: right;\n}\n}"
      ]
    },
    {
      "title": "How TO - Snackbar / Toast",
      "summary": "Learn how to create a snackbar / toast with CSS and JavaScript.\nSnackbar / Toast\nSnackbars are often used as tooltips/popups to show a message at the bottom of the screen.\nClick on the button to show the snackbar. It will disappear after 3 seconds.\nCreate a Snackbar\nExample\nREMOVE ADS\nStyle the snackbar and add animations:\nExample\nUse JavaScript to add the \"show\" class to the snackbar container with a click of a button:\nExample",
      "examples": [
        "<!-- Use a button to open the snackbar -->\n<button onclick=\"myFunction()\">Show Snackbar</button>\n\n<!-- The actual snackbar -->\n<div id=\"snackbar\">Some text some message..</div>",
        "/* The snackbar - position it at the bottom and in the middle of the screen */\n#snackbar {\nvisibility: hidden; /* Hidden by default. Visible on click */\nmin-width: 250px; /* Set a default minimum width */\nmargin-left: -125px; /* Divide value of min-width by 2 */\nbackground-color: #333; /* Black background color */\ncolor: #fff; /* White text color */\ntext-align: center; /* Centered text */\nborder-radius: 2px; /* Rounded borders */\npadding: 16px; /* Padding */\nposition: fixed; /* Sit on top of the screen */\nz-index: 1; /* Add a z-index if needed */\nleft: 50%; /* Center the snackbar */\nbottom: 30px; /* 30px from the bottom */\n}\n\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\n#snackbar.show {\nvisibility: visible; /* Show the snackbar */\n/* Add animation: Take 0.5 seconds to fade in and out the snackbar.\nHowever, delay the fade out process for 2.5 seconds */\n-webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\nanimation: fadein 0.5s, fadeout 0.5s 2.5s;\n}\n\n/* Animations to fade the snackbar in and out */\n@-webkit-keyframes fadein {\nfrom {bottom: 0; opacity: 0;}\nto {bottom: 30px; opacity: 1;}\n}\n\n@keyframes fadein {\nfrom {bottom: 0; opacity: 0;}\nto {bottom: 30px; opacity: 1;}\n}\n\n@-webkit-keyframes fadeout {\nfrom {bottom: 30px; opacity: 1;}\nto {bottom: 0; opacity: 0;}\n}\n\n@keyframes fadeout {\nfrom {bottom: 30px; opacity: 1;}\nto {bottom: 0; opacity: 0;}\n}",
        "function myFunction() {\n// Get the snackbar DIV\nvar x = document.getElementById(\"snackbar\");\n\n// Add the \"show\" class to DIV\nx.className = \"show\";\n\n// After 3 seconds, remove the show class from DIV\nsetTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 3000);\n}"
      ]
    },
    {
      "title": "How TO - Fullscreen",
      "summary": "Learn how to make a fullscreen window with JavaScript.\nFullscreen Window\nHow to use JavaScript to view an element in fullscreen mode.\nClick on the button to open the video in fullscreen mode:\nTry it Yourself »\nFullscreen Video\nTo open an element in fullscreen, we use the element.requestFullscreen() method:\nExample\nREMOVE ADS\nFullscreen Document\nTo open the whole page in fullscreen, use the document.documentElement instead of document.getElementById(\"element\"). In this example, we also use a close function to close the fullscreen:\nExample\nYou can also use CSS to style the page when it is in fullscreen mode:\nExample\nRelated Pages\nHTML DOM Reference: The requestFullscreen() method.\nHTML DOM Reference: The exitFullscreen() method.\nHTML DOM Reference: The documentElement property.",
      "examples": [
        "<script>\n/* Get the element you want displayed in fullscreen mode (a video in this example): */\nvar elem = document.getElementById(\"myvideo\");\n\n/* When the openFullscreen() function is executed, open the video in fullscreen.\nNote that we must include prefixes for different browsers, as they don't support the requestFullscreen method yet */\nfunction openFullscreen() {\nif (elem.requestFullscreen) {\nelem.requestFullscreen();\n} else if (elem.webkitRequestFullscreen) { /* Safari */\nelem.webkitRequestFullscreen();\n} else if (elem.msRequestFullscreen) { /* IE11 */\nelem.msRequestFullscreen();\n}\n}\n</script>",
        "<script>\n/* Get the documentElement (<html>) to display the page in fullscreen */\nvar elem = document.documentElement;\n\n/* View in fullscreen */\nfunction openFullscreen() {\nif (elem.requestFullscreen) {\nelem.requestFullscreen();\n} else if (elem.webkitRequestFullscreen) { /* Safari */\nelem.webkitRequestFullscreen();\n} else if (elem.msRequestFullscreen) { /* IE11 */\nelem.msRequestFullscreen();\n}\n}\n\n/* Close fullscreen */\nfunction closeFullscreen() {\nif (document.exitFullscreen) {\ndocument.exitFullscreen();\n} else if (document.webkitExitFullscreen) { /* Safari */\ndocument.webkitExitFullscreen();\n} else if (document.msExitFullscreen) { /* IE11 */\ndocument.msExitFullscreen();\n}\n}\n</script>",
        "/* Safari */\n:-webkit-full-screen {\nbackground-color: yellow;\n}\n\n/* IE11 */\n:-ms-fullscreen {\nbackground-color: yellow;\n}\n\n/* Standard syntax */\n:fullscreen {\nbackground-color: yellow;\n}",
        "element.requestFullscreen()",
        "document.documentElement",
        "document.getElementById(\"element\")"
      ]
    },
    {
      "title": "How TO - Scroll Drawing",
      "summary": "Learn how to draw on scroll using JavaScript and SVG.\nTry it Yourself »\nScroll Drawing\nUsing SVG and JavaScript to draw a triangle on scroll - note that it has to be a <path> element:\nExample\nTip: Learn more about SVG in our SVG Tutorial.",
      "examples": [
        "<svg id=\"mySVG\">\n<path fill=\"none\" stroke=\"red\" stroke-width=\"3\" id=\"triangle\" d=\"M150 0 L75 200 L225 200 Z\"/>\n</svg>\n\n<script>\n// Get the id of the <path> element and the length of <path>\nvar triangle = document.getElementById(\"triangle\");\nvar length = triangle.getTotalLength();\n\n// The start position of the drawing\ntriangle.style.strokeDasharray = length;\n\n// Hide the triangle by offsetting dash. Remove this line to show the triangle before scroll draw\ntriangle.style.strokeDashoffset = length;\n\n// Find scroll percentage on scroll (using cross-browser properties), and offset dash same amount as percentage scrolled\nwindow.addEventListener(\"scroll\", myFunction);\n\nfunction myFunction() {\nvar scrollpercent = (document.body.scrollTop + document.documentElement.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight);\n\nvar draw = length * scrollpercent;\n\n// Reverse the drawing (when scrolling upwards)\ntriangle.style.strokeDashoffset = length - draw;\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Smooth Scroll",
      "summary": "Learn how to create a smooth scrolling effect with CSS.\nSmooth Scrolling\nSection 1\nClick on the link to see the \"smooth\" scrolling effect.\nNote: Remove the scroll-behavior property to remove smooth scrolling.\nSection 2\nSmooth Scrolling\nAdd scroll-behavior: smooth to the <html> element to enable smooth scrolling for the whole page (note: it is also possible to add it to a specific element/scroll container):\nExample\nBrowser Support\nThe numbers in the table specify the first browser version that fully supports the scroll-behavior property.\nREMOVE ADS\nCross-browser Solution\nFor browsers that do not support the scroll-behavior property, you could use JavaScript or a JavaScript library, like jQuery, to create a solution that will work for all browsers:\nExample\nTip: Read more about the scroll-behavior property in our CSS Reference: CSS scroll-behavior Property.",
      "examples": [
        "html {\nscroll-behavior: smooth;\n}",
        "<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<script>\n$(document).ready(function(){\n// Add smooth scrolling to all links\n$(\"a\").on('click', function(event) {\n\n// Make sure this.hash has a value before overriding default behavior\nif (this.hash !== \"\") {\n// Prevent default anchor click behavior\nevent.preventDefault();\n\n// Store hash\nvar hash = this.hash;\n\n// Using jQuery's animate() method to add smooth page scroll\n// The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area\n$('html, body').animate({\nscrollTop: $(hash).offset().top\n}, 800, function(){\n\n// Add hash (#) to URL when done scrolling (default click behavior)\nwindow.location.hash = hash;\n});\n} // End if\n});\n});\n</script>",
        "scroll-behavior: smooth",
        "scroll-behavior"
      ]
    },
    {
      "title": "How TO - Background Gradient on Scroll",
      "summary": "Learn how to create a gradient background color on scroll.\nBackground Gradient\nHow To Create a Gradient Background on Scroll\nCreate a linear gradient background color that starts from the top. It starts from teal/green to blue:\nExample\nTip: To learn more about gradient backgrounds, go to our CSS Gradients Tutorial.",
      "examples": [
        "body {\nheight: 3000px; /* Used to enable scrolling */\nbackground: linear-gradient(55deg, #0fb8ad 0%, #1fc8db 51%, #2cb5e8 85%);\n}"
      ]
    },
    {
      "title": "How TO - On Scroll Header",
      "summary": "Learn how to create a fixed/sticky header on scroll with CSS.\nTry it Yourself »\nHow To Create a Fixed Header on Scroll\nExample\nStyle the header; add position:sticky and top:0 to make the header stick when you reach its scroll position:\nExample\nAn element with position: sticky; is positioned based on the user's scroll position.\nA sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it \"sticks\" in place (like position:fixed).\nNote: You must specify at least one of top, right, bottom or left for sticky positioning to work.\nTo learn more about CSS positoning, read our CSS Position tutorial.",
      "examples": [
        "<div class=\"header\" id=\"myHeader\">\n<h2>My Header</h2>\n</div>",
        ".header {\nposition: sticky;\ntop: 0;\npadding: 10px 16px;\nbackground: #555;\ncolor: #f1f1f1;\n}",
        "position:sticky",
        "top:0",
        "position: sticky;",
        "relative",
        "fixed",
        "top",
        "right",
        "bottom",
        "left"
      ]
    },
    {
      "title": "How TO - Resize Header on Scroll",
      "summary": "Learn how to shrink a header on scroll with CSS and JavaScript.\nTry it Yourself »\nHow To Shrink a Header on Scroll\nCreate a header:\nExample\nStyle the header:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div id=\"header\">Header</div>",
        "#header {\nbackground-color: #f1f1f1; /* Grey background */\npadding: 50px 10px; /* Some padding */\ncolor: black;\ntext-align: center; /* Centered text */\nfont-size: 90px; /* Big font size */\nfont-weight: bold;\nposition: fixed; /* Fixed position - sit on top of the page */\ntop: 0;\nwidth: 100%; /* Full width */\ntransition: 0.4s; /* Add a transition effect (when scrolling - and font size is decreased) */\n}",
        "// When the user scrolls down 50px from the top of the document, resize the header's font size\nwindow.onscroll = function() {scrollFunction()};\n\nfunction scrollFunction() {\nif (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {\ndocument.getElementById(\"header\").style.fontSize = \"30px\";\n} else {\ndocument.getElementById(\"header\").style.fontSize = \"90px\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Responsive Pricing Table",
      "summary": "Learn how to create a responsive pricing table with CSS.\nBasic\n$ 9.99 / year\n10GB Storage\n10 Emails\n10 Domains\n1GB Bandwidth\nSign Up\nPro\n$ 24.99 / year\n25GB Storage\n25 Emails\n25 Domains\n2GB Bandwidth\nSign Up\nPremium\n$ 49.99 / year\n50GB Storage\n50 Emails\n50 Domains\n5GB Bandwidth\nSign Up\nTry it Yourself »\nHow To Create a Responsive Pricing Table\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"columns\">\n<ul class=\"price\">\n<li class=\"header\">Basic</li>\n<li class=\"grey\">$ 9.99 / year</li>\n<li>10GB Storage</li>\n<li>10 Emails</li>\n<li>10 Domains</li>\n<li>1GB Bandwidth</li>\n<li class=\"grey\"><a href=\"#\" class=\"button\">Sign Up</a></li>\n</ul>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\n/* Create three columns of equal width */\n.columns {\nfloat: left;\nwidth: 33.3%;\npadding: 8px;\n}\n\n/* Style the list */\n.price {\nlist-style-type: none;\nborder: 1px solid #eee;\nmargin: 0;\npadding: 0;\n-webkit-transition: 0.3s;\ntransition: 0.3s;\n}\n\n/* Add shadows on hover */\n.price:hover {\nbox-shadow: 0 8px 12px 0 rgba(0,0,0,0.2)\n}\n\n/* Pricing header */\n.price .header {\nbackground-color: #111;\ncolor: white;\nfont-size: 25px;\n}\n\n/* List items */\n.price li {\nborder-bottom: 1px solid #eee;\npadding: 20px;\ntext-align: center;\n}\n\n/* Grey list item */\n.price .grey {\nbackground-color: #eee;\nfont-size: 20px;\n}\n\n/* The \"Sign Up\" button */\n.button {\nbackground-color: #04AA6D;\nborder: none;\ncolor: white;\npadding: 10px 25px;\ntext-align: center;\ntext-decoration: none;\nfont-size: 18px;\n}\n\n/* Change the width of the three columns to 100%\n(to stack horizontally on small screens) */\n@media only screen and (max-width: 600px) {\n.columns {\nwidth: 100%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Parallax Scrolling",
      "summary": "Learn how to create a \"parallax\" scrolling effect with CSS.\nParallax\nParallax scrolling is a web site trend where the background content (i.e. an image) is moved at a different speed than the foreground content while scrolling. Click on the links below to see the difference between a website with and without parallax scrolling.\nDemo with parallax scrolling\nDemo without parallax scrolling\nNote: Parallax scrolling does not always work on mobile devices/smart phones. However, you can use media queries to turn off the effect on mobile devices (see last example on this page).\nHow To Create a Parallax Scrolling Effect\nUse a container element and add a background image to the container with a specific height. Then use the background-attachment: fixed to create the actual parallax effect. The other background properties are used to center and scale the image perfectly:\nExample with pixels\nThe example above used pixels to set the height of the image. If you want to use percent, for example 100%, to make the image fit the whole screen, set the height of the parallax container to 100%. Note: You must also apply height: 100% to both <html> and <body>:\nExample with percent\nSome mobile devices have a problem with background-attachment: fixed. However, you can use media queries to turn off the parallax effect for mobile devices:\nExample",
      "examples": [
        "<style>\n.parallax {\n/* The image used */\nbackground-image: url(\"img_parallax.jpg\");\n\n/* Set a specific height */\nmin-height: 500px;\n\n/* Create the parallax scrolling effect */\nbackground-attachment: fixed;\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n}\n</style>\n\n<!-- Container element -->\n<div class=\"parallax\"></div>",
        "body, html {\nheight: 100%;\n}\n\n.parallax {\n/* The image used */\nbackground-image: url(\"img_parallax.jpg\");\n\n/* Full height */\nheight: 100%;\n\n/* Create the parallax scrolling effect */\nbackground-attachment: fixed;\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n}",
        "/* Turn off parallax scrolling for all tablets and phones. Increase/decrease the pixels if needed */\n@media only screen and (max-device-width: 1366px) {\n.parallax {\nbackground-attachment: scroll;\n}\n}",
        "background-attachment: fixed",
        "height: 100%"
      ]
    },
    {
      "title": "How TO - Aspect Ratio",
      "summary": "Learn how to maintain the aspect ratio of an element with CSS.\nAspect Ratio\nCreate flexible elements that keep their aspect ratio (4:3, 16:9, etc.) when resized:\nWhat is aspect ratio?\n\nThe aspect ratio of an element describes the proportional relationship between its width and its height. Two common video aspect ratios are 4:3 (the universal video format of the 20th century), and 16:9 (universal for HD television and European digital television, and default for YouTube videos).\nHow To - Height Equal to Width\nUse a container element, like <div>, and if you want text inside of it, add a child element:\nExample\nREMOVE ADS\nAdd a percentage value for padding-top to maintain the aspect ratio of the DIV. The following example will create an aspect ratio of 1:1 (the height and width is always equal):\nExample 1:1 Aspect Ratio\nOther aspect ratios:\nExample 16:9 Aspect Ratio\nExample 4:3 Aspect Ratio\nExample 3:2 Aspect Ratio\nExample 8:5 Aspect Ratio\nThe aspect-ratio CSS Property\nIn newer browsers, you can simply use the CSS aspect-ratio property:\nExample 3:2 Aspect Ratio\nThe numbers in the table specify the first browser version that fully supports the property.",
      "examples": [
        "<div class=\"container\">\n<div class=\"text\">Some text</div> <!-- If you want text inside the container -->\n</div>",
        ".container {\nbackground-color: red;\nwidth: 100%;\npadding-top: 100%; /* 1:1 Aspect Ratio */\nposition: relative; /* If you want text inside of it */\n}\n\n/* If you want text inside of the container */\n.text {\nposition: absolute;\ntop: 0;\nleft: 0;\nbottom: 0;\nright: 0;\n}",
        ".container {\npadding-top: 56.25%; /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */\n}",
        ".container {\npadding-top: 75%; /* 4:3 Aspect Ratio (divide 3 by 4 = 0.75) */\n}",
        ".container {\npadding-top: 66.66%; /* 3:2 Aspect Ratio (divide 2 by 3 = 0.6666)  */\n}",
        ".container {\npadding-top: 62.5%; /* 8:5 Aspect Ratio (divide 5 by 8 = 0.625) */\n}",
        ".container {\naspect-ratio: 3 / 2;\n}",
        "padding-top",
        "aspect-ratio"
      ]
    },
    {
      "title": "How TO - Responsive Iframe",
      "summary": "Learn how to create responsive iframes with CSS.\nResponsive Iframes\nCreate an iframe that will keep the aspect ratio (4:3, 16:9, etc.) when resized:\nWhat is aspect ratio?\n\nThe aspect ratio of an element describes the proportional relationship between its width and its height. Two common video aspect ratios are 4:3 (the universal video format of the 20th century), and 16:9 (universal for HD television and European digital television, and for YouTube videos).\nHow To - Responsive Iframes\nUse a container element, like <div>, and add the iframe inside of it:\nExample\nREMOVE ADS\nAdd a percentage value for padding-top to maintain the aspect ratio of the container DIV. The following example will create an aspect ratio of 16:9, which is the default aspect ratio of YouTube videos.\nExample 16:9 Aspect Ratio\nOther aspect ratios:\nExample 4:3 Aspect Ratio\nExample 3:2 Aspect Ratio\nExample 8:5 Aspect Ratio\nExample 1:1 Aspect Ratio (Height and Width is Always Equal)",
      "examples": [
        "<div class=\"container\">\n<iframe class=\"responsive-iframe\" src=\"https://www.youtube.com/embed/tgbNymZ7vqY\"></iframe>\n</div>",
        ".container {\nposition: relative;\noverflow: hidden;\nwidth: 100%;\npadding-top: 56.25%; /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */\n}\n\n/* Then style the iframe to fit in the container div with full height and width */\n.responsive-iframe {\nposition: absolute;\ntop: 0;\nleft: 0;\nbottom: 0;\nright: 0;\nwidth: 100%;\nheight: 100%;\n}",
        ".container {\npadding-top: 75%; /* 4:3 Aspect Ratio */\n}",
        ".container {\npadding-top: 66.66%; /* 3:2 Aspect Ratio */\n}",
        ".container {\npadding-top: 62.5%; /* 8:5 Aspect Ratio */\n}",
        ".container {\npadding-top: 100%; /* 1:1 Aspect Ratio */\n}",
        "padding-top"
      ]
    },
    {
      "title": "How TO - Toggle Like and Dislike",
      "summary": "Toggle between a like/dislike button with CSS and JavaScript.\nClick on the icon to toggle between thumbs-up and thumbs-down (like/dislike):\nToggle (Hide/Show) an Element\nExample\nExample",
      "examples": [
        "<!-- Add icon library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- Use an element to toggle between a like/dislike icon -->\n<i onclick=\"myFunction(this)\" class=\"fa fa-thumbs-up\"></i>",
        "function myFunction(x) {\nx.classList.toggle(\"fa-thumbs-down\");\n}"
      ]
    },
    {
      "title": "How TO - Toggle Hide and Show",
      "summary": "Toggle between hiding and showing an element with JavaScript.\nToggle (Hide/Show) an Element\nExample\nExample\nTip: For more information about Display and Visibility, read our CSS Display Tutorial.",
      "examples": [
        "<button onclick=\"myFunction()\">Click Me</button>\n\n<div id=\"myDIV\">\nThis is my DIV element.\n</div>",
        "function myFunction() {\nvar x = document.getElementById(\"myDIV\");\nif (x.style.display === \"none\") {\nx.style.display = \"block\";\n} else {\nx.style.display = \"none\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Toggle Dark Mode",
      "summary": "Switch between dark and light mode with CSS and JavaScript.\nTry it Yourself »\nToggle Class\nUse any element that should store the content you want to toggle the design for. In our example, we will use <body> for the sake of simplicity:\nExample\nStyle the <body> element and create a .dark-mode class for toggle:\nExample\nREMOVE ADS\nGet the <body> element and toggle between the .dark-mode class:\nExample\nTip: Also see How To Add A Class.\nTip: Learn more about the classList property in our JavaScript Reference.",
      "examples": [
        "<body>",
        "body {\npadding: 25px;\nbackground-color: white;\ncolor: black;\nfont-size: 25px;\n}\n\n.dark-mode {\nbackground-color: black;\ncolor: white;\n}",
        "function myFunction() {\nvar element = document.body;\nelement.classList.toggle(\"dark-mode\");\n}",
        ".dark-mode"
      ]
    },
    {
      "title": "How TO - Toggle/Swap Text",
      "summary": "Learn how to toggle text with JavaScript.\nToggle Text\nToggle Text of an Element\nExample\nExample",
      "examples": [
        "<button onclick=\"myFunction()\">Click Me</button>\n\n<div id=\"myDIV\">Hello</div>",
        "function myFunction() {\nvar x = document.getElementById(\"myDIV\");\nif (x.innerHTML === \"Hello\") {\nx.innerHTML = \"Swapped text!\";\n} else {\nx.innerHTML = \"Hello\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Toggle Class",
      "summary": "Toggle between adding and removing a class name from an element with JavaScript.\nToggle Class\nToggle between adding a class name to the div element with id=\"myDIV\" (in this example we use a button to toggle the class name).\nExample\nAdd a class name to toggle:\nExample\nREMOVE ADS\nGet the <div> element with id=\"myDIV\" and toggle between the \"mystyle\" class:\nExample\nTip: Also see How To Add A Class.\nTip: Also see How To Remove A Class.\nTip: Learn more about the classList property in our JavaScript Reference.",
      "examples": [
        "<button onclick=\"myFunction()\">Try it</button>\n\n<div id=\"myDIV\">\nThis is a DIV element.\n</div>",
        ".mystyle {\nwidth: 100%;\npadding: 25px;\nbackground-color: coral;\ncolor: white;\nfont-size: 25px;\n}",
        "function myFunction() {\nvar element = document.getElementById(\"myDIV\");\nelement.classList.toggle(\"mystyle\");\n}"
      ]
    },
    {
      "title": "How TO - Add a Class",
      "summary": "Learn how to add a class name to an element with JavaScript.\nAdd Class\nAdd a class name to the div element with id=\"myDIV\" (in this example we use a button to add the class).\nExample\nStyle the specified class name:\nExample\nREMOVE ADS\nGet the <div> element with id=\"myDIV\" and add the \"mystyle\" class to it:\nExample\nTip: Also see How To Toggle A Class.\nTip: Also see How To Remove A Class.\nTip: Learn more about the classList property in our JavaScript Reference.\nTip: Learn more about the className property in our JavaScript Reference.",
      "examples": [
        "<button onclick=\"myFunction()\">Try it</button>\n\n<div id=\"myDIV\">\nThis is a DIV element.\n</div>",
        ".mystyle {\nwidth: 100%;\npadding: 25px;\nbackground-color: coral;\ncolor: white;\nfont-size: 25px;\n}",
        "function myFunction() {\nvar element = document.getElementById(\"myDIV\");\nelement.classList.add(\"mystyle\");\n}"
      ]
    },
    {
      "title": "How TO - Remove a Class",
      "summary": "Learn how to remove a class name from an element with JavaScript.\nRemove Class\nIn this example, we will use a button to remove the \"mystyle\" class from the <div> element with id=\"myDIV\":\nExample\nStyle the specified class name:\nExample\nREMOVE ADS\nGet the <div> element with id=\"myDIV\" and remove the \"mystyle\" class from it:\nExample\nTip: Also see How To Toggle A Class.\nTip: Also see How To Add A Class.\nTip: Learn more about the classList property in our JavaScript Reference.\nTip: Learn more about the className property in our JavaScript Reference.",
      "examples": [
        "<button onclick=\"myFunction()\">Try it</button>\n\n<div id=\"myDIV\" class=\"mystyle\">\nThis is a DIV element.\n</div>",
        ".mystyle {\nwidth: 100%;\npadding: 25px;\nbackground-color: coral;\ncolor: white;\nfont-size: 25px;\n}",
        "function myFunction() {\nvar element = document.getElementById(\"myDIV\");\nelement.classList.remove(\"mystyle\");\n}"
      ]
    },
    {
      "title": "How TO - Change a Class",
      "summary": "Learn how to change the class name of an element with JavaScript.\nChange Class\nChange the class of a <div> element from \"mystyle\" to \"newone\":\nExample\nTip: Also see How To Toggle A Class.\nTip: Learn more about the classList property in our JavaScript Reference.",
      "examples": [
        "<div id=\"myDIV\" class=\"mystyle\">\nThis is a DIV element.\n</div>\n\n<script>\nfunction myFunction() {\nconst element = document.getElementById(\"myDIV\");  // Get the DIV element\nelement.classList.remove(\"mystyle\"); // Remove mystyle class from DIV\nelement.classList.add(\"newone\"); // Add newone class to DIV\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Add Active Class to Current Element",
      "summary": "Learn how to add an active class to the current element with JavaScript.\nHighlight the active/current (pressed) button:\nActive Element\nExample\nExample\nREMOVE ADS\nExample\nIf you do not have an active class set on the button element to start with, use the following code:\nExample",
      "examples": [
        "<div id=\"myDIV\">\n<button class=\"btn\">1</button>\n<button class=\"btn active\">2</button>\n<button class=\"btn\">3</button>\n<button class=\"btn\">4</button>\n<button class=\"btn\">5</button>\n</div>",
        "/* Style the buttons */\n.btn {\nborder: none;\noutline: none;\npadding: 10px 16px;\nbackground-color: #f1f1f1;\ncursor: pointer;\n}\n\n/* Style the active class (and buttons on mouse-over) */\n.active, .btn:hover {\nbackground-color: #666;\ncolor: white;\n}",
        "// Get the container element\nvar btnContainer = document.getElementById(\"myDIV\");\n\n// Get all buttons with class=\"btn\" inside the container\nvar btns = btnContainer.getElementsByClassName(\"btn\");\n\n// Loop through the buttons and add the active class to the current/clicked button\nfor (var i = 0; i < btns.length; i++) {\nbtns[i].addEventListener(\"click\", function() {\nvar current = document.getElementsByClassName(\"active\");\ncurrent[0].className = current[0].className.replace(\" active\", \"\");\nthis.className += \" active\";\n});\n}",
        "// Get the container element\nvar btnContainer = document.getElementById(\"myDIV\");\n\n// Get all buttons with class=\"btn\" inside the container\nvar btns = btnContainer.getElementsByClassName(\"btn\");\n\n// Loop through the buttons and add the active class to the current/clicked button\nfor (var i = 0; i < btns.length; i++) {\nbtns[i].addEventListener(\"click\", function() {\nvar current = document.getElementsByClassName(\"active\");\n\n// If there's no active class\nif (current.length > 0) {\ncurrent[0].className = current[0].className.replace(\" active\", \"\");\n}\n\n// Add the active class to the current/clicked button\nthis.className += \" active\";\n});\n}"
      ]
    },
    {
      "title": "How TO - Tree View",
      "summary": "Learn how to create a tree view with CSS and JavaScript.\nTree View\nA tree view represents a hierarchical view of information, where each item can have a number of subitems.\nClick on the arrow(s) to open or close the tree branches.\nBeverages\nWater\nCoffee\nTea\nBlack Tea\nWhite Tea\nGreen Tea\nSencha\nGyokuro\nMatcha\nPi Lo Chun\nWater\nCoffee\nTea\nBlack Tea\nWhite Tea\nGreen Tea\nSencha\nGyokuro\nMatcha\nPi Lo Chun\nBlack Tea\nWhite Tea\nGreen Tea\nSencha\nGyokuro\nMatcha\nPi Lo Chun\nSencha\nGyokuro\nMatcha\nPi Lo Chun\nTree View\nExample\nExample\nREMOVE ADS\nExample\nCheckbox Tree View\nIn this example, we use a \"ballot box\" unicode instead of a caret:\nExample",
      "examples": [
        "<ul id=\"myUL\">\n<li><span class=\"caret\">Beverages</span>\n<ul class=\"nested\">\n<li>Water</li>\n<li>Coffee</li>\n<li><span class=\"caret\">Tea</span>\n<ul class=\"nested\">\n<li>Black Tea</li>\n<li>White Tea</li>\n<li><span class=\"caret\">Green Tea</span>\n<ul class=\"nested\">\n<li>Sencha</li>\n<li>Gyokuro</li>\n<li>Matcha</li>\n<li>Pi Lo Chun</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>",
        "/* Remove default bullets */\nul, #myUL {\nlist-style-type: none;\n}\n\n/* Remove margins and padding from the parent ul */\n#myUL {\nmargin: 0;\npadding: 0;\n}\n\n/* Style the caret/arrow */\n.caret {\ncursor: pointer;\nuser-select: none; /* Prevent text selection */\n}\n\n/* Create the caret/arrow with a unicode, and style it */\n.caret::before {\ncontent: \"\\25B6\";\ncolor: black;\ndisplay: inline-block;\nmargin-right: 6px;\n}\n\n/* Rotate the caret/arrow icon when clicked on (using JavaScript) */\n.caret-down::before {\ntransform: rotate(90deg);\n}\n\n/* Hide the nested list */\n.nested {\ndisplay: none;\n}\n\n/* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */\n.active {\ndisplay: block;\n}",
        "var toggler = document.getElementsByClassName(\"caret\");\nvar i;\n\nfor (i = 0; i < toggler.length; i++) {\ntoggler[i].addEventListener(\"click\", function() {\nthis.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\nthis.classList.toggle(\"caret-down\");\n});\n}"
      ]
    },
    {
      "title": "How TO - Remove Decimals of a Number",
      "summary": "Learn how to remove the decimal part of a number in JavaScript.\nRemove Decimals\nYou can use the Math.trunc() method to remove the decimals of a number:\nExample\nTip: Learn more about the Math.trunc() method in our JavaScript Reference.",
      "examples": [
        "let x = Math.trunc(8.7512356); // 8",
        "Math.trunc()"
      ]
    },
    {
      "title": "How TO - Remove a Property from an Object",
      "summary": "Learn how to remove a property from a JavaScript object.\nRemove Property from an Object\nThe delete operator deletes a property from an object:\nExample\nThe delete operator deletes both the value of the property and the property itself.\nAfter deletion, the property cannot be used before it is added back again.\nThe delete operator is designed to be used on object properties. It has no effect on variables or functions.\nNote: The delete operator should not be used on predefined JavaScript object properties. It can crash your application.\nRead more about JavaScript Objects in our JavaScript Object Tutorial.",
      "examples": [
        "var person = {\nfirstName: \"John\",\nlastName: \"Doe\",\nage: 50,\neyeColor: \"blue\"\n};\n\ndelete person.age;  // or delete person[\"age\"];\n\n// Before deletion: person.age = 50, after deletion, person.age = undefined"
      ]
    },
    {
      "title": "How TO - Online Offline Detection",
      "summary": "Learn how to detect whether the browser is online or offline with JavaScript.\nOffline Detection\nThe onLine property of the Navigator object returns a Boolean value that specifies whether the browser is in online or offline mode:\nExample\nFind out whether the browser is online:\nRead more about the Navigator Object in our JavaScript Navigator Tutorial.",
      "examples": [
        "var x = \"Is the browser online? \" + navigator.onLine;",
        "onLine",
        "Navigator"
      ]
    },
    {
      "title": "How TO - Check if an Element is Hidden",
      "summary": "Learn how to find out if an element is hidden with JavaScript.\nCheck Hidden Element\nExample\nIf the <div> element is hidden, do something:\nNote: When an element is hidden with display:none (like in the example above), the element will not take up any space.\nTo find out if an element is hidden with visibility:hidden, see the example below. This \"hidden\" element will take up space.\nExample\nTip: Also check out How To - Toggle Hide/Show.\nTip: For more information about Display and Visibility, read our CSS Display Tutorial.",
      "examples": [
        "function myFunction() {\nvar x = document.getElementById(\"myDIV\");\nif (window.getComputedStyle(x).display === \"none\") {\n// Do something..\n}\n}",
        "function myFunction() {\nvar x = document.getElementById(\"myDIV\");\nif (window.getComputedStyle(x).visibility === \"hidden\") {\n// Do something..\n}\n}",
        "display:none",
        "visibility:hidden"
      ]
    },
    {
      "title": "How TO - Redirect to Another Webpage",
      "summary": "Learn how to redirect to another webpage using JavaScript.\nRedirect a Webpage\nThere are a couple of ways to redirect to another webpage with JavaScript. The most popular ones are location.href and location.replace:\nExample\nNote: The difference between href and replace, is that replace() removes the URL of the current document from the document history, meaning that it is not possible to use the \"back\" button to navigate back to the original document.\nTip: For more information about the Location Object, read our Location Object Reference.",
      "examples": [
        "// Simulate a mouse click:\nwindow.location.href = \"http://www.w3schools.com\";\n\n// Simulate an HTTP redirect:\nwindow.location.replace(\"http://www.w3schools.com\");",
        "location.href",
        "location.replace",
        "replace()"
      ]
    },
    {
      "title": "How TO - Format a Number with Two Decimals",
      "summary": "Learn how to format a number with two decimals in JavaScript.\nFormat a Number with Two Decimals\nYou can use the toFixed() method to format a number to only show two decimals. Note that the result is rounded (shows 5.57 instead of 5.56):\nExample\nIf you want to display three decimals, just change the number to 3:\nExample\nTip: Learn more about the toFixed() method in our JavaScript Reference.",
      "examples": [
        "let num = 5.56789;\nlet n = num.toFixed(2);  // 5.57",
        "let num = 5.56789;\nlet n = num.toFixed(3);  // 5.568",
        "toFixed()"
      ]
    },
    {
      "title": "How TO - Zoom on Hover Zoom on Hover",
      "summary": "Learn how to zoom/scale an element on hover with CSS.\nHover over the green box:\nHow To Zoom on Hover\nExample\nTip: Go to our CSS Transform Tutorial to learn more about how to scale elements.",
      "examples": [
        "<style>\n.zoom {\npadding: 50px;\nbackground-color: green;\ntransition: transform .2s; /* Animation */\nwidth: 200px;\nheight: 200px;\nmargin: 0 auto;\n}\n\n.zoom:hover {\ntransform: scale(1.5); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */\n}\n</style>\n\n<div class=\"zoom\"></div>"
      ]
    },
    {
      "title": "How TO - 3D Flip Box",
      "summary": "Learn how to create a flip box with CSS.\nFlip Box\nMove your mouse over the boxes below to see the effect:\nHorizontal Flip:\nFront Side\nBack Side\nTry it Yourself »\nVertical Flip:\nFront Side\nBack Side\nTry it Yourself »\nHow To Create a Flip Box\nExample\nREMOVE ADS\nExample\nVertical Flip\nTo do a vertical flip instead of a horizontal, use the rotateX method instead of rotateY:\nExample\nNote: These examples do not work properly on tablets and/or mobile phones.\nTip: Go to our CSS 2D Transforms Tutorial, to learn more about 2D transformations, such as the rotate() method.\nTip: Go to our CSS 3D Transforms Tutorial, to learn more about 3D transformations.",
      "examples": [
        "<div class=\"flip-box\">\n<div class=\"flip-box-inner\">\n<div class=\"flip-box-front\">\n<h2>Front Side</h2>\n</div>\n<div class=\"flip-box-back\">\n<h2>Back Side</h2>\n</div>\n</div>\n</div>",
        "/* The flip box container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */\n.flip-box {\nbackground-color: transparent;\nwidth: 300px;\nheight: 200px;\nborder: 1px solid #f1f1f1;\nperspective: 1000px; /* Remove this if you don't want the 3D effect */\n}\n\n/* This container is needed to position the front and back side */\n.flip-box-inner {\nposition: relative;\nwidth: 100%;\nheight: 100%;\ntext-align: center;\ntransition: transform 0.8s;\ntransform-style: preserve-3d;\n}\n\n/* Do an horizontal flip when you move the mouse over the flip box container */\n.flip-box:hover .flip-box-inner {\ntransform: rotateY(180deg);\n}\n\n/* Position the front and back side */\n.flip-box-front, .flip-box-back {\nposition: absolute;\nwidth: 100%;\nheight: 100%;\n-webkit-backface-visibility: hidden; /* Safari */\nbackface-visibility: hidden;\n}\n\n/* Style the front side */\n.flip-box-front {\nbackground-color: #bbb;\ncolor: black;\n}\n\n/* Style the back side */\n.flip-box-back {\nbackground-color: dodgerblue;\ncolor: white;\ntransform: rotateY(180deg);\n}",
        ".flip-box:hover .flip-box-inner {\ntransform: rotateX(180deg);\n}\n\n.flip-box-back {\ntransform: rotateX(180deg);\n}",
        "rotateX",
        "rotateY"
      ]
    },
    {
      "title": "How TO - Center Elements Vertically",
      "summary": "Learn how to center an element vertically and horizontally with CSS.\nI am vertically and horizontally centered.\nHow To Center Anything Vertically\nExample\nREMOVE ADS\nHow To Center Vertically AND Horizontally\nExample\nYou can also use flexbox to center things:\nExample\nTip: Go to our CSS Align Tutorial to learn more about aligning elements.\nTip: Go to our CSS Transform Tutorial to learn more about how to scale elements.\nTip: Go to our CSS Flexbox Tutorial to learn more flexbox.",
      "examples": [
        "<style>\n.container {\nheight: 200px;\nposition: relative;\nborder: 3px solid green;\n}\n\n.vertical-center {\nmargin: 0;\nposition: absolute;\ntop: 50%;\n-ms-transform: translateY(-50%);\ntransform: translateY(-50%);\n}\n</style>\n\n<div class=\"container\">\n<div class=\"vertical-center\">\n<p>I am vertically centered.</p>\n</div>\n</div>",
        "<style>\n.container {\nheight: 200px;\nposition: relative;\nborder: 3px solid green;\n}\n\n.center {\nmargin: 0;\nposition: absolute;\ntop: 50%;\nleft: 50%;\n-ms-transform: translate(-50%, -50%);\ntransform: translate(-50%, -50%);\n}\n</style>\n\n<div class=\"container\">\n<div class=\"center\">\n<p>I am vertically and horizontally centered.</p>\n</div>\n</div>",
        ".center {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 200px;\nborder: 3px solid green;\n}"
      ]
    },
    {
      "title": "How TO - Center a Button in DIV",
      "summary": "Learn how to center a button element vertically and horizontally with CSS.\nHow To Center a Button Vertically\nExample\nREMOVE ADS\nHow To Center Vertically AND Horizontally\nExample\nYou can also use flexbox to center things:\nExample\nTip: Go to our CSS Align Tutorial to learn more about aligning elements.\nTip: Go to our CSS Transform Tutorial to learn more about how to scale elements.\nTip: Go to our CSS Flexbox Tutorial to learn more flexbox.",
      "examples": [
        "<style>\n.container {\nheight: 200px;\nposition: relative;\nborder: 3px solid green;\n}\n\n.vertical-center {\nmargin: 0;\nposition: absolute;\ntop: 50%;\n-ms-transform: translateY(-50%);\ntransform: translateY(-50%);\n}\n</style>\n\n<div class=\"container\">\n<div class=\"vertical-center\">\n<button>Centered Button</button>\n</div>\n</div>",
        "<style>\n.container {\nheight: 200px;\nposition: relative;\nborder: 3px solid green;\n}\n\n.center {\nmargin: 0;\nposition: absolute;\ntop: 50%;\nleft: 50%;\n-ms-transform: translate(-50%, -50%);\ntransform: translate(-50%, -50%);\n}\n</style>\n\n<div class=\"container\">\n<div class=\"center\">\n<button>Centered Button</button>\n</div>\n</div>",
        ".center {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 200px;\nborder: 3px solid green;\n}"
      ]
    },
    {
      "title": "How TO - Center a List",
      "summary": "Learn how to center a list with CSS.\nCentered List\nCoffee\nTea\nCoca Cola\nCenter an HTML List\nWrap the <ul> element inside a container element, like <div>:\nExample\nCenter-align the <div> element, and change the display of <ul> to inline-block.\nOptionally, you can left-align the list items for a more tidy view:\nExample\nTip: Go to our CSS Align Tutorial to learn more about aligning elements.",
      "examples": [
        "<div class=\"container\">\n<ul class=\"myUL\">\n<li>Coffee</li>\n<li>Tea</li>\n<li>Coca Cola</li>\n</ul>\n</div>",
        "div.container {\ntext-align: center;\n}\n\nul.myUL {\ndisplay: inline-block;\ntext-align: left;\n}",
        "<ul>",
        "<div>",
        "inline-block"
      ]
    },
    {
      "title": "How TO - Transition on Hover",
      "summary": "Learn how to add transition on hover with CSS.\nTransition on Hover\nCSS transitions allows you to change property values smoothly (from one value to another), over a given duration.\nAdd a transition effect (opacity and background color) to a button on hover:\nExample\nFade in on hover:\nExample\nFade background on hover:\nGo to our CSS Transition Tutorial to learn more about transitions.",
      "examples": []
    },
    {
      "title": "How TO - CSS Arrows",
      "summary": "Learn how to create arrows with CSS.\nRight arrow:\nLeft arrow:\nUp arrow:\nDown arrow:\nHow To Create Arrows\nExample\nExample",
      "examples": [
        "<p>Right arrow: <i class=\"arrow right\"></i></p>\n<p>Left arrow: <i class=\"arrow left\"></i></p>\n<p>Up arrow: <i class=\"arrow up\"></i></p>\n<p>Down arrow: <i class=\"arrow down\"></i></p>",
        ".arrow {\nborder: solid black;\nborder-width: 0 3px 3px 0;\ndisplay: inline-block;\npadding: 3px;\n}\n\n.right {\ntransform: rotate(-45deg);\n-webkit-transform: rotate(-45deg);\n}\n\n.left {\ntransform: rotate(135deg);\n-webkit-transform: rotate(135deg);\n}\n\n.up {\ntransform: rotate(-135deg);\n-webkit-transform: rotate(-135deg);\n}\n\n.down {\ntransform: rotate(45deg);\n-webkit-transform: rotate(45deg);\n}"
      ]
    },
    {
      "title": "How TO - CSS Shapes",
      "summary": "Learn how to create different shapes with CSS.\nSquare\nCircle\nOval\nTrapezoid\nRectangle\nParallelogram\nTriangle Up\nTriangle Down\nTriangle Left\nTriangle Right",
      "examples": []
    },
    {
      "title": "How TO - Download Link",
      "summary": "Learn how to create a download link with HTML.\nDownload Link\nYou can use the HTML download attribute to specify that the target will be downloaded when a user clicks on the hyperlink.\nExample\nThe download attribute is only used if the href attribute is set.\nThe value of the attribute will be the name of the downloaded file. There are no restrictions on allowed values, and the browser will automatically detect the correct file extension and add it to the file (.img, .pdf, .txt, .html, etc.).\nYou can also specify a value for the download attribute, which will be the new filename of the downloaded file. If the value is omitted, the original filename is used.\nExample\nSpecify a value for the download attribute, which will be the new filename of the downloaded file (\"w3logo.jpg\" instead of \"myw3schoolsimage.jpg\"):\nBrowser Support\nThe numbers in the table specify the first browser version that fully supports the attribute.",
      "examples": [
        "<a href=\"/images/myw3schoolsimage.jpg\" download>\n<img src=\"/images/myw3schoolsimage.jpg\" alt=\"W3Schools\">\n</a>",
        "<a href=\"/images/myw3schoolsimage.jpg\" download=\"w3logo\">\n<img src=\"/images/myw3schoolsimage.jpg\" alt=\"W3Schools\">\n</a>",
        "download",
        "href"
      ]
    },
    {
      "title": "How TO - Full Height Element",
      "summary": "Learn how to stretch elements to fit the whole height of the browser window with CSS.\nFull Height Div\nExample",
      "examples": [
        "html, body {\nheight: 100%;\n}\n\n.full-height {\nheight: 100%;\n}\n\n<div class=\"full-height\">..</div>"
      ]
    },
    {
      "title": "How TO - Browser Window CSS",
      "summary": "Learn how to create a browser window example with CSS.\nBrowser Window",
      "examples": []
    },
    {
      "title": "How TO - Custom Scrollbar",
      "summary": "Learn how to create a custom scrollbar with CSS.\nCustom Scrollbars\nNote: Custom scrollbars are not supported in Firefox or in Edge, prior version 79.\nHow To Create Custom Scrollbars\nChrome, Edge, Safari and Opera support the non-standard ::-webkit-scrollbar pseudo element, which allows us to modify the look of the browser's scrollbar.\nThe following example creates a thin (10px wide) scrollbar, which has a grey track/bar color and a dark-grey (#888) handle:\nExample\nThis example creates a scrollbar with box shadow:\nExample\nScrollbar Selectors\nFor webkit browsers, you can use the following pseudo elements to customize the browser's scrollbar:\n::-webkit-scrollbar the scrollbar.\n::-webkit-scrollbar-button the buttons on the scrollbar (arrows pointing upwards and downwards).\n::-webkit-scrollbar-thumb the draggable scrolling handle.\n::-webkit-scrollbar-track the track (progress bar) of the scrollbar.\n::-webkit-scrollbar-track-piece the track (progress bar) NOT covered by the handle.\n::-webkit-scrollbar-corner the bottom corner of the scrollbar, where both horizontal and vertical scrollbars meet.\n::-webkit-resizer the draggable resizing handle that appears at the bottom corner of some elements.",
      "examples": [
        "/* width */\n::-webkit-scrollbar {\nwidth: 10px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\nbackground: #f1f1f1;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\nbackground: #888;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\nbackground: #555;\n}",
        "/* width */\n::-webkit-scrollbar {\nwidth: 20px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\nbox-shadow: inset 0 0 5px grey;\nborder-radius: 10px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\nbackground: red;\nborder-radius: 10px;\n}",
        "::-webkit-scrollbar",
        "::-webkit-scrollbar-button",
        "::-webkit-scrollbar-thumb",
        "::-webkit-scrollbar-track",
        "::-webkit-scrollbar-track-piece",
        "::-webkit-scrollbar-corner",
        "::-webkit-resizer"
      ]
    },
    {
      "title": "How TO - Hide Scrollbar",
      "summary": "Learn how to hide scrollbars with CSS.\nHow To Hide Scrollbars\nAdd overflow: hidden; to hide both the horizontal and vertical scrollbar.\nExample\nTo only hide the vertical scrollbar, or only the horizontal scrollbar, use overflow-y or overflow-x:\nExample\nNote that overflow: hidden will also remove the functionality of the scrollbar. It is not possible to scroll inside the page.\nTip: To learn more about the overflow property, go to our CSS Overflow Tutorial or CSS overflow Property Reference.\nREMOVE ADS\nHide Scrollbars But Keep Functionality\nTo hide the scrollbars, but still be able to keep scrolling, you can use the following code:\nExample\nWebkit browsers, such as Chrome, Safari and Opera, supports the non-standard ::-webkit-scrollbar pseudo element, which allows us to modify the look of the browser's scrollbar. IE and Edge supports the -ms-overflow-style: property, and Firefox supports the scrollbar-width property, which allows us to hide the scrollbar, but keep functionality.",
      "examples": [
        "body {\noverflow: hidden; /* Hide scrollbars */\n}",
        "body {\noverflow-y: hidden; /* Hide vertical scrollbar */\noverflow-x: hidden; /* Hide horizontal scrollbar */\n}",
        "/* Hide scrollbar for Chrome, Safari and Opera */\n.example::-webkit-scrollbar {\ndisplay: none;\n}\n\n/* Hide scrollbar for IE, Edge and Firefox */\n.example {\n-ms-overflow-style: none;  /* IE and Edge */\nscrollbar-width: none;  /* Firefox */\n}",
        "overflow: hidden;",
        "overflow-y",
        "overflow-x",
        "overflow: hidden",
        "overflow",
        "::-webkit-scrollbar",
        "-ms-overflow-style:",
        "scrollbar-width"
      ]
    },
    {
      "title": "How TO - Always Show Scrollbars",
      "summary": "Learn how to always show scrollbars with CSS.\nHow To Force / Always Show Scrollbars\nAdd overflow: scroll; to show both the horizontal and vertical scrollbar:\nExample\nTo only show the vertical scrollbar, or only the horizontal scrollbar, use overflow-y or overflow-x:\nExample\nTip: To learn more about the overflow property, go to our CSS Overflow Tutorial or CSS overflow Property Reference.",
      "examples": [
        "body {\noverflow: scroll; /* Show scrollbars */\n}",
        "body {\noverflow-y: scroll; /* Show vertical scrollbar */\noverflow-x: scroll; /* Show horizontal scrollbar */\n}",
        "overflow: scroll;",
        "overflow-y",
        "overflow-x",
        "overflow"
      ]
    },
    {
      "title": "How TO - Device Look",
      "summary": "Learn how to create different device looks (smartphone, tablet and laptop) with CSS.\nDevices",
      "examples": []
    },
    {
      "title": "How TO - Remove Contenteditable Border",
      "summary": "Learn how to remove the border from an editable element.\nRemove Contenteditable Border\nBy default, when you write inside an element that has contenteditable set to true, that element gets a border around on focus. However, you can use CSS to remove the border:\nExample\nUse the [attribute] selector to select all elements that are contenteditable, and remove the border with the outline property:\nExample\nTip: Go to our HTML contenteditable Attribute Reference to learn more about the global contenteditable attribute.\nTip: Go to our CSS [attribute] Selector to learn more about the [attribute] selector.",
      "examples": [
        "<p contenteditable=\"true\">This is an editable paragraph.</p>",
        "[contenteditable] {\noutline: 0px solid transparent;\n}",
        "contenteditable",
        "true",
        "[attribute]",
        "outline"
      ]
    },
    {
      "title": "How TO - Change Placeholder Color",
      "summary": "Learn how to change the color of the placeholder attribute with CSS.\nPlaceholder Color\nUse an input element and add the placeholder attribute:\nExample\nIn most browsers, the placeholder text is grey. To change this, style the placeholder with the ::placeholder selector. Note that Firefox adds a lower opacity to the placeholder, so we use opacity: 1 to fix this.\nExample\nTip: Read more about the ::placeholder selector in our CSS Reference: CSS ::placeholder selector.",
      "examples": [
        "<input type=\"text\" placeholder=\"A red placeholder text..\">",
        "::placeholder {\ncolor: red;\nopacity: 1; /* Firefox */\n}\n\n::-ms-input-placeholder { /* Edge 12 -18 */\ncolor: red;\n}",
        "::placeholder",
        "opacity: 1"
      ]
    },
    {
      "title": "How TO - Disable Resizing of Textarea",
      "summary": "Learn how to disable the resize option of textareas.\nDisable Resizing of Textarea\nYou can use the resize property to specify whether a textarea should be resizable or not:\nExample\nTip: Go to our CSS resize Reference to learn more the resize property.",
      "examples": [
        "textarea {\nresize: none;\n}",
        "resize"
      ]
    },
    {
      "title": "How TO - Disable Text Selection",
      "summary": "Learn how to disable text selection in HTML with CSS.\nThis text can be selected.\nThis text cannot be selected.\nDisable Text Selection\nYou can use the user-select property to disable text selection of an element.\nIn web browsers, if you double-click on some text it will be selected/highlighted. This property can be used to prevent this.\nExample\nTip: Go to our CSS user-select Reference to learn more the user-select property.",
      "examples": [
        ".prevent-select {\n-webkit-user-select: none; /* Safari */\n-ms-user-select: none; /* IE 10 and IE 11 */\nuser-select: none; /* Standard syntax */\n}",
        "user-select"
      ]
    },
    {
      "title": "How TO - Change Text Selection Color",
      "summary": "Learn how to override the default text selection color with CSS.\nText Selection Color\nSelect the following text:\nDefault text selection color\nCustom text selection color\nHow To Change Text Selection Color\nUse the ::selection selector to override the default text selection color:\nExample\nTip: Read more about the ::selection selector in our CSS Reference: CSS ::selection Property.",
      "examples": [
        "::-moz-selection { /* Code for Firefox */\ncolor: red;\nbackground: yellow;\n}\n\n::selection {\ncolor: red;\nbackground: yellow;\n}",
        "::selection"
      ]
    },
    {
      "title": "How TO - Change Bullet Color of Lists",
      "summary": "Learn how to change bullet colors for lists with CSS.\nChange Bullet Color\nAdele\nAgnes\nBilly\nBob\nCreate a basic list:\nExample\nUse the ::marker selector to change the bullet color of a list item:\nExample",
      "examples": [
        "<ul>\n<li>Adele</li>\n<li>Agnes</li>\n<li>Billy</li>\n<li>Bob</li>\n</ul>",
        "li::marker {\ncolor: red;\n}"
      ]
    },
    {
      "title": "How TO - Vertical Line",
      "summary": "Learn how to create a vertical line with CSS.\nHow To Create a Vertical Line\nExample\nHow to center the vertical line in your page:\nExample",
      "examples": [
        "<style>\n.vl {\nborder-left: 6px solid green;\nheight: 500px;\n}\n</style>\n\n<div class=\"vl\"></div>",
        ".vl {\nborder-left: 6px solid green;\nheight: 500px;\nposition: absolute;\nleft: 50%;\nmargin-left: -3px;\ntop: 0;\n}"
      ]
    },
    {
      "title": "How TO - Divider",
      "summary": "Learn how to create different dividers with CSS.\nDashed\nDotted\nSolid\nRounded\nHow To Create Dividers\nExample\nExample",
      "examples": [
        "<hr class=\"dashed\">\n<hr class=\"dotted\">\n<hr class=\"solid\">\n<hr class=\"rounded\">",
        "/* Dashed border */\nhr.dashed {\nborder-top: 3px dashed #bbb;\n}\n\n/* Dotted border */\nhr.dotted {\nborder-top: 3px dotted #bbb;\n}\n\n/* Solid border */\nhr.solid {\nborder-top: 3px solid #bbb;\n}\n\n/* Rounded border */\nhr.rounded {\nborder-top: 8px solid #bbb;\nborder-radius: 5px;\n}"
      ]
    },
    {
      "title": "How TO - Text Divider",
      "summary": "Learn how to create a text divider with CSS.\nHow To Create Responsive Text Dividers\nExample\nExample",
      "examples": [
        "<div class=\"divider\">Lorem Ipsum</div>",
        ".divider {\nfont-size: 30px;\ndisplay: flex;\nalign-items: center;\n}\n\n.divider::before, .divider::after {\nflex: 1;\ncontent: '';\npadding: 3px;\nbackground-color: red;\nmargin: 5px;\n}"
      ]
    },
    {
      "title": "How TO - Animate Icons",
      "summary": "Learn how to use icons to make an animated effect.\nBattery Charging\nExample\nExample\nRead more about Font Awesome in our Font Awesome Tutorial.\nExample\nExample Explained\nThe example gives an impression of a battery getting charged, but instead it is five different icons being displayed.\nA function called chargebattery() does all the replacing and displaying of icons.\nThe function starts by displaying an empty battery icon:\nAfter one second, the icon is replaced by a new icon:\nThe icon is replaced by a new icon each second, until \"the battery is fully charged\":\nThis process is repeated every 5 second, making it seems like the battery is charging.\nREMOVE ADS\nMore Animated Icons\nExample\nExample\nExample\nExample\nExample\nExample",
      "examples": [
        "<div id=\"charging\" class=\"fa\"></div>",
        "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">",
        "<script>\nfunction chargebattery() {\nvar a;\na = document.getElementById(\"charging\");\na.innerHTML = \"&#xf244;\";\nsetTimeout(function () {\na.innerHTML = \"&#xf243;\";\n}, 1000);\nsetTimeout(function () {\na.innerHTML = \"&#xf242;\";\n}, 2000);\nsetTimeout(function () {\na.innerHTML = \"&#xf241;\";\n}, 3000);\nsetTimeout(function () {\na.innerHTML = \"&#xf240;\";\n}, 4000);\n}\nchargebattery();\nsetInterval(chargebattery, 5000);\n</script>",
        "",
        "",
        "",
        "",
        "",
        "",
        "chargebattery()"
      ]
    },
    {
      "title": "How TO - JavaScript Countdown Timer",
      "summary": "Learn how to create a countdown timer with JavaScript.\n1568d 2h 7m 57s\nCreating a Countdown Timer\nExample\nTip: Learn more about the window.setInterval() method in our JavaScript Reference.",
      "examples": [
        "<!-- Display the countdown timer in an element -->\n<p id=\"demo\"></p>\n\n<script>\n// Set the date we're counting down to\nvar countDownDate = new Date(\"Jan 5, 2030 15:37:25\").getTime();\n\n// Update the count down every 1 second\nvar x = setInterval(function() {\n\n// Get today's date and time\nvar now = new Date().getTime();\n\n// Find the distance between now and the count down date\nvar distance = countDownDate - now;\n\n// Time calculations for days, hours, minutes and seconds\nvar days = Math.floor(distance / (1000 * 60 * 60 * 24));\nvar hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\nvar minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\nvar seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n// Display the result in the element with id=\"demo\"\ndocument.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \"\n+ minutes + \"m \" + seconds + \"s \";\n\n// If the count down is finished, write some text\nif (distance < 0) {\nclearInterval(x);\ndocument.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n}\n}, 1000);\n</script>"
      ]
    },
    {
      "title": "How TO - Typing Effect",
      "summary": "Learn how to create a typing effect with JavaScript.\nCreating a Typing Effect\nExample\nExample\nTip: Learn more about the window.setTimeout() method in our JavaScript Reference.",
      "examples": [
        "<p id=\"demo\"></p>",
        "var i = 0;\nvar txt = 'Lorem ipsum typing effect!'; /* The text */\nvar speed = 50; /* The speed/duration of the effect in milliseconds */\n\nfunction typeWriter() {\nif (i < txt.length) {\ndocument.getElementById(\"demo\").innerHTML += txt.charAt(i);\ni++;\nsetTimeout(typeWriter, speed);\n}\n}"
      ]
    },
    {
      "title": "How TO - Coming Soon Page",
      "summary": "Learn how to create a \"coming soon page\" with CSS and JavaScript.\nTry it Yourself »\nHow To Create a Coming Soon Page\nIn our example, we will use a background image that covers the entire page and place some text in the image to let the user know what's going on.\nThis example shows how to create a \"Coming Soon Page\" with just HTML and CSS. Look at the next example to find out how to add a \"countdown timer\" with JavaScript as well.\nExample\nREMOVE ADS\nExample\nAdd JavaScript to create a countdown timer:\nExample",
      "examples": [
        "<div class=\"bgimg\">\n<div class=\"topleft\">\n<p>Logo</p>\n</div>\n<div class=\"middle\">\n<h1>COMING SOON</h1>\n<hr>\n<p>35 days</p>\n</div>\n<div class=\"bottomleft\">\n<p>Some text</p>\n</div>\n</div>",
        "/* Set height to 100% for body and html to enable the background image to cover the whole page: */\nbody, html {\nheight: 100%\n}\n\n.bgimg {\n/* Background image */\nbackground-image: url('/w3images/forestbridge.jpg');\n/* Full-screen */\nheight: 100%;\n/* Center the background image */\nbackground-position: center;\n/* Scale and zoom in the image */\nbackground-size: cover;\n/* Add position: relative to enable absolutely positioned elements inside the image (place text) */\nposition: relative;\n/* Add a white text color to all elements inside the .bgimg container */\ncolor: white;\n/* Add a font */\nfont-family: \"Courier New\", Courier, monospace;\n/* Set the font-size to 25 pixels */\nfont-size: 25px;\n}\n\n/* Position text in the top-left corner */\n.topleft {\nposition: absolute;\ntop: 0;\nleft: 16px;\n}\n\n/* Position text in the bottom-left corner */\n.bottomleft {\nposition: absolute;\nbottom: 0;\nleft: 16px;\n}\n\n/* Position text in the middle */\n.middle {\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\ntext-align: center;\n}\n\n/* Style the <hr> element */\nhr {\nmargin: auto;\nwidth: 40%;\n}",
        "// Set the date we're counting down to\nvar countDownDate = new Date(\"Jan 5, 2024 15:37:25\").getTime();\n\n// Update the count down every 1 second\nvar x = setInterval(function() {\n\n// Get todays date and time\nvar now = new Date().getTime();\n\n// Find the distance between now an the count down date\nvar distance = countDownDate - now;\n\n// Time calculations for days, hours, minutes and seconds\nvar days = Math.floor(distance / (1000 * 60 * 60 * 24));\nvar hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\nvar minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\nvar seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n// Display the result in an element with id=\"demo\"\ndocument.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \"\n+ minutes + \"m \" + seconds + \"s \";\n\n// If the count down is finished, write some text\nif (distance < 0) {\nclearInterval(x);\ndocument.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n}\n}, 1000);"
      ]
    },
    {
      "title": "How TO - Chat",
      "summary": "Learn how to create a chat message with CSS.\nChat Messages\nHello. How are you today?\nHey! I'm fine. Thanks for asking!\nSweet! So, what do you wanna do today?\nNah, I dunno. Play soccer.. or learn more coding perhaps?\nTry it Yourself »\nHow To Create Chat Messages\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"container\">\n<img src=\"/w3images/bandmember.jpg\" alt=\"Avatar\">\n<p>Hello. How are you today?</p>\n<span class=\"time-right\">11:00</span>\n</div>\n\n<div class=\"container darker\">\n<img src=\"/w3images/avatar_g2.jpg\" alt=\"Avatar\" class=\"right\">\n<p>Hey! I'm fine. Thanks for asking!</p>\n<span class=\"time-left\">11:01</span>\n</div>\n\n<div class=\"container\">\n<img src=\"/w3images/bandmember.jpg\" alt=\"Avatar\">\n<p>Sweet! So, what do you wanna do today?</p>\n<span class=\"time-right\">11:02</span>\n</div>\n\n<div class=\"container darker\">\n<img src=\"/w3images/avatar_g2.jpg\" alt=\"Avatar\" class=\"right\">\n<p>Nah, I dunno. Play soccer.. or learn more coding perhaps?</p>\n<span class=\"time-left\">11:05</span>\n</div>",
        "/* Chat containers */\n.container {\nborder: 2px solid #dedede;\nbackground-color: #f1f1f1;\nborder-radius: 5px;\npadding: 10px;\nmargin: 10px 0;\n}\n\n/* Darker chat container */\n.darker {\nborder-color: #ccc;\nbackground-color: #ddd;\n}\n\n/* Clear floats */\n.container::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n/* Style images */\n.container img {\nfloat: left;\nmax-width: 60px;\nwidth: 100%;\nmargin-right: 20px;\nborder-radius: 50%;\n}\n\n/* Style the right image */\n.container img.right {\nfloat: right;\nmargin-left: 20px;\nmargin-right:0;\n}\n\n/* Style time text */\n.time-right {\nfloat: right;\ncolor: #aaa;\n}\n\n/* Style time text */\n.time-left {\nfloat: left;\ncolor: #999;\n}"
      ]
    },
    {
      "title": "How TO - Popup Chat Window",
      "summary": "Learn how to create a popup chat window with CSS and JavaScript.\nHow To Create a Popup Chat\nUse a <form> element to process the input. You can learn more about this in our PHP tutorial.\nExample\nREMOVE ADS\nExample\nExample\nTip: Go to our HTML Form Tutorial to learn more about HTML Forms.\nTip: Go to our CSS Form Tutorial to learn more about how to style form elements.",
      "examples": [
        "<div class=\"chat-popup\" id=\"myForm\">\n<form action=\"/action_page.php\" class=\"form-container\">\n<h1>Chat</h1>\n\n<label for=\"msg\"><b>Message</b></label>\n<textarea placeholder=\"Type message..\" name=\"msg\" required></textarea>\n\n<button type=\"submit\" class=\"btn\">Send</button>\n<button type=\"button\" class=\"btn cancel\" onclick=\"closeForm()\">Close</button>\n</form>\n</div>",
        "{box-sizing: border-box;}\n\n/* Button used to open the chat form - fixed at the bottom of the page */\n.open-button {\nbackground-color: #555;\ncolor: white;\npadding: 16px 20px;\nborder: none;\ncursor: pointer;\nopacity: 0.8;\nposition: fixed;\nbottom: 23px;\nright: 28px;\nwidth: 280px;\n}\n\n/* The popup chat - hidden by default */\n.form-popup {\ndisplay: none;\nposition: fixed;\nbottom: 0;\nright: 15px;\nborder: 3px solid #f1f1f1;\nz-index: 9;\n}\n\n/* Add styles to the form container */\n.form-container {\nmax-width: 300px;\npadding: 10px;\nbackground-color: white;\n}\n\n/* Full-width textarea */\n.form-container textarea {\nwidth: 100%;\npadding: 15px;\nmargin: 5px 0 22px 0;\nborder: none;\nbackground: #f1f1f1;\nresize: none;\nmin-height: 200px;\n}\n\n/* When the textarea gets focus, do something */\n.form-container textarea:focus {\nbackground-color: #ddd;\noutline: none;\n}\n\n/* Set a style for the submit/login button */\n.form-container .btn {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 16px 20px;\nborder: none;\ncursor: pointer;\nwidth: 100%;\nmargin-bottom:10px;\nopacity: 0.8;\n}\n\n/* Add a red background color to the cancel button */\n.form-container .cancel {\nbackground-color: red;\n}\n\n/* Add some hover effects to buttons */\n.form-container .btn:hover, .open-button:hover {\nopacity: 1;\n}",
        "function openForm() {\ndocument.getElementById(\"myForm\").style.display = \"block\";\n}\n\nfunction closeForm() {\ndocument.getElementById(\"myForm\").style.display = \"none\";\n}"
      ]
    },
    {
      "title": "How TO - Split Screen 1/2",
      "summary": "Learn how to create a split screen (50/50) with CSS.\nHow To Create A Split Screen\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"split left\">\n<div class=\"centered\">\n<img src=\"img_avatar2.png\" alt=\"Avatar woman\">\n<h2>Jane Flex</h2>\n<p>Some text.</p>\n</div>\n</div>\n\n<div class=\"split right\">\n<div class=\"centered\">\n<img src=\"img_avatar.png\" alt=\"Avatar man\">\n<h2>John Doe</h2>\n<p>Some text here too.</p>\n</div>\n</div>",
        "/* Split the screen in half */\n.split {\nheight: 100%;\nwidth: 50%;\nposition: fixed;\nz-index: 1;\ntop: 0;\noverflow-x: hidden;\npadding-top: 20px;\n}\n\n/* Control the left side */\n.left {\nleft: 0;\nbackground-color: #111;\n}\n\n/* Control the right side */\n.right {\nright: 0;\nbackground-color: red;\n}\n\n/* If you want the content centered horizontally and vertically */\n.centered {\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\ntext-align: center;\n}\n\n/* Style the image inside the centered container, if needed */\n.centered img {\nwidth: 150px;\nborder-radius: 50%;\n}"
      ]
    },
    {
      "title": "How TO - Testimonials",
      "summary": "Learn how to create responsive testimonials with CSS.\nA testimonial is often used to let people know what other people think of you or your product.\nChris Fox. CEO at Mighty Schools.\nJohn Doe saved us from a web disaster.\nRebecca Flex. CEO at Company.\nNo one is better than John Doe.\nJulia Roberts. Actor.\nSimply love Johnny Boy.\nTry it Yourself »\nHow To Style Testimonials\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"container\">\n<img src=\"bandmember.jpg\" alt=\"Avatar\" style=\"width:90px\">\n<p><span>Chris Fox.</span> CEO at Mighty Schools.</p>\n<p>John Doe saved us from a web disaster.</p>\n</div>\n\n<div class=\"container\">\n<img src=\"avatar_g2.jpg\" alt=\"Avatar\" style=\"width:90px\">\n<p><span >Rebecca Flex.</span> CEO at Company.</p>\n<p>No one is better than John Doe.</p>\n</div>",
        "/* Style the container with a rounded border, grey background and some padding and margin */\n.container {\nborder: 2px solid #ccc;\nbackground-color: #eee;\nborder-radius: 5px;\npadding: 16px;\nmargin: 16px 0;\n}\n\n/* Clear floats after containers */\n.container::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n/* Float images inside the container to the left. Add a right margin, and style the image as a circle */\n.container img {\nfloat: left;\nmargin-right: 20px;\nborder-radius: 50%;\n}\n\n/* Increase the font-size of a span element */\n.container span {\nfont-size: 20px;\nmargin-right: 15px;\n}\n\n/* Add media queries for responsiveness. This will center both the text and the image inside the container */\n@media (max-width: 500px) {\n.container {\ntext-align: center;\n}\n\n.container img {\nmargin: auto;\nfloat: none;\ndisplay: block;\n}\n}"
      ]
    },
    {
      "title": "How TO - Section Counter",
      "summary": "Learn how to create a \"section counter\" with CSS.\nSection Counter\nA section counter is used to tell people how well their business is going, by displaying interesting numbers:\n11+\nPartners\n55+\nProjects\n100+\nHappy Clients\n100+\nMeetings\nTry it Yourself »\nHow To Create a Section Counter\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\">\n<div class=\"card\">\n<p><i class=\"fa fa-user\"></i></p>\n<h3>11+</h3>\n<p>Partners</p>\n</div>\n</div>\n\n<div class=\"column\">\n<div class=\"card\">\n<p><i class=\"fa fa-check\"></i></p>\n<h3>55+</h3>\n<p>Projects</p>\n</div>\n</div>\n\n<div class=\"column\">\n<div class=\"card\">\n<p><i class=\"fa fa-smile-o\"></i></p>\n<h3>100+</h3>\n<p>Happy Clients</p>\n</div>\n</div>\n\n<div class=\"column\">\n<div class=\"card\">\n<p><i class=\"fa fa-coffee\"></i></p>\n<h3>100+</h3>\n<p>Meetings</p>\n</div>\n</div>\n</div>",
        ".* {\nbox-sizing: border-box;\n}\n\n/* Float four columns side by side */\n.column {\nfloat: left;\nwidth: 25%;\npadding: 0 5px;\n}\n\n.row {margin: 0 -5px;}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Responsive columns */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\ndisplay: block;\nmargin-bottom: 10px;\n}\n}\n\n/* Style the counter cards */\n.card {\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\npadding: 16px;\ntext-align: center;\nbackground-color: #444;\ncolor: white;\n}\n\n.fa {font-size:50px;}"
      ]
    },
    {
      "title": "How TO - Quotes Slideshow",
      "summary": "Learn how to create a quotes slideshow with CSS and JavaScript.\nQuotes Slideshow\n- John Keats\n- Ernest Hemingway\n- Thomas A. Edison\nTry it Yourself »\nCreate A Quotes Slideshow\nExample\nStyle the slides, buttons, dots, etc:\nExample\nREMOVE ADS\nExample\nTip: Also check out How To - Image Slideshow and How To - Lightbox.",
      "examples": [
        "<!-- Slideshow container -->\n<div class=\"slideshow-container\">\n\n<!-- Full-width slides/quotes -->\n<div class=\"mySlides\">\n<q>I love you the more in that I believe you had liked me for my own sake and for nothing else</q>\n<p class=\"author\">- John Keats</p>\n</div>\n\n<div class=\"mySlides\">\n<q>But man is not made for defeat. A man can be destroyed but not defeated.</q>\n<p class=\"author\">- Ernest Hemingway</p>\n</div>\n\n<div class=\"mySlides\">\n<q>I have not failed. I've just found 10,000 ways that won't work.</q>\n<p class=\"author\">- Thomas A. Edison</p>\n</div>\n\n<!-- Next/prev buttons -->\n<a class=\"prev\" onclick=\"plusSlides(-1)\">&#10094;</a>\n<a class=\"next\" onclick=\"plusSlides(1)\">&#10095;</a>\n</div>\n\n<!-- Dots/bullets/indicators -->\n<div class=\"dot-container\">\n<span class=\"dot\" onclick=\"currentSlide(1)\"></span>\n<span class=\"dot\" onclick=\"currentSlide(2)\"></span>\n<span class=\"dot\" onclick=\"currentSlide(3)\"></span>\n</div>",
        "/* Slideshow container */\n.slideshow-container {\nposition: relative;\nbackground: #f1f1f1f1;\n}\n\n/* Slides */\n.mySlides {\ndisplay: none;\npadding: 80px;\ntext-align: center;\n}\n\n/* Next & previous buttons */\n.prev, .next {\ncursor: pointer;\nposition: absolute;\ntop: 50%;\nwidth: auto;\nmargin-top: -30px;\npadding: 16px;\ncolor: #888;\nfont-weight: bold;\nfont-size: 20px;\nborder-radius: 0 3px 3px 0;\nuser-select: none;\n}\n\n/* Position the \"next button\" to the right */\n.next {\nposition: absolute;\nright: 0;\nborder-radius: 3px 0 0 3px;\n}\n\n/* On hover, add a black background color with a little bit see-through */\n.prev:hover, .next:hover {\nbackground-color: rgba(0,0,0,0.8);\ncolor: white;\n}\n\n/* The dot/bullet/indicator container */\n.dot-container {\ntext-align: center;\npadding: 20px;\nbackground: #ddd;\n}\n\n/* The dots/bullets/indicators */\n.dot {\ncursor: pointer;\nheight: 15px;\nwidth: 15px;\nmargin: 0 2px;\nbackground-color: #bbb;\nborder-radius: 50%;\ndisplay: inline-block;\ntransition: background-color 0.6s ease;\n}\n\n/* Add a background color to the active dot/circle */\n.active, .dot:hover {\nbackground-color: #717171;\n}\n\n/* Add an italic font style to all quotes */\nq {font-style: italic;}\n\n/* Add a blue color to the author */\n.author {color: cornflowerblue;}",
        "var slideIndex = 1;\nshowSlides(slideIndex);\n\nfunction plusSlides(n) {\nshowSlides(slideIndex += n);\n}\n\nfunction currentSlide(n) {\nshowSlides(slideIndex = n);\n}\n\nfunction showSlides(n) {\nvar i;\nvar slides = document.getElementsByClassName(\"mySlides\");\nvar dots = document.getElementsByClassName(\"dot\");\nif (n > slides.length) {slideIndex = 1}\nif (n < 1) {slideIndex = slides.length}\nfor (i = 0; i < slides.length; i++) {\nslides[i].style.display = \"none\";\n}\nfor (i = 0; i < dots.length; i++) {\ndots[i].className = dots[i].className.replace(\" active\", \"\");\n}\nslides[slideIndex-1].style.display = \"block\";\ndots[slideIndex-1].className += \" active\";\n}"
      ]
    },
    {
      "title": "How TO - Closable List Items",
      "summary": "Learn how to close list items with JavaScript.\nClosable List Items\nClick on the \"x\" symbol to the right of the list item to close/hide it.\nAdele\nAgnes×\nBilly×\nBob×\nCalvin×\nChristina×\nCindy\nTry it Yourself »\nHow To Create Closable List Items\nExample\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<ul>\n<li>Adele</li>\n<li>Agnes<span class=\"close\">x</span></li>\n\n<li>Billy<span class=\"close\">x</span></li>\n<li>Bob<span class=\"close\">x</span></li>\n\n<li>Calvin<span class=\"close\">x</span></li>\n<li>Christina<span class=\"close\">x</span></li>\n<li>Cindy</li>\n</ul>",
        "* {\nbox-sizing: border-box;\n}\n\n/* Style the list (remove margins and bullets, etc) */\nul {\nlist-style-type: none;\npadding: 0;\nmargin: 0;\n}\n\n/* Style the list items */\nul li {\nborder: 1px solid #ddd;\nmargin-top: -1px; /* Prevent double borders */\nbackground-color: #f6f6f6;\npadding: 12px;\ntext-decoration: none;\nfont-size: 18px;\ncolor: black;\ndisplay: block;\nposition: relative;\n}\n\n/* Add a light grey background color on hover */\nul li:hover {\nbackground-color: #eee;\n}\n\n/* Style the close button (span) */\n.close {\ncursor: pointer;\nposition: absolute;\ntop: 50%;\nright: 0%;\npadding: 12px 16px;\ntransform: translate(0%, -50%);\n}\n\n.close:hover {background: #bbb;}",
        "// Get all elements with class=\"close\"\nvar closebtns = document.getElementsByClassName(\"close\");\nvar i;\n\n// Loop through the elements, and hide the parent, when clicked on\nfor (i = 0; i < closebtns.length; i++) {\nclosebtns[i].addEventListener(\"click\", function() {\nthis.parentElement.style.display = 'none';\n});\n}"
      ]
    },
    {
      "title": "How TO - Typical Device Breakpoints",
      "summary": "Learn how to use media queries for common device breakpoints.\nTypical Device Breakpoints\nThere are tons of screens and devices with different heights and widths, so it is hard to create an exact breakpoint for each device. To keep things simple you could target five common groups:\nExample\nRelated Pages\nCSS Tutorial: CSS Media Queries\nCSS Tutorial: CSS Media Queries Examples\nCSS Reference: The @media rule\nRWD Tutorial: Responsive Web Design with Media Queries\nJavaScript Tutorial: The window.matchMedia() method",
      "examples": [
        "/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {...}\n\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {...}\n\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {...}\n\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {...}\n\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {...}"
      ]
    },
    {
      "title": "How TO - Create a Draggable HTML Element",
      "summary": "Learn how to create a draggable HTML element with JavaScript and CSS.\nDraggable DIV Element\nMove\nthis\nDIV\nCreate a Draggable DIV Element\nExample\nThe only important style is position: absolute, the rest is up to you:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- Draggable DIV -->\n<div id=\"mydiv\">\n<!-- Include a header DIV with the same name as the draggable DIV, followed by \"header\" -->\n<div id=\"mydivheader\">Click here to move</div>\n<p>Move</p>\n<p>this</p>\n<p>DIV</p>\n</div>",
        "#mydiv {\nposition: absolute;\nz-index: 9;\nbackground-color: #f1f1f1;\nborder: 1px solid #d3d3d3;\ntext-align: center;\n}\n\n#mydivheader {\npadding: 10px;\ncursor: move;\nz-index: 10;\nbackground-color: #2196F3;\ncolor: #fff;\n}",
        "// Make the DIV element draggable:\ndragElement(document.getElementById(\"mydiv\"));\n\nfunction dragElement(elmnt) {\nvar pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\nif (document.getElementById(elmnt.id + \"header\")) {\n// if present, the header is where you move the DIV from:\ndocument.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\n} else {\n// otherwise, move the DIV from anywhere inside the DIV:\nelmnt.onmousedown = dragMouseDown;\n}\n\nfunction dragMouseDown(e) {\ne = e || window.event;\ne.preventDefault();\n// get the mouse cursor position at startup:\npos3 = e.clientX;\npos4 = e.clientY;\ndocument.onmouseup = closeDragElement;\n// call a function whenever the cursor moves:\ndocument.onmousemove = elementDrag;\n}\n\nfunction elementDrag(e) {\ne = e || window.event;\ne.preventDefault();\n// calculate the new cursor position:\npos1 = pos3 - e.clientX;\npos2 = pos4 - e.clientY;\npos3 = e.clientX;\npos4 = e.clientY;\n// set the element's new position:\nelmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\nelmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n}\n\nfunction closeDragElement() {\n// stop moving when mouse button is released:\ndocument.onmouseup = null;\ndocument.onmousemove = null;\n}\n}",
        "position: absolute"
      ]
    },
    {
      "title": "How TO - Media Queries with JavaScript",
      "summary": "Example\nIf the viewport is less than, or equal to, 700 pixels wide, change the background color to yellow. If it is greater than 700, change it to pink\nUsing Media Queries With JavaScript\nMedia queries was introduced in CSS3, and is one of the key ingredients for responsive web design. Media queries are used to determine the width and height of a viewport to make web pages look good on all devices (desktops, laptops, tablets, phones, etc).\nThe window.matchMedia() method returns a MediaQueryList object representing the results of the specified CSS media query string. The value of the matchMedia() method can be any of the media features of the CSS @media rule, like min-height, min-width, orientation, etc.\nLearn more about media queries in our CSS Media Queries Tutorial\nLearn more about responsive design in our Responsive Web Design Tutorial\nLearn more about the window.matchMedia() method in our JavaScript Reference.",
      "examples": [
        "function myFunction(x) {\nif (x.matches) { // If media query matches\ndocument.body.style.backgroundColor = \"yellow\";\n} else {\ndocument.body.style.backgroundColor = \"pink\";\n}\n}\n\n// Create a MediaQueryList object\nvar x = window.matchMedia(\"(max-width: 700px)\")\n\n// Call listener function at run time\nmyFunction(x);\n\n// Attach listener function on state changes\nx.addEventListener(\"change\", function() {\nmyFunction(x);\n});"
      ]
    },
    {
      "title": "How TO - Create a Syntax Highlighter",
      "summary": "Learn how to create and use a Syntax Highlighter.\nSyntax Highlighter\nCode snippets are easier to read when you add some color:\nToggle Syntax Higlighting\nHow To Create a Syntax Highlighter\nExample\nA <div> containing HTML code:\nExample\nCreate a function called \"w3CodeColor\" and call it, using the DIV element as a parameter:",
      "examples": [
        "<div id=\"myDiv\">\n&lt;!DOCTYPE html&gt;<br>\n&lt;html&gt;<br>\n&lt;body&gt;<br>\n<br>\n&lt;h1&gt;Testing an HTML Syntax Highlighter&lt;/h2&gt;<br>\n&lt;p&gt;Hello world!&lt;/p&gt;<br>\n&lt;a href=\"https://www.w3schools.com\"&gt;Back to School&lt;/a&gt;<br>\n<br>\n&lt;/body&gt;<br>\n&lt;/html&gt;\n</div>",
        "w3CodeColor(document.getElementById(\"myDiv\"));\n\nfunction w3CodeColor(elmnt) {\n// click \"Try it Yourself\" to see the JavaScript...\n}"
      ]
    },
    {
      "title": "How TO - JavaScript HTML Animations",
      "summary": "Learn how to create animations using JavaScript.\nTry it Yourself »\nA Basic Web Page\nTo demonstrate how to create HTML animations with JavaScript, we can use a simple web page.\nExample\nREMOVE ADS\nStyling the Elements\nTo make an animation possible, the animated element must be animated relative to a \"parent container\".\nThe container element should be created with style = \"position: relative\".\nThe animation element should be created with style = \"position: absolute\".\nExample\nThe Animation Code\nJavaScript animations are done by programming gradual changes in an element's style.\nThe changes are called by a timer. When the timer interval is small, the animation looks continuous.\nThe basic code is:\nExample\nCreate the Animation Using JavaScript\nExample",
      "examples": [
        "<!DOCTYPE html>\n<html>\n<body>\n\n<h1>My First JavaScript Animation</h1>\n\n<div id =\"myContainer\">\n<div id =\"myAnimation\">My animation will go here</div>\n</div>\n\n</body>\n<html>",
        "#myContainer {\nwidth: 400px;\nheight: 400px;\nposition: relative;\nbackground: yellow;\n}\n\n#myAnimation {\nwidth: 50px;\nheight: 50px;\nposition: absolute;\nbackground: red;\n}",
        "var id = setInterval(frame, 5);\n\nfunction frame() {\nif (/* test for finished */) {\nclearInterval(id);\n} else {\n/* code to change the element style */\n}\n}",
        "var id = null;\nfunction myMove() {\nvar elem = document.getElementById(\"myAnimation\");\nvar pos = 0;\nclearInterval(id);\nid = setInterval(frame, 10);\nfunction frame() {\nif (pos == 350) {\nclearInterval(id);\n} else {\npos++;\nelem.style.top = pos + 'px';\nelem.style.left = pos + 'px';\n}\n}\n}"
      ]
    },
    {
      "title": "How TO - Get The Length of a String",
      "summary": "Learn how to find the length of a string in JavaScript.\nString Length\nThe length property returns the length of a string:\nExample\nRead more about strings in our JavaScript Strings Tutorial.\nRead more about the length property in our JavaScript String length Reference.",
      "examples": [
        "var txt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nvar len = txt.length;",
        "length"
      ]
    },
    {
      "title": "How TO - JavaScript Exponentiation (**)",
      "summary": "Learn how to use JavaScript Exponentiation (**).\nExponentiation Operator\nThe exponentiation operator (**) raises the first operand to the power of the second operand:\nExample\nx ** y produces the same result as Math.pow(x, y):\nExample\nExponentiation Assignment\nThe exponentiation assignment operator (**=) raises the value of a variable to the power of the right operand.\nExample\nRead more about JavaScript Operators in our JavaScript Operator Tutorial.",
      "examples": [
        "let x = 5;\nlet z = x ** 2; // result is 25",
        "let x = 5;\nlet z = Math.pow(x,2); // result is 25",
        "let x = 5;\nx **= 2; // result 25",
        "**",
        "x ** y",
        "Math.pow(x, y)",
        "**="
      ]
    },
    {
      "title": "How TO - Set Default Parameters",
      "summary": "Learn how to set default parameter values for JavaScript functions.\nDefault Parameters\nIf a function in JavaScript is called with missing arguments (less than declared), the missing values are set to undefined.\nSometimes this is acceptable, but sometimes it is better to assign a default value to the parameter:\nExample\nECMAScript 2015 allows default parameter values in the function declaration:\nRead more about functions in our JavaScript Function Tutorial.",
      "examples": [
        "function myFunction(x, y) {\nif (y === undefined) {\ny = 2;\n}\n}",
        "function myFunction (x, y = 2) {\n// function code\n}",
        "undefined"
      ]
    },
    {
      "title": "How TO - Random Number Between Two Numbers",
      "summary": "Learn how to get a random number between two numbers in JavaScript.\nRandom Numbers\nThis JavaScript function always returns a random number between a minimum (included) and maximum number (excluded):\nExample\nThis JavaScript function always returns a random number between min and max (both included):\nExample\nRead more about Random Numbers in our JavaScript Random Tutorial.",
      "examples": [
        "function getRndInteger(min, max) {\nreturn Math.floor(Math.random() * (max - min) ) + min;\n}",
        "function getRndInteger(min, max) {\nreturn Math.floor(Math.random() * (max - min + 1) ) + min;\n}"
      ]
    },
    {
      "title": "How TO - Sort Numeric Array",
      "summary": "Learn how to sort an array numerically in JavaScript.\nSort an Array Numerically\nYou can use the folllowing to sort an array numerically:\nExample\nYou can also sort the array descending:\nExample\nRead more about how to sort arrays in our JavaScript Sorting Arrays Tutorial.",
      "examples": [
        "const points = [40, 100, 1, 5, 25, 10];\npoints.sort(function(a, b){return a - b});"
      ]
    },
    {
      "title": "How TO - The Spread Operator (...)",
      "summary": "Learn how to use the three dots operator (...) a.k.a the spread operator in JavaScript.\nThe Spread Operator\nThe JavaScript spread operator (...) expands an iterable (like an array) into more elements.\nThis allows us to quickly copy all or parts of an existing array into another array:\nExample\nAssign the first and second items from numbers to variables and put the rest in an array:\nThe spread operator is often used to extract only what's needed from an array:\nExample\nWe can use the spread operator with objects too:\nExample\nNotice the properties that did not match were combined, but the property that did match, color, was overwritten by the last object that was passed, updateMyVehicle. The resulting color is now yellow.\nSee also: JavaScript ES6 Tutorial.",
      "examples": [
        "const numbersOne = [1, 2, 3];\nconst numbersTwo = [4, 5, 6];\nconst numbersCombined = [...numbersOne, ...numbersTwo];",
        "const numbers = [1, 2, 3, 4, 5, 6];\n\nconst [one, two, ...rest] = numbers;",
        "const myVehicle = {\nbrand: 'Ford',\nmodel: 'Mustang',\ncolor: 'red'\n}\n\nconst updateMyVehicle = {\ntype: 'car',\nyear: 2021,\ncolor: 'yellow'\n}\n\nconst myUpdatedVehicle = {...myVehicle, ...updateMyVehicle}",
        "...",
        "numbers",
        "color",
        "updateMyVehicle"
      ]
    },
    {
      "title": "How TO - Scroll Into View",
      "summary": "Learn how to scroll into view with JavaScript.\nThe scrollIntoView() Method\nThe scrollIntoView() method scrolls an element into the visible area of the browser window.\nExample\nScroll the element with id=\"content\" into the visible area of the browser window:\nLearn more about the scrollIntoView() method in our JavaScript Reference.",
      "examples": [
        "const element = document.getElementById(\"content\");\nelement.scrollIntoView();",
        "scrollIntoView()"
      ]
    },
    {
      "title": "How TO - Get Current Date With JavaScript",
      "summary": "Learn how to get the current date with JavaScript.\nCurrent Date\nUse new Date() to get the current date:\nExample\nRead more about Dates in our JavaScript Dates Tutorial.",
      "examples": [
        "const d = new Date();",
        "new Date()"
      ]
    },
    {
      "title": "How TO - Get Current URL With JavaScript",
      "summary": "Learn how to get the current URL with JavaScript.\nCurrent URL\nUse window.location.href to get the current URL address:\nExample\nRead more about the window.location object in our JavaScript Window Location Tutorial.",
      "examples": [
        "document.getElementById(\"demo\").innerHTML =\n\"The full URL of this page is:<br>\" + window.location.href;",
        "window.location.href",
        "window.location"
      ]
    },
    {
      "title": "How TO - Get The Current Screen Size",
      "summary": "Learn how to get the current screen size/browser window with JavaScript.\nCurrent Screen Size\nUse window.innerWidth and window.innerHeight to get the current screen size of a page.\nThis example displays the browser window's height and width (NOT including toolbars/scrollbars):\nExample\nRead more about the window object in our JavaScript Window Tutorial.",
      "examples": [
        "var w = window.innerWidth;\nvar h = window.innerHeight;",
        "window.innerWidth",
        "window.innerHeight",
        "window"
      ]
    },
    {
      "title": "How TO - Get Iframe Elements",
      "summary": "Get an element from within an iframe with JavaScript.\nClick the button to hide the first H1 element in the iframe (another document).\nGet Element in Iframe\nGet the first <h1> element inside the iframe and hide it:\nExample",
      "examples": [
        "var iframe = document.getElementById(\"myFrame\");\nvar elmnt = iframe.contentWindow.document.getElementsByTagName(\"H1\")[0];\nelmnt.style.display = \"none\";"
      ]
    },
    {
      "title": "How TO - Create a Free Website",
      "summary": "Build and host your website with W3Schools Spaces.\nGet started with your free website in a few clicks.\nEverything you need right in the browser.\nIt is easy to use - try it!\nCreate Your First Website with W3Schools Spaces\nW3Schools Spaces is a personal place where you can build and experiment with code and host your own website.\nWith W3Schools Spaces you can build with HTML, CSS and JavaScript.\nEdit code directly in your browser.\nUpload and host your files and images.\nStart to grow your online presence today!\nWhy Build with W3Schools Spaces?\nSpaces is made by web developers for web developers.\nThe interface is simple and easy to use.\nHost and edit your files right in the browser.\nFree templates.\nIt is free to get started and you do not have to enter your credit card.\nEdit and Preview Code\nThe editor is easy to use - which helps you to focus on the most imporant things.\nCheck the responsiveness of your site with the different preview alternatives.\nPreview changes on your site, live!\nBuild From Anywhere\nHost your files and images in the cloud.\nKeep organized by creating a structure with folders.\nEverything you need right in the browser.\nFree Templates\nBrowse and use our responsive website templates.\nModify, save, share, and use them in your projects.\nThe templates are powered by W3.CSS\nREMOVE ADS\nWhat Do I Need to Know to Get Started?\nHTML, CSS and JavaScript are the foundational languages to build a website.\nCreate the structure with HTML. The first thing you have to learn, is HTML, which is the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nDo not worry if you do not know how to code. The most important thing is to get hands on, early on. Learning how to code is best done with getting practical. Start to build something today!\nLets Get Started in a Few Steps\nDo you already have a W3Schools Account? If so, skip the first step\nStep One: Sign Up For an Account\nTo be able to use Spaces you need to sign up and get your account.\nLets get you set up!\nGo to W3Schools Profile - Click \"Sign up\" and enter your email and password, then click the \"Sign up for free\" button.\nRemember to validate your account in your email. Check the spam filter if you cannot find the validation email in your inbox.\nGet more information about how to sign up in our article - How to sign up\nStep Two: Start with a template or HTML skeleton\nGo to W3Schools Spaces\nSelect one of the options and click the \"Continue\" button.\nDo not worry too much about this decision. You can reset your Space and start over again whenever you want.\nStep Three: Give your space a name\nPersonalize your Space by giving it an amazing name.\nYou can not use special letters in the name, such as (#, ! or :). The only exception is dash ( - )\nThe name will be the link that you share with others to see your site. For example: yourname.w3spaces.com\nStep Four: Enter your space\nGreat job! you made it to the dashboard.\nIn the dashboard you get an overview of your spaces and usage.\nEnter your space and its File Overview by clicking somewhere on the space's row or click the button with the three dots to the right inside the row.\nYou can only have one space with the free plan. However, you can always upgrade to get more spaces.\nStep Five: Edit code or upload files\nThis is where the magic happens!\nStart to edit code or upload files\nEdit code by clicking on the \"Pen icon\" to the right of the file that you want to edit.\nCreate new files by clicking on the \"New file\" button.\nUpload files by clicking on the \"Upload files\" button.\nStep Six: Publish your site and share it with someone\nThis is the start of building your online presence.\nLearn, test, build, and go live with your space.\nCreate your website and share it with others.\nNote: Your space name with the .w3spaces.com extension is your shareable link. Read more about how to share your space in this article How can I share my space?\nW3Schools Spaces\nW3Schools Spaces\nBuild your own website with W3Schools Spaces.",
      "examples": []
    },
    {
      "title": "How TO - Make a Website",
      "summary": "Learn how to create a responsive website that will work on all devices, PC, laptop, tablet, and phone.\nCreate a Website from Scratch\nA \"Layout Draft\"\nIt can be wise to draw a layout draft of the page design before creating a website:\nSide Content\nSome text some text..\nMain Content\nSome text some text..\nSome text some text..\nSome text some text..\nFirst Step - Basic HTML Page\nHTML is the standard markup language for creating websites and CSS is the language that describes the style of an HTML document. We will combine HTML and CSS to create a basic web page.\nNote: If you don't know HTML and CSS, we suggest that you start by reading our HTML Tutorial.\nExample\nExample Explained\nThe <!DOCTYPE html> declaration defines this document to be HTML5\nThe <html> element is the root element of an HTML page\nThe <head> element contains meta information about the document\nThe <title> element specifies a title for the document\nThe <meta> element should define the character set to be UTF-8\nThe <meta> element with name=\"viewport\" makes the website look good on all devices and screen resolutions\nThe <style> element contains the styles for the website (layout/design)\nThe <body> element contains the visible page content\nThe <h1> element defines a large heading\nThe <p> element defines a paragraph\nCreating Page Content\nInside the <body> element of our website, we will use our \"Layout Draft\" and create:\nA header\nA navigation bar\nMain content\nSide content\nA footer\nHeader\nA header is usually located at the top of the website (or right below a top navigation menu). It often contains a logo or the website name:\nThen we use CSS to style the header:\nTry it Yourself »\nREMOVE ADS\nNavigation Bar\nA navigation bar contains a list of links to help visitors navigating through your website:\nUse CSS to style the navigation bar:\nTry it Yourself »\nContent\nCreate a 2-column layout, divided into a \"side content\" and a \"main content\".\nWe use CSS Flexbox to handle the layout:\nTry it Yourself »\nThen add media queries to make the layout responsive. This will make sure that your website looks good on all devices (desktops, laptops, tablets and phones). Resize the browser window to see the result.\nTry it Yourself »\nTip: To create a different kind of layout, just change the flex width (but make sure that it adds up to 100%).\nTip: Do you wonder how the @media rule works? Read more about it in our CSS Media Queries chapter.\nTip: To learn more about the Flexible Box Layout Module, read our CSS Flexbox chapter.\nWhat is box-sizing?\nYou can easily create three floating boxes side by side. However, when you add something that enlarges the width of each box (e.g. padding or borders), the box will break. The box-sizing property allows us to include the padding and border in the box's total width (and height), making sure that the padding stays inside of the box and that it does not break.\nYou can read more about the box-sizing property in our CSS Box Sizing Tutorial.\nFooter\nAt last, we will add a footer.\nAnd style it:\nTry it Yourself »\nCongratulations! You have built a responsive website from scratch.\nW3Schools Spaces\nIf you want to create your own website and host your .html files, try our website builder, called W3schools Spaces:",
      "examples": [
        "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Page Title</title>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\nbody {\nfont-family: Arial, Helvetica, sans-serif;\n}\n</style>\n</head>\n<body>\n\n<h1>My Website</h1>\n<p>A website created by me.</p>\n\n</body>\n</html>",
        "<div class=\"header\">\n<h1>My Website</h1>\n<p>A website created by me.</p>\n</div>",
        ".header {\npadding: 80px; /* some padding */\ntext-align: center; /* center the text */\nbackground: #1abc9c; /* green background */\ncolor: white; /* white text color */\n}\n\n/* Increase the font size of the <h1> element */\n.header h1 {\nfont-size: 40px;\n}",
        "<div class=\"navbar\">\n<a href=\"#\">Link</a>\n<a href=\"#\">Link</a>\n<a href=\"#\">Link</a>\n<a href=\"#\" class=\"right\">Link</a>\n</div>",
        "/* Style the top navigation bar */\n.navbar {\noverflow: hidden; /* Hide overflow */\nbackground-color: #333; /* Dark background color */\n}\n\n/* Style the navigation bar links */\n.navbar a {\nfloat: left; /* Make sure that the links stay side-by-side */\ndisplay: block; /* Change the display to block, for responsive reasons (see below) */\ncolor: white; /* White text color */\ntext-align: center; /* Center the text */\npadding: 14px 20px; /* Add some padding */\ntext-decoration: none; /* Remove underline */\n}\n\n/* Right-aligned link */\n.navbar a.right {\nfloat: right; /* Float a link to the right */\n}\n\n/* Change color on hover/mouse-over */\n.navbar a:hover {\nbackground-color: #ddd; /* Grey background color */\ncolor: black; /* Black text color */\n}",
        "<div class=\"row\">\n<div class=\"side\">...</div>\n<div class=\"main\">...</div>\n</div>",
        "/* Ensure proper sizing */\n* {\nbox-sizing: border-box;\n}\n\n/* Column container */\n.row {\ndisplay: flex;\nflex-wrap: wrap;\n}\n\n/* Create two unequal columns that sits next to each other */\n/* Sidebar/left column */\n.side {\nflex: 30%; /* Set the width of the sidebar */\nbackground-color: #f1f1f1; /* Grey background color */\npadding: 20px; /* Some padding */\n}\n\n/* Main column */\n.main {\nflex: 70%; /* Set the width of the main content */\nbackground-color: white; /* White background color */\npadding: 20px; /* Some padding */\n}",
        "/* Responsive layout - when the screen is less than 700px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 700px) {\n.row {\nflex-direction: column;\n}\n}\n\n/* Responsive layout - when the screen is less than 400px wide, make the navigation links stack on top of each other instead of next to each other */\n@media screen and (max-width: 400px) {\n.navbar a {\nfloat: none;\nwidth: 100%;\n}\n}",
        "<div class=\"footer\">\n<h2>Footer</h2>\n</div>",
        ".footer {\npadding: 20px; /* Some padding */\ntext-align: center; /* Center text*/\nbackground: #ddd; /* Grey background */\n}",
        "<!DOCTYPE html>",
        "<html>",
        "<head>",
        "<title>",
        "<meta>",
        "<style>",
        "<body>",
        "<h1>",
        "<p>",
        "box-sizing"
      ]
    },
    {
      "title": "How TO - Make a Static Website",
      "summary": "A static website has fixed content\nIt does not require programming languages to build one.\nIt is the easiest form of website to create.\nStatic websites are build of HTML, CSS, and JavaScript.\nWhy create a static website?\nStatic websites are quick and easy to create.\nIt is cheap to host.\nStatic websites are secure.\nIt is fun and you can create awesome sites with HTML, CSS, and JavaScript.\nWhat do I need to know to build a static website\nHTML, CSS and JavaScript are the basic languages to build any website.\nCreate the structure with HTML. The first thing you have to learn, is HTML, which is the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nThe best way to learn is to get practical. Start building today!\nCreate a static website with W3Schools Spaces\nSpaces is a personal place where you can build and experiment with code and host your website.\nWith Spaces you can build static sites with HTML, CSS, and JavaScript.\nEverything you need right in the browser.\nHow do I get started\nThere are two ways to start building a static website.\nBuilding from scratch or using a template.\nREMOVE ADS\nBuilding a static webpage from scratch\nRead here for how to create a static website from scratch How to Create a Webpage\nBuilding with a template\nStarting with templates is a good way to get inspired and to learn.\nWe have ready-made templates that you can use. Here are some examples:\nThere are many static website templates available in W3Schools Spaces. They can be loaded directly into the service.\n* no credit card required\nFashion Blog Template\nPhoto Portfolio Template\nParallax Template\nW3Schools Spaces\nW3Schools Spaces\nBuild your static website with W3Schools Spaces.",
      "examples": []
    },
    {
      "title": "How To Host a Static Website",
      "summary": "To host a static website, you need a web hosting provider.\nW3Schools provides W3Schools Spaces to host your static website.\nWith Spaces, you can easily host your website with a few clicks.\nIt allows you to make static sites with HTML, CSS, and JavaScript.\nHosting Made Easy\nW3Schools Spaces saves you time compared to traditional hosting.\nYou don't have to set up SSL certificates on your own.\nSpaces are secure by default.\nThe complexity of hosting a website is hidden.\nYou can have your files up and running fast.\nEdit the code directly in the browser!\nSecure Website\nW3Schools handles the security for you.\nYour Space runs on HTTPS protocol.\nEach Space has an SSL certificate.\nSSL certificate is a small file that secures your Space in more ways:\nIt keeps user data secure\nIt prevents website attacks\nEncrypted website traffic\nVerifies website ownership\nUsers are more likely to trust and visit a secure website.\nThe S in the HTTPS protocol stands for Secure.\nIt makes your traffic encrypted and secure.\nHow Do I Get Started?\nGet started in a few steps:\nCreate your account\nCreate your space\nAdd your files\nPreview your website\nThe steps are explained in the follwing sections.\nCreate Your W3Schools Account\nTo create an account, you need to Sign up.\nSign up with an email and a password.\nW3Schools Spaces Signup Form\nCreate Your Space\nMake your account and head over to Spaces.\nThere is a button named \"Create a space\" in the top right corner.\nClicking the button leads you to the space creation page.\nCreate a Space image\nYou can either start with a blank space or choose a template.\nLet's pick the blank space option and click \"Continue\".\nName Your Space\nSelecting the blank space option lets you name the space.\nSo give your space a cool name.\nNaming your space image\nYour Space name is a part of the Space URL.\nClick the \"Continue\" button to move on.\nPreview Your Spaces\nChoosing a name for your space takes you to the Spaces overview.\nThe overview is a summary of your Spaces.\nThings you see in the summary are:\nSpace name\nSpace URL\nVisitors number\nData usage\nStorage usage\nFiles number\nAdditional actions button\nThe Spaces summary help you see how much traffic you have per Space.\nSpaces summary image\nUpload Your Files\nTo upload your files, first, you must open your Space file manager page.\nYou can upload your files by clicking on the \"Upload files\" button.\nThe \"Upload files\" button is found on the right side of the Spaces summary page.\nSpaces file manager image\nYou can create a new file with the \"New file\" button.\nNote that the file for your home page must be named index.html.\nThe file name index is what browsers will search for as your website starting page.\nPreview Your Website\nYour space URL is a combination your Space name and w3spaces subdomain.\nFor example, if your Space is named jane-doe, your Space URL is jane-doe.w3spaces.com.\nYou can share your Space URL with others.\nYou Made It!\nCongratulations!\nYou successfully hosted your static website.\nWant to know how to make a website from scratch? Read our article on how to make a website from scratch.\nW3Schools Spaces\nW3Schools Spaces\nEverything you need right in the browser. It is easy to use - try it!",
      "examples": []
    },
    {
      "title": "How TO - Build a Website",
      "summary": "Learn how to create a fast and awesome responsive website that will work on all devices, PC, laptop, tablet, and phone.\nCreate a Website with a CSS Framework\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template.\n* no credit card required\nA \"Layout Draft\"\nIt is always wise to draw a layout draft of the page design before building a website.\nHaving a \"Layout Draft\" will make it a lot easier to create a web site:\nThe Band\nDescription of the band\nDescription of the band\nDescription of the band\nArticle\nArticle\nArticle\nDoctype, Meta Tags, and CSS\nThe doctype should define the page as an HTML5 document:\nA meta tag should define the character set to be UTF-8:\nA viewport meta tag should make the web site work on all devices and screen resolutions:\nW3.CSS should take care of all our styling needs and all device and browser differences:\nTo learn more about styling with W3.CSS, please visit our W3.CSS Tutorial.\nOur first empty web page will look much like this:\nNote: If you want to create a website from scratch, without the help of a CSS framework, read our How To Make a Website Tutorial.\nCreating Page Content\nInside the <body> element of our web site we will use our \"Layout Picture\" and create:\nA navigation bar\nA slide show\nA header\nSome sections and articles\nA footer\nSemantic Elements\nHTML5 introduced several new semantic elements. Semantic elements are important to use because they define the structure of web pages and helps screen readers and search engines to read the page correctly.\nThese are some of the most common semantic HTML elements:\nThe <section> element can be used to define a part of a website with related content.\nThe <article> element can be used to define an individual piece of content.\nThe <header> element can be used to define a header (in a document, a section, or an article).\nThe <footer> element can be used to define a footer (in a document, a section, or an article).\nThe <nav> element can be used to define a container of navigation links.\nIn this tutorial we will use semantic elements.\nHowever, it is up to you if you want to use <div> elements instead.\nThe Navigation Bar\nOn our \"Layout Draft\" we have a \"Navigation bar\".\nTry it Yourself »\nWe can use a <nav> or <div> element as a container for the navigation links.\nThe w3-bar class is a container for navigation links.\nThe w3-black class defines the color of the navigation bar.\nThe w3-bar-item and w3-button class styles the navigation links inside the bar.\nREMOVE ADS\nSlide Show\nOn the \"Layout Draft\" we have a \"Slide show\".\nFor the slide show we can use a <section> or <div> element as a picture container:\nTry it Yourself »\nWe need to add a little JavaScript to change the images every 3 seconds:\nTry it Yourself »\nSections and Articles\nLooking at the \"Layout Draft\" we can see that the next step is to create articles.\nFirst we will create a <section> or <div> element containing band information:\nTry it Yourself »\nThe w3-container class takes care of standard padding.\nThe w3-center class centers the content.\nThe w3-wide class provides a wider heading.\nThe w3-opacity class provides text transparency.\nThe max-width style sets a maximum with of the band description section.\nThen we will add a paragraph describing the band:\nTry it Yourself »\nThe w3-justify class justifies the text's right and left margins.\nThen create a <section> or <div> with an <article> or <div> about each band-member:\nTry it Yourself »\nFooter\nFinally we will use a <footer> or <div> to create a footer:\nTry it Yourself »\nThe fa fa classes are Font Awesome Icon classes.\nTo use these classes you must link to a Font Awesome library:\nTo learn more about using icons, please visit our Icons Tutorial.",
      "examples": [
        "<!DOCTYPE html>",
        "<meta charset=\"UTF-8\">",
        "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
        "<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/3/w3.css\">",
        "<!DOCTYPE html>\n<html>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/3/w3.css\">\n<body>\n\n<!-- Content will go here -->\n\n</body>\n</html>",
        "<!-- Navigation -->\n<nav class=\"w3-bar w3-black\">\n<a href=\"#home\" class=\"w3-button w3-bar-item\">Home</a>\n<a href=\"#band\" class=\"w3-button w3-bar-item\">Band</a>\n<a href=\"#tour\" class=\"w3-button w3-bar-item\">Tour</a>\n<a href=\"#contact\" class=\"w3-button w3-bar-item\">Contact</a>\n</nav>",
        "<!-- Slide Show -->\n<section>\n<img class=\"mySlides\" src=\"img_la.jpg\" style=\"width:100%\">\n<img class=\"mySlides\" src=\"img_ny.jpg\" style=\"width:100%\">\n<img class=\"mySlides\" src=\"img_chicago.jpg\" style=\"width:100%\">\n</section>",
        "// Automatic Slideshow - change image every 3 seconds\nvar myIndex = 0;\ncarousel();\n\nfunction carousel() {\nvar i;\nvar x = document.getElementsByClassName(\"mySlides\");\nfor (i = 0; i < x.length; i++) {\nx[i].style.display = \"none\";\n}\nmyIndex++;\nif (myIndex > x.length) {myIndex = 1}\nx[myIndex-1].style.display = \"block\";\nsetTimeout(carousel, 3000);\n}",
        "<section class=\"w3-container w3-center\" style=\"max-width:600px\">\n<h2 class=\"w3-wide\">THE BAND</h2>\n<p class=\"w3-opacity\"><i>We love music</i></p>\n</section>",
        "<section class=\"w3-container w3-content w3-center\" style=\"max-width:600px\">\n<p class=\"w3-justify\">\nWe have created a fictional band website. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n</section>",
        "<section class=\"w3-row-padding w3-center w3-light-grey\">\n<article class=\"w3-third\">\n<p>John</p>\n<img src=\"img_bandmember.jpg\" alt=\"Random Name\" style=\"width:100%\">\n</article>\n<article class=\"w3-third\">\n<p>Paul</p>\n<img src=\"img_bandmember.jpg\" alt=\"Random Name\" style=\"width:100%\">\n</article>\n<article class=\"w3-third\">\n<p>Ringo</p>\n<img src=\"img_bandmember.jpg\" alt=\"Random Name\" style=\"width:100%\">\n</article>\n</section>",
        "<!-- Footer -->\n<footer class=\"w3-container w3-padding-64 w3-center w3-black w3-xlarge\">\n<a href=\"#\"><i class=\"fa fa-facebook-official\"></i></a>\n<a href=\"#\"><i class=\"fa fa-pinterest-p\"></i></a>\n<a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\n<a href=\"#\"><i class=\"fa fa-flickr\"></i></a>\n<a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\n<p class=\"w3-medium\">\nPowered by <a href=\"https://www.w3schools.com/w3css/default.asp\" target=\"_blank\">w3.css</a>\n</p>\n</footer>",
        "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\">"
      ]
    },
    {
      "title": "How TO - Make a Website with Bootstrap",
      "summary": "Learn how to create a responsive website with the Bootstrap CSS Framework.\nCreate a Website with Bootstrap 3\nBootstrap is the most popular HTML, CSS, and JavaScript framework for developing responsive, mobile-first websites. Bootstrap is completely free to download and use.\nNote: If you don't know Bootstrap, we suggest that you read our Bootstrap Tutorial.\nNote: The newest version of Bootstrap is Bootstrap 5.\nTip: Ever heard about W3Schools Spaces? Here you can create your Bootstrap website from scratch or use a template.\n* no credit card required",
      "examples": []
    },
    {
      "title": "How TO - Make a Website with Bootstrap 4",
      "summary": "Learn how to create a responsive website with Bootstrap 4.\nCreate a Website with Bootstrap 4\nBootstrap is the most popular HTML, CSS, and JavaScript framework for developing responsive, mobile-first websites. Bootstrap is completely free to download and use.\nNote: There is also a Bootstrap 3 and Bootstrap 5 (newest) version.\nNote: If you don't know Bootstrap, we suggest that you read our Bootstrap 3 Tutorial, or our Bootstrap 4 Tutorial.\nTip: Ever heard about W3Schools Spaces? Here you can create your Bootstrap website from scratch or use a template.\n* no credit card required",
      "examples": []
    },
    {
      "title": "How TO - Make a Website with Bootstrap 5",
      "summary": "Learn how to create a responsive website with Bootstrap 5.\nCreate a Website with Bootstrap 5\nBootstrap is the most popular HTML, CSS, and JavaScript framework for developing responsive, mobile-first websites. Bootstrap is completely free to download and use.\nBootstrap 5 is the newest version of Bootstrap.\nTip: Ever heard about W3Schools Spaces? Here you can create your Bootstrap website from scratch or use a template.\n* no credit card required\nNote: If you don't know Bootstrap, we suggest that you read our Bootstrap 3 Tutorial, or our Bootstrap 5 Tutorial.",
      "examples": []
    },
    {
      "title": "How TO - Create and View a Website",
      "summary": "Learn how to create and view a web page on your computer.\nStep 1: Open Notepad (PC)\nWindows 8 or later:\nOpen the Start Screen (the window symbol at the bottom left on your screen). Type Notepad.\nWindows 7 or earlier:\nOpen Start > Programs > Accessories > Notepad\nStep 1: Open TextEdit (Mac)\nOpen Finder > Applications > TextEdit\nAlso change some preferences to get the application to save files correctly. In Preferences > Format > choose \"Plain Text\"\nThen under \"Open and Save\", check the box that says \"Display HTML files as HTML code instead of formatted text\".\nThen open a new document to place the code.\nStep 2: Write Some HTML\nWrite or copy the following HTML code into Notepad:\nStep 3: Save the HTML Page\nSave the file on your computer. Select File > Save as in the Notepad menu.\nName the file \"index.htm\" and set the encoding to UTF-8 (which is the preferred encoding for HTML files).\nTip: You can use either .htm or .html as file extension. There is no difference; it is up to you.\nREMOVE ADS\nStep 4: View the HTML Page in Your Browser\nOpen the saved HTML file in your favorite browser (double click on the file, or right-click - and choose \"Open with\").\nThe result will look much like this:\nW3Schools Online Editor - \"Try it Yourself\"\nWith our free online editor, you can edit the HTML code and view the result in your browser.\nIt is the perfect tool when you want to test code fast. It also has color coding and the ability to save and share code with others:\nExample\nClick on the \"Try it Yourself\" button to see how it works.\nW3Schools Spaces\nW3Schools Spaces\nEverything you need right in the browser. It is easy to use - try it!",
      "examples": [
        "<!DOCTYPE html>\n<html>\n<body>\n\n<h1>My First Heading</h1>\n\n<p>My first paragraph.</p>\n\n</body>\n</html>",
        "<!DOCTYPE html>\n<html>\n<head>\n<title>Page Title</title>\n</head>\n<body>\n\n<h1>This is a Heading</h1>\n<p>This is a paragraph.</p>\n\n</body>\n</html>"
      ]
    },
    {
      "title": "How to make a link tree website",
      "summary": "A link tree website lets you share all your links on one site.\nIt is a landing page where you can display the links to your social networks, blog posts, businesses, projects, and more.\nWhy create a link tree website\nThe links website is great to grow your online presence.\nIt makes it easy to share links for the places where you have content.\nIn addition, the links website helps people to connect with you in more than one place.\nBy creating the links website on your own, you have complete control of it.\nHow the site looks reflect your brand. Design it the way you want to appear.\nWhat do I need to know to create my link tree website?\nHTML, CSS, and JavaScript are the basic languages to create a website.\nIt is all you need to make your links site.\nCreate the structure with HTML. The first thing you have to learn, is HTML, the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nHow do I get started\nThere are two ways to start building a link tree website.\nBuilding from scratch or using a template.\nBuild with W3Schools Spaces\nIn Spaces, you can build and experiment with your link tree website.\nHere you can make static sites with HTML, CSS, and JavaScript.\nEverything you need right in the browser.\nBuilding a link tree webpage from scratch\nThe first thing you need to do is to build a layout, then add content.\nTo create a website layout, go to our article on how to create a website: How to Create a Website\nOnce you have made the layout. Create the two main sections listed below:\n1. Bio section.\nThe bio section is the first thing people see when visiting your link tree website.\nIt is displayed on top of the link tree website.\nKeep it short and sweet.\nThe bio section can contain your image, name, and your profession.\nPeople are more comfortable connecting with you if they know your name and how you look.\n2. Links section.\nThe links section contains all the links you want to share.\nIt is displayed under the bio section.\nMake sure that the links are well structured.\nBuilding with a template\nStarting with templates is an excellent way to get inspired and to learn.\nThe link tree templates can be loaded directly in Spaces. Get started in a few clicks.\nCopy the code and paste it in the Spaces editor or save it to Spaces from the TryIt editor.\n* no credit card required\nPersonalize the template\nHere is a four-step approach to making the template your own.\nStep One: Change the background\nFind the background or background-image property in the code and change the URL.\nRead here for how to change a background image: How to change background image\nREMOVE ADS\nStep Two: Add your picture\nFind the <img> tag and change it to the URL to your picture.\nRead here for how to change an image: How to change an image\nStep Three: Write your bio\nFind the paragraph tags in the top of the code and change the text between the <p> and </p> tags.\nRead here to learn more about paragraphs: About HTML paragraphs\nStep Four: Add your links\nFind the anchor tags and change the text in between of the <a> and </a> tags.\nRead here to learn more about anchor tags: About HTML anchor tags\nBrowse and pick a template\nWe have ready-made templates for you to use. Here are some examples:\nSocial Links 1\nSocial Links 2\nSocial links 3\nW3Schools Spaces\nW3Schools Spaces\nBuild your static website with W3Schools Spaces.",
      "examples": []
    },
    {
      "title": "How to create a portfolio",
      "summary": "The portfolio is essential to get noticed.\nCreating a portfolio is a good way of growing your online presence.\nThe portfolio is used to showcase your skills and projects.\nIt can help you to get a job, freelancer gig, or, internship.\nWhat is a portfolio\nThe portfolio can have the same purpose as a CV. Most CVs are written with text, while the portfolio is for showcasing, so it is visual with images and often more detailed than the CV.\nIt is a place where you can show your work experience and showcase the projects that you are most proud of.\nYour online portfolio can be shared with its link to companies, hiring managers, and recruiters, so that they can notice you.\nIt is about showing and giving others an understanding of who you are as a professional.\nWhy create a portfolio\nIt is a great way of growing your online presence and get noticed.\nIt can be used to get a job or to attract clients to your services.\nHaving it online as a website. Makes it possible for people all over the world to find you.\nThe design of the porfolio will give the reader an impression of who you are. Make sure that it appears in a good and presentable way!\nWho is a portfolio for\nCreating a portfolio can be important for your career.\nIt can be helpful when searching for a job, a freelancing gig, or showcasing your skills towards a new client.\nTypical roles that use portfolios are professionals such as, but no limited to:\nSoftware developers\nUX designers\nGraphic designers\nPhotographers\nMarketing professionals\nArchitects\nWriters\nEver heard about W3Schools Spaces? Here you can create your portfolio from scratch or use a template.\n* no credit card required\nWhat are the most important sections in a portfolio\nThere are many different ways of creating a portfolio.\nHow to create it depends on what type of professional you are, who you are building it for, and why you are creating it.\nYou have to test, fail and learn to find out which type of portfolio that is right for you!\nThere are some sections which is essential for all types of portfolios, summarized below:\n1. Hero section.\nThe hero section is the first thing people see when they enter your portfolio.\nIt is displayed under your logo and menu.\nThe hero section helps the reader to understand what you offer, why someone should work with you, and the value that you provide with your services.\nIt often contains a call to action button like \"contact me\", \"book a meeting\" or similar.\n2. About me section.\nGive the reader a short summary about yourself.\nInclude subjects such as your education, work experience, projects and interests.\nHelp the reader to understand what you are passionate about and your superpowers (the things that you are really good at).\nRemember to keep it short and simple.\n3. Projects section.\nList the projects that you have worked on. The most used way is to order the list by date, but in some cases it can make sense to order them in another logical way.\nAdd details to each project, which includes your role, what you did, and, how the project turned out.\nAdding pictures to showcase what you built is a plus! Showcase the things that you are proud of.\n4. Contact me section.\nLet the reader know how and where they can get in touch with you.\nAdd your contact details and other contact channels such as your GitHub profile, LinkedIn, Youtube and so on.\nPortfolio examples\nCheck out some portfolio examples.\nYou can load the portfolio templates in W3Schools Spaces. Get started with publishing your portfolio in a few clicks.\n* no credit card required\nBlack & White Portfolio Template\nDark Portfolio Template\nPeople Portfolio\nMy Portfolio Template\nWhat do I need to know to create my own portfolio?\nHTML, CSS and JavaScript are the foundational languages to create a website.\nYou can come a long way just using these three!\nCreate the structure with HTML. The first thing you have to learn, is HTML, which is the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nREMOVE ADS\nHow to create a portfolio step-by-step\nFollow the steps to create your portfolio from the ground up.\nPreparations\nDecide which code editor to use and set up your environment.\nW3Schools has created an easy to use code editor called W3Schools Spaces. Sign up and get started in a few clicks.\nCreate your index.html file. So that you are ready to enter the code.\nAll set up. Lets go!\nStep One: Add HTML Skeleton\nType an HTML skeleton code, which is the starting point for your website. It is the structure which holds the code and ensures that it is properly displayed on the internet.\nRead here for how to create a basic HTML Skeleton: How to create a HTML Skeleton\nStep Two: Add Navigation Bar\nThe navigation bar is a short representation of the content on the website.\nIt is one of the first things that a visitor will see.\nIt helps the visitors to find and navigate through the content on website. It is important to create well-structured navigation. So that your visitors can find what they are looking for.\nHere is an example of how to create a top navigation bar: How to create a Top Navigation Bar\nStep Three: Add Hero section\nThe Hero section, together with the navigation bar, is the first section of your portfolio that people will see.\nIt should contain short information about several things such as:\nWho are you?\nWhat do you offer?\nWhat is your profession?\nWhy should people work with you?\nWhich actions should you take?\nWrite in first-person and keep it short and simple.\nAdditional things preferred in the hero section are:\nEye-catching graphics, either as a background or side-by-side with the text.\nAn action button that leads to content on your portfolio or to the content of another website.\nHere is an example on how to create a Hero section: How to create a Hero image\nStep Four: Add About Me section\nIn this section, you can get creative. This can help you to to stand out.\nHere you can personalize the content and write about yourself more in-depth.\nThe content you can include in this section is:\nYour introduction\nWho are you as a professional\nYour education\nYour skills\nYour work experience (present and/or past)\nYour hobbies\nYour goals and ambitions\nIn a way, you can consider the \"About me\" section as a short summary of your CV.\nFeel free to write about yourself in first person.\nPersonalization and making people understand you as a person might bring you more attention.\nHere is an example on how to create an about me section: How to create an About Me section\nStep Five: Add Work Experience section\nThe work experience section highlights the experience, knowledge, and competence that you have made along your way.\nHere you can add:\nLinks to your projects with the project name and/or short description of what the project is about.\nLinks to blog posts that you have written with title and/or short description about what it is about.\nYour professional awards or achievements.\nHighlighting your work and your accomplishments is a way to create opportunities for yourself.\nVisual representations such as images or graphics.\nStep Six: Add Contact section\nThe contact section is the section that lets your visitor get in touch with you.\nYou should always include a way for visitors to contact you, either through a contact form or by writing down your contact information such as:\nAddress\nEmail\nPhone number\nE.g. Github profile, LinkedIn profile, Youtube profile and so on.\nHere is an example on how to create a basic contact section: How to create a Contact section\nStep Seven: Add Footer section\nThe footer can be experienced as a minor section, but it is an important one of every website.\nIt is about showing critical information based on your website goals and the needs of your visitors.\nOften it contains technical information about copyright, but it can hold other information, such as:\nLink to \"Privacy policy\" page\nLink to \"Terms of use\" page\nContact information\nWebsite navigation links\nLinks to social networks\nLink to your shop\nHere is an example on how to build a footer section: How to create a Footer section\nW3Schools Spaces\nW3Schools Spaces\nBuild and publish your own Portfolio with W3Schools Spaces.",
      "examples": []
    },
    {
      "title": "How to create an online resume",
      "summary": "An online resume is a digital version of a resume.\nIt is an overview of your experience, skills, education, and achievements.\nIt can be used to apply for a job, freelancer gig, consultancy engagement, or apply to a school.\nThe value of having it online as a website is that people from all over the world can access it easily.\nWhat is a resume\nThe resume is an overview of your experience, competence, and skills.\nIt is most known for being a document, used to apply for jobs.\nCompanies and hiring managers use the resume to get an understanding of who you are as a professional and what you are capable of doing.\nYour online resume can be shared by its link to companies, hiring managers, and recruiters, so that they can notice you.\nWhy create an online resume\nA resume is relevant for every professional.\nYour resume as a website makes it easy for others to access and view your resume.\nIt can be used to E.G. get a job, freelancing gig, consultancy engagement, or apply to a school.\nHaving it online makes it possible for people from all over the world to find you.\nThe design of the resume gives the reader an impression of who you are. Make sure that it appears in a good and presentable way!\nWhat do I need to know to create my resume as a website?\nHTML, CSS and JavaScript are the basic languages to create a website.\nYou can come a long way just using these three!\nCreate the structure with HTML. The first thing you have to learn, is HTML, which is the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nHow to create a resume step-by-step\nFollow the steps to create your online resume from the ground up.\nPreparations\nDecide which code editor to use and set up your environment.\nW3Schools has created an easy to use code editor called W3Schools Spaces. Sign up and get started in a few clicks.\nCreate your index.html file. So that you are ready to enter the code.\nAll set up. Lets go!\nREMOVE ADS\nStep One: Add a Website Layout\nCreate a responsive website from scratch.\nRead here for how to create a website layout: How to create a Website Layout\nA resume can be created in different ways.\nThere is not a one-size fits all.\nKeep in mind why, how, and what, you are building it for.\nBuild the resume that is right for you.\nStep Two: Plan your content\nThink about how you want to design your resume.\nWhat information do you want to include?\nWhat impression do you want to give the reader?\nHow do you as a professional want to be presented?\nStep Three: Add content\nInclude the essential sections:\nContact Information section\nKey Summary section\nEducation section\nWork Experience section\nCheck out our How To library for more code snippets: How To Library\n1. Contact Information section.\nAdd your name and contact information.\nThe contact information section lets the reader know how to get in touch with you.\n2. Key Summary section.\nWrite a short summary that highlights your experience, competence, and skills.\nPersonalizing the text can make you stand out.\nThe key summary helps the reader to get an understanding of who you are as a professional.\nKeep it short and simple.\n3. Education section.\nGive an overview of your educational background.\nInclude details such as the institution, degree, and year.\nProfessional courses and certifications can also be listed as education.\n4. Work Experience section.\nList the jobs that you have had.\nAdd details to each job, which includes what year, your role, and your responsibilities.\nOther experiences such as projects and freelancing gigs can also be a part of this list.\nCV example\nWe have made you a template that you can use and build with.\nYou can load the CV template in W3Schools Spaces. Get started with publishing your online resume in a few clicks.\n* no credit card required\nCV Template\nW3Schools Spaces\nW3Schools Spaces\nBuild and publish your online resume with W3Schools Spaces.",
      "examples": []
    },
    {
      "title": "How To Make a Restaurant website",
      "summary": "The restaurant website helps to build the brand.\nIt lets people find you online.\nPeople look online for contact details such as phone number, address, and opening times.\nLet your clients book their tables online today!\nWhy create a restaurant website\nPresent the site in the way that you want to appear.\nClients can find you by search.\nOnline reservations make it easier for clients to book tables.\nTakeaway orders.\nMake online payments possible.\nThere are no limitations of what you can do when building the website on your own.\nWhat do I need to know to build a restaurant website\nHTML, CSS, and JavaScript are the basic languages to build any website.\nIt is easy to make use of a template and personalize it.\nCreate the structure with HTML. The first thing you have to learn, is HTML, the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nBuilding a website is fun - try it!\nHow do I get started\nThere are two ways to get started.\nBuild from scratch or using a template.\nBuilding from scratch\nRead here for how to create a static website from scratch How to Create a Webpage\nOnce you have made the layout. Add the four essential sections listed below:\n1. Hero section.\nThe hero section is the first impression of your website.\nIt helps the reader to understand what your restaurant is about.\nIt often displays a call-to-action button like \"book a table\" or \"see our menu.\"\n2. The menu.\nHaving the menu available online lets the reader know what you are offering.\nUse the menu to display deals and promotions.\n3. About the restaurant.\nGive the reader a summary of the restaurant and its history.\nHelp the reader to understand your passion for food.\nLet them know about the experience that they can have with you.\nKeep the text short.\n4. Contact us.\nLet the reader know your location and how they can get in touch.\nAdd social media links to make it easier contact you.\nHere you could also include a \"book table\" call to action.\nREMOVE ADS\nUse a template\nIt is easy to personalize a template.\nLoad the templates directly in W3Schools Spaces. Get started with editing your site in a few clicks.\n* no credit card required\nBrowse templates\nWe have templates ready for you to use. Here are some examples:\nPizza Restaurant Template\nGourmet Catering Template\nModal Restaurant Template\nW3Schools Spaces\nW3Schools Spaces\nEverything you need right in the browser. It is easy to use - try it!",
      "examples": []
    },
    {
      "title": "How To Make a Business website",
      "summary": "A website is essential to the business brand.\nIt can help you to generate leads.\nIt communicates information about the company and its services.\nHaving a website is relevant for all businesses - start building yours today!\nWhy make a business website\nThe website gives credibility to the business.\nIt is a good way of showing your business to potential clients and others.\nIn addition, to keep people updated on your company news.\nThe site can explain what your business is about.\nThe business website will help you connect with people interested in your business. Make sure that it appears in a good and presentable way!\nWhat do I need to know to create my business website?\nHTML, CSS, and JavaScript are the basic languages to create a website.\nIt is all you need to make your business website.\nCreate the structure with HTML. The first thing you have to learn, is HTML, the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nWe have made many templates ready for you to use.\nLoad the templates in W3Schools Spaces. Get started with building a website for your business in a few clicks.\n* no credit card required\nHow do I get started\nThere are two ways to start building a business website.\nBuilding from scratch or using a template.\nBuilding a business webpage from scratch\nA business website can have many different kinds of sections.\nThere are a few important sections of the business website, summarized below:\n1. Hero.\nThe hero section is the first thing people see when they enter your business website.\nIt is displayed under the menu.\nThe hero section helps the reader understand what you offer, why someone should work with you, and the value you provide with your services.\nIt often contains a call to action button like \"get in touch\", \"explore services\" or similar..\n2. About Us section.\nGive the reader a summary of your business.\nInclude subjects such as your history, experience, what makes you stand out from others.\nKeep the text short.\nStructure the information in a way that is easy to read and understand.\n3. Services section.\nList the services that your business offer.\nMake sure that the services are well explained and understandable to the website visitors.\n4. Contact section.\nIt contains contact information such as email address and phone number\nIt can also have a contact form, location, business hours, links to social networks, etc.\n5. Privacy policy section.\nThe privacy policy lets a visitor to your website know what you will do with their data.\nIt is a must for every website that collects data.\nIt explains how information is collected, how will it be used, is the data shared with 3rd parties, and how can a visitor access her personal information\nA business website can also contain either following sections:\nCompany Vision\nAvailable Jobs\nOur Team\nOur clients\nTestimonials\nBlog\nEvents\nFAQ\nProducts\nNews\nTerms and conditions\nREMOVE ADS\nBuilding with a template\nStarting with templates is a good way to get inspired and to learn.\nWe have ready-made templates that you can use. Here are some examples:\nThere are business website templates available in W3Schools Spaces. They can be loaded directly into the service.\nYou can load the business website template in W3Schools Spaces. So get started with building a business website in a few clicks!\n* no credit card required\nBusiness Consulting\nBusiness Startup\nW3Schools Spaces\nW3Schools Spaces\nBuild your static website with W3Schools Spaces.",
      "examples": []
    },
    {
      "title": "How TO - Make an HTML Book",
      "summary": "Learn how to create an HTML Book that will work on all devices, PC, laptop, tablet, and phone.\nFirst, Create a Basic HTML Page\nHTML is the standard markup language for creating websites and CSS is the language that describes the style of an HTML document.\nWe will combine HTML and CSS to create a basic HTML Book.\nFirst start with an HTML skeleton:\nExample\nExample Explained\n<!DOCTYPE html> The document type is HTML\n<html> </html> The beginning and the end of the document\n<head> </head> The beginning and the end of document information\n<title> The title of the book (\"My Book\")\n<meta charset=\"UTF-8\"> The character set used (UTF-8)\n<body> </body> The beginning and the end of the visible content\n<h1> </h1> The beginning and the end of a heading\n<p> </p> The beginning and the end of a paragraph\nThe code explained above are HTML tags.\nHTML tags are used to define the content of an HTML dokument.\nThe tags start with a < (less-than sign) and end witn a > (greater-than sign).\nThis way <p> and </p> are used to mark up the beginning and the end of a paragraph.\nNote: If you want to study HTML in detail, please read our HTML Tutorial.\nTo be fully correct, there should be a language attribute added to the <html> tag to define the language used in the book:\nAdding the following meta information will make your book display correctly on all devices, PC, laptop, tablet, and phone:\nExample\nCreate a Table of Content\nInside the <body> </body> elements, add a table of content:\nAdd a Some Style\nAdd a styleheet to your book:\nNote: If you want to study CSS in detail, please read Our CSS Tutorial.\nREMOVE ADS\nCreate an HTML page for Chapter 1\nFile: philosophy_chapter1.htm\nAdd a Link to Chapter 1\nIn the example above, we named the first chapter of the book:\n\"philosophy_chapter1.htm\".\nThe name to use is up to you. Maybe it should be called \"Metaphysics\".\nAnyway, continue as above and create the other chapters:\n\"philosophy_chaper2.htm\"\n\"philosophy_chaper3.htm\"\n\"philosophy_chaper4.htm\"\n\"philosophy_chaper5.htm\"\nAdd a Link to Each Chapter",
      "examples": [
        "<!DOCTYPE html>\n<html>\n\n<head>\n<title>My Book</title>\n<meta charset=\"UTF-8\">\n</head>\n\n<body>\n<h1>My Book</h1>\n<p>HTML book created by me.</p>\n</body>\n\n</html>",
        "<html lang=\"en\">",
        "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
        "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<title>My Book</title>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n\n<body>\n<h1>My Book</h1>\n<p>HTML book created by me.</p>\n</body>\n\n</html>",
        "<body>\n\n<h1>Philosopy</h1>\n<h3>Table of Contents</h3>\n\n<p>1. Metaphysics</p>\n<p>2. Epistemology</p>\n<p>3. Logics</p>\n<p>4. Ethics</p>\n<p>5. Aesthetics</p>\n\n</body>",
        "<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">",
        "<body class=\"w3-content\">\n<div class=\"w3-container\">\n\n<h1>1. Metaphysics</h1>\n\n<h3>The nature of reality.</h3>\n\n<p>Metaphysics is the part of philosophy that studies the nature of reality.</p>\n\n<p>When we look around, we can see:</p>\n<ul>\n<li>Nature</li>\n<li>Animals</li>\n<li>People</li>\n<li>Houses</li>\n<li>Cars</li>\n<li>and much more</li>\n</ul>\n\n<p>Is this Virtual Reality real?</p>\n\n<p>In Metaphysics, the questions is:</p>\n<ul>\n<li>What is real?</li>\n<li>Is what we see real?</li>\n<li>Is there more than we see?</li>\n<li>Is there more than we sence?</li>\n<li>Is there something else?</li>\n<li>Is there something more?</li>\n<li>Is there another dimension?</li>\n</ul>\n</div>\n\n</body>",
        "<body>\n\n<h1>Philosopy</h1>\n<h3>Table of Contents</h3>\n\n<p><a href=\"philosophy_chapter1.htm\">1. Metaphysics</a></p>\n<p>2. Epistemology</p>\n<p>3. Logics</p>\n<p>4. Ethics</p>\n<p>5. Aesthetics</p>\n\n</body>",
        "<body>\n\n<h1>Philosopy</h1>\n<h3>Table of Contents</h3>\n\n<p>\n<a href=\"philosophy_chapter1.htm\">1. Metaphysics</a>\n</p>\n\n<p>\n<a href=\"philosophy_chapter2.htm\">2. Epistemology</a>\n</p>\n\n<p>\n<a href=\"philosophy_chapter3.htm\">3. Logics</a>\n</p>\n\n<p>\n<a href=\"philosophy_chapter5.htm\">4. Ethics</a>\n</p>\n\n<p>\n<a href=\"philosophy_chapter4.htm\">5. Aesthetics</a>\n</p>\n\n</body>",
        "<!DOCTYPE html>",
        "<html> </html>",
        "<head> </head>",
        "<title>",
        "<meta charset=\"UTF-8\">",
        "<body> </body>",
        "<h1> </h1>",
        "<p> </p>",
        "<",
        ">",
        "<p>",
        "</p>",
        "<html>"
      ]
    },
    {
      "title": "How TO - Center Website",
      "summary": "Learn how to center your website horizontally with CSS.\nCenter Website\nLearn how to center your website horizontally:\nHow To Center Your Website\nUse a container element and set a specific max-width. A common width many websites use is 960px. To actually center the page, add margin: auto.\nThe following example will center the website on screens that are wider than 500px. On screens that are less than 500px wide, it will span the whole of the page:\nExample\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<style>\n.content {\nmax-width: 500px;\nmargin: auto;\n}\n</style>\n<body>\n\n<div class=\"content\">\n<!-- Page content -->\n</div>\n\n</body>",
        "max-width",
        "margin: auto"
      ]
    },
    {
      "title": "How TO - Contact Section",
      "summary": "Learn how to create a responsive contact section for web pages.\nContact Section\nCreate a Contact Section\nExample\nREMOVE ADS\nExample\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div class=\"container\">\n<div style=\"text-align:center\">\n<h2>Contact Us</h2>\n<p>Swing by for a cup of coffee, or leave us a message:</p>\n</div>\n<div class=\"row\">\n<div class=\"column\">\n<img src=\"/w3images/map.jpg\" style=\"width:100%\">\n</div>\n<div class=\"column\">\n<form action=\"/action_page.php\">\n<label for=\"fname\">First Name</label>\n<input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\">\n<label for=\"lname\">Last Name</label>\n<input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\">\n<label for=\"country\">Country</label>\n<select id=\"country\" name=\"country\">\n<option value=\"australia\">Australia</option>\n<option value=\"canada\">Canada</option>\n<option value=\"usa\">USA</option>\n</select>\n<label for=\"subject\">Subject</label>\n<textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style=\"height:170px\"></textarea>\n<input type=\"submit\" value=\"Submit\">\n</form>\n</div>\n</div>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\n/* Style inputs */\ninput[type=text], select, textarea {\nwidth: 100%;\npadding: 12px;\nborder: 1px solid #ccc;\nmargin-top: 6px;\nmargin-bottom: 16px;\nresize: vertical;\n}\n\ninput[type=submit] {\nbackground-color: #04AA6D;\ncolor: white;\npadding: 12px 20px;\nborder: none;\ncursor: pointer;\n}\n\ninput[type=submit]:hover {\nbackground-color: #45a049;\n}\n\n/* Style the container/contact section */\n.container {\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 10px;\n}\n\n/* Create two columns that float next to eachother */\n.column {\nfloat: left;\nwidth: 50%;\nmargin-top: 6px;\npadding: 20px;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column, input[type=submit] {\nwidth: 100%;\nmargin-top: 0;\n}\n}"
      ]
    },
    {
      "title": "How TO - About Page",
      "summary": "Learn how to create an about page / about us page.\nAbout Us\nCreate an About Page\nExample\nREMOVE ADS\nExample\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div class=\"about-section\">\n<h1>About Us Page</h1>\n<p>Some text about who we are and what we do.</p>\n<p>Resize the browser window to see that this page is responsive by the way.</p>\n</div>\n\n<h2 style=\"text-align:center\">Our Team</h2>\n<div class=\"row\">\n<div class=\"column\">\n<div class=\"card\">\n<img src=\"/w3images/team1.jpg\" alt=\"Jane\" style=\"width:100%\">\n<div class=\"container\">\n<h2>Jane Doe</h2>\n<p class=\"title\">CEO & Founder</p>\n<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n<p>jane@example.com</p>\n<p><button class=\"button\">Contact</button></p>\n</div>\n</div>\n</div>\n\n<div class=\"column\">\n<div class=\"card\">\n<img src=\"/w3images/team2.jpg\" alt=\"Mike\" style=\"width:100%\">\n<div class=\"container\">\n<h2>Mike Ross</h2>\n<p class=\"title\">Art Director</p>\n<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n<p>mike@example.com</p>\n<p><button class=\"button\">Contact</button></p>\n</div>\n</div>\n</div>\n\n<div class=\"column\">\n<div class=\"card\">\n<img src=\"/w3images/team3.jpg\" alt=\"John\" style=\"width:100%\">\n<div class=\"container\">\n<h2>John Doe</h2>\n<p class=\"title\">Designer</p>\n<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n<p>john@example.com</p>\n<p><button class=\"button\">Contact</button></p>\n</div>\n</div>\n</div>\n</div>",
        "body {\nfont-family: Arial, Helvetica, sans-serif;\nmargin: 0;\n}\n\nhtml {\nbox-sizing: border-box;\n}\n\n*, *:before, *:after {\nbox-sizing: inherit;\n}\n\n.column {\nfloat: left;\nwidth: 33.3%;\nmargin-bottom: 16px;\npadding: 0 8px;\n}\n\n.card {\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\nmargin: 8px;\n}\n\n.about-section {\npadding: 50px;\ntext-align: center;\nbackground-color: #474e5d;\ncolor: white;\n}\n\n.container {\npadding: 0 16px;\n}\n\n.container::after, .row::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n\n.title {\ncolor: grey;\n}\n\n.button {\nborder: none;\noutline: 0;\ndisplay: inline-block;\npadding: 8px;\ncolor: white;\nbackground-color: #000;\ntext-align: center;\ncursor: pointer;\nwidth: 100%;\n}\n\n.button:hover {\nbackground-color: #555;\n}\n\n@media screen and (max-width: 650px) {\n.column {\nwidth: 100%;\ndisplay: block;\n}\n}"
      ]
    },
    {
      "title": "How TO - Style a Header",
      "summary": "Learn how to style a header.\nBig Header\nCreate a Header\nExample\nREMOVE ADS\nStyle the header with a large padding, centered text, a specific background-color and a big sized text:\nExample\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template, and host it for free.\n* no credit card required",
      "examples": [
        "<div class=\"header\">\n<h1>Header</h1>\n<p>My supercool header</p>\n</div>",
        ".header {\npadding: 60px;\ntext-align: center;\nbackground: #1abc9c;\ncolor: white;\nfont-size: 30px;\n}"
      ]
    },
    {
      "title": "How TO - Example Website",
      "summary": "Learn how to create a responsive website that will work on all devices: PC, laptop, tablet, and phone.\nExample Website\nWe have created a free responsive example website with HTML and CSS. Try to rezise the browser window to see the responsive effect:\nEver heard about W3Schools Spaces? Here you can create your website from scratch or use a template.\n* no credit card required",
      "examples": []
    },
    {
      "title": "How TO - Two Column Layout",
      "summary": "Learn how to create a 2-column layout grid with CSS.\nColumn 1\nSome text..\nColumn 2\nSome text..\nTry it Yourself »\nHow To Create a Two Column Layout\nExample\nREMOVE ADS\nIn this example, we will create two equal columns:\nFloat Example\nA modern way of creating two columns, is to use CSS Flexbox. However, it is not supported in Internet Explorer 10 and earlier versions.\nFlex Example\nIt is up to you if you want to use floats or flex to create a two-column layout. However, if you need support for IE10 and down, you should use float.\nTip: To learn more about the Flexible Box Layout Module, read our CSS Flexbox chapter.\nIn this example, we will create two unequal columns:\nExample\nIn this example, we will create a responsive two column layout:\nExample\nTip: Go to our CSS Website Layout Tutorial to learn more about website layouts.\nTip: Go to our CSS Responsive Web Design Tutorial to learn more about responsive web design and grids.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n</div>",
        ".column {\nfloat: left;\nwidth: 50%;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}",
        ".row {\ndisplay: flex;\n}\n\n.column {\nflex: 50%;\n}",
        ".column {\nfloat: left;\n}\n\n.left {\nwidth: 25%;\n}\n\n.right {\nwidth: 75%;\n}",
        "/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Three Column Layout",
      "summary": "Learn how to create a 3-column layout grid with CSS.\nColumn 1\nSome text..\nColumn 2\nSome text..\nColumn 3\nSome text..\nTry it Yourself »\nHow To Create a Three Column Layout\nExample\nREMOVE ADS\nIn this example, we will create three equal columns:\nExample\nIn this example, we will create three unequal columns:\nExample\nIn this example, we will create a responsive three column layout:\nExample\nTip: Go to our CSS Website Layout Tutorial to learn more about website layouts.\nTip: Go to our CSS Responsive Web Design Tutorial to learn more about responsive web design and grids.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n</div>",
        ".column {\nfloat: left;\nwidth: 33.33%;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}",
        ".column {\nfloat: left;\n}\n\n.left, .right {\nwidth: 25%;\n}\n\n.middle {\nwidth: 50%;\n}",
        "/* Responsive layout - when the screen is less than 600px wide, make the three columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Four Column Layout",
      "summary": "Learn how to create a 4-column layout grid with CSS.\nColumn 1\nSome text..\nColumn 2\nSome text..\nColumn 3\nSome text..\nColumn 4\nSome text..\nTry it Yourself »\nHow To Create a Four Column Layout\nExample\nREMOVE ADS\nIn this example, we will create four column layout:\nExample\nIn this example, we will create a responsive four column layout:\nExample\nTip: Go to our CSS Website Layout Tutorial to learn more about website layouts.\nTip: Go to our CSS Responsive Web Design Tutorial to learn more about responsive web design and grids.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n</div>",
        ".column {\nfloat: left;\nwidth: 25%;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}",
        "/* Responsive layout - when the screen is less than 600px wide, make the three columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Expanding Grid",
      "summary": "Learn how to create an expanding grid with CSS and JavaScript.\nExpanding Grid\nClick on a box to \"expand\" it (100% width):\nBox 1\nLorem ipsum dolor sit amet, te quo doctus abhorreant, et pri deleniti intellegat, te sanctus inermis ullamcorper nam. Ius error diceret deseruisse ad\nBox 2\nLorem ipsum dolor sit amet, te quo doctus abhorreant, et pri deleniti intellegat, te sanctus inermis ullamcorper nam. Ius error diceret deseruisse ad\nBox 3\nLorem ipsum dolor sit amet, te quo doctus abhorreant, et pri deleniti intellegat, te sanctus inermis ullamcorper nam. Ius error diceret deseruisse ad\nCreate an Expanding Grid\nExample\nCreate three columns:\nExample\nREMOVE ADS\nExample",
      "examples": [
        "<!-- The grid: three columns -->\n<div class=\"row\">\n<div class=\"column\" onclick=\"openTab('b1');\" style=\"background:green;\">Box 1</div>\n<div class=\"column\" onclick=\"openTab('b2');\" style=\"background:blue;\">Box 2</div>\n<div class=\"column\" onclick=\"openTab('b3');\" style=\"background:red;\">Box 3</div>\n</div>\n\n<!-- The expanding grid (hidden by default) -->\n<div id=\"b1\" class=\"containerTab\" style=\"display:none;background:green\">\n<!-- If you want the ability to close the container, add a close button -->\n<span onclick=\"this.parentElement.style.display='none'\" class=\"closebtn\">x</span>\n<h2>Box 1</h2>\n<p>Lorem ipsum..</p>\n</div>\n\n<div id=\"b2\" class=\"containerTab\" style=\"display:none;background:blue\">\n<span onclick=\"this.parentElement.style.display='none'\" class=\"closebtn\">x</span>\n<h2>Box 2</h2>\n<p>Lorem ipsum..</p>\n</div>\n\n<div id=\"b3\" class=\"containerTab\" style=\"display:none;background:red\">\n<span onclick=\"this.parentElement.style.display='none'\" class=\"closebtn\">x</span>\n<h2>Box 3</h2>\n<p>Lorem ipsum..</p>\n</div>",
        "/* The grid: Three equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 33.33%;\npadding: 50px;\ntext-align: center;\nfont-size: 25px;\ncursor: pointer;\ncolor: white;\n}\n\n.containerTab {\npadding: 20px;\ncolor: white;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Closable button inside the image */\n.closebtn {\nfloat: right;\ncolor: white;\nfont-size: 35px;\ncursor: pointer;\n}",
        "// Hide all elements with class=\"containerTab\", except for the one that matches the clickable grid column\nfunction openTab(tabName) {\nvar i, x;\nx = document.getElementsByClassName(\"containerTab\");\nfor (i = 0; i < x.length; i++) {\nx[i].style.display = \"none\";\n}\ndocument.getElementById(tabName).style.display = \"block\";\n}"
      ]
    },
    {
      "title": "How TO - List Grid View",
      "summary": "How to create a list grid view.\nClick on a button to choose list view or grid view.\nColumn 1\nSome text..\nColumn 2\nSome text..\nColumn 3\nSome text..\nColumn 4\nSome text..\nList Grid View\nExample\nREMOVE ADS\nExample\nExample",
      "examples": [
        "<!-- Load Font Awesome Icon Library -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n<!-- Buttons to choose list or grid view -->\n<button onclick=\"listView()\"><i class=\"fa fa-bars\"></i> List</button>\n<button onclick=\"gridView()\"><i class=\"fa fa-th-large\"></i> Grid</button>\n\n<div class=\"row\">\n<div class=\"column\" style=\"background-color:#aaa;\">\n<h2>Column 1</h2>\n<p>Some text..</p>\n</div>\n<div class=\"column\" style=\"background-color:#bbb;\">\n<h2>Column 2</h2>\n<p>Some text..</p>\n</div>\n</div>\n\n<div class=\"row\">\n<div class=\"column\" style=\"background-color:#ccc;\">\n<h2>Column 3</h2>\n<p>Some text..</p>\n</div>\n<div class=\"column\" style=\"background-color:#ddd;\">\n<h2>Column 4</h2>\n<p>Some text..</p>\n</div>\n</div>",
        "/* Create two equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 50%;\npadding: 10px;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}",
        "// Get the elements with class=\"column\"\nvar elements = document.getElementsByClassName(\"column\");\n\n// Declare a loop variable\nvar i;\n\n// List View\nfunction listView() {\nfor (i = 0; i < elements.length; i++) {\nelements[i].style.width = \"100%\";\n}\n}\n\n// Grid View\nfunction gridView() {\nfor (i = 0; i < elements.length; i++) {\nelements[i].style.width = \"50%\";\n}\n}"
      ]
    },
    {
      "title": "How TO - Mixed Column Layout",
      "summary": "Learn how to create a mixed column layout grid with CSS.\nLearn how to create a responsive column layout that varies between 4 columns, 2 columns and full-width columns depending on screen width.\nResize the browser window to see the responsive effect:\nTry it Yourself »\nHow To Create a Mixed Column Layout\nExample\nREMOVE ADS\nIn this example, we will create a four column layout that will transform to two columns on screens that are less than 900px wide. However, on screens that are less than 600px wide, the columns will stack on top of each other instead of floating next to each other.\nExample\nTip: Go to our CSS Website Layout Tutorial to learn more about website layouts.\nTip: Go to our CSS Responsive Web Design Tutorial to learn more about responsive web design and grids.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n<div class=\"column\"></div>\n</div>",
        "/* Create four equal columns that floats next to each other */\n.column {\nfloat: left;\nwidth: 25%;\n}\n\n/* Clear floats */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Responsive layout - makes a two column-layout instead of four columns */\n@media screen and (max-width: 900px) {\n.column {\nwidth: 50%;\n}\n}\n\n/* Responsive layout - makes the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\n}\n}"
      ]
    },
    {
      "title": "How TO - Column Cards",
      "summary": "Learn how to create responsive column cards with CSS.\nTry it Yourself »\nHow To Create Column Cards\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Website Layout Tutorial to learn more about website layouts.\nTip: Go to our CSS Responsive Web Design Tutorial to learn more about responsive web design and grids.",
      "examples": [
        "<div class=\"row\">\n<div class=\"column\">\n<div class=\"card\">..</div>\n</div>\n<div class=\"column\">\n<div class=\"card\">..</div>\n</div>\n<div class=\"column\">\n<div class=\"card\">..</div>\n</div>\n<div class=\"column\">\n<div class=\"card\">..</div>\n</div>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\nbody {\nfont-family: Arial, Helvetica, sans-serif;\n}\n\n/* Float four columns side by side */\n.column {\nfloat: left;\nwidth: 25%;\npadding: 0 10px;\n}\n\n/* Remove extra left and right margins, due to padding in columns */\n.row {margin: 0 -5px;}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Style the counter cards */\n.card {\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); /* this adds the \"card\" effect */\npadding: 16px;\ntext-align: center;\nbackground-color: #f1f1f1;\n}\n\n/* Responsive columns - one column layout (vertical) on small screens */\n@media screen and (max-width: 600px) {\n.column {\nwidth: 100%;\ndisplay: block;\nmargin-bottom: 20px;\n}\n}"
      ]
    },
    {
      "title": "How TO - Responsive Zig Zag Layout",
      "summary": "Learn how to create a responsive zig zag (alternating) layout with CSS.\nTry it Yourself »\nHow To Create a Zig Zag Layout\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Website Layout Tutorial to learn more about website layouts.\nTip: Go to our CSS Responsive Web Design Tutorial to learn more about responsive web design and grids.",
      "examples": [
        "<div class=\"container\">\n<div class=\"row\">\n<div class=\"column-66\">\n...\n</div>\n<div class=\"column-33\">\n...\n</div>\n</div>\n</div>\n\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"column-33\">\n...\n</div>\n<div class=\"column-66\">\n...\n</div>\n</div>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\n.container {\npadding: 64px;\n}\n\n/* Clear floats */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both\n}\n\n/* 2/3 column */\n.column-66 {\nfloat: left;\nwidth: 66.66666%;\npadding: 20px;\n}\n\n/* 1/3 column */\n.column-33 {\nfloat: left;\nwidth: 33.33333%;\npadding: 20px;\n}\n\n/* Add responsiveness - make the columns appear on top of each other instead of next to each other on small screens */\n@media screen and (max-width: 1000px) {\n.column-66,\n.column-33 {\nwidth: 100%;\ntext-align: center;\n}\n}"
      ]
    },
    {
      "title": "How TO - Blog Layout",
      "summary": "Learn how to create a responsive blog layout with CSS.\nLearn how to create a responsive blog layout that varies between two and full-width columns depending on screen width.\nResize the browser window to see the responsive effect:\nTry it Yourself »\nHow To Create a Blog Layout\nExample\nREMOVE ADS\nExample\nTip: Go to our CSS Website Layout Tutorial to learn more about website layouts.\nTip: Go to our CSS Responsive Web Design Tutorial to learn more about responsive web design and grids.",
      "examples": [
        "<div class=\"header\">\n<h2>Blog Name</h2>\n</div>\n\n<div class=\"row\">\n<div class=\"leftcolumn\">\n<div class=\"card\">\n<h2>TITLE HEADING</h2>\n<h5>Title description, Dec 7, 2017</h5>\n<div class=\"fakeimg\" style=\"height:200px;\">Image</div>\n<p>Some text..</p>\n</div>\n<div class=\"card\">\n<h2>TITLE HEADING</h2>\n<h5>Title description, Sep 2, 2017</h5>\n<div class=\"fakeimg\" style=\"height:200px;\">Image</div>\n<p>Some text..</p>\n</div>\n</div>\n<div class=\"rightcolumn\">\n<div class=\"card\">\n<h2>About Me</h2>\n<div class=\"fakeimg\" style=\"height:100px;\">Image</div>\n<p>Some text about me in culpa qui officia deserunt mollit anim..</p>\n</div>\n<div class=\"card\">\n<h3>Popular Post</h3>\n<div class=\"fakeimg\">Image</div><br>\n<div class=\"fakeimg\">Image</div><br>\n<div class=\"fakeimg\">Image</div>\n</div>\n<div class=\"card\">\n<h3>Follow Me</h3>\n<p>Some text..</p>\n</div>\n</div>\n</div>\n\n<div class=\"footer\">\n<h2>Footer</h2>\n</div>",
        "* {\nbox-sizing: border-box;\n}\n\nbody {\nfont-family: Arial;\npadding: 20px;\nbackground: #f1f1f1;\n}\n\n/* Header/Blog Title */\n.header {\npadding: 30px;\nfont-size: 40px;\ntext-align: center;\nbackground: white;\n}\n\n/* Create two unequal columns that floats next to each other */\n/* Left column */\n.leftcolumn {\nfloat: left;\nwidth: 75%;\n}\n\n/* Right column */\n.rightcolumn {\nfloat: left;\nwidth: 25%;\npadding-left: 20px;\n}\n\n/* Fake image */\n.fakeimg {\nbackground-color: #aaa;\nwidth: 100%;\npadding: 20px;\n}\n\n/* Add a card effect for articles */\n.card {\nbackground-color: white;\npadding: 20px;\nmargin-top: 20px;\n}\n\n/* Clear floats after the columns */\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n/* Footer */\n.footer {\npadding: 20px;\ntext-align: center;\nbackground: #ddd;\nmargin-top: 20px;\n}\n\n/* Responsive layout - when the screen is less than 800px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 800px) {\n.leftcolumn, .rightcolumn {\nwidth: 100%;\npadding: 0;\n}\n}"
      ]
    },
    {
      "title": "How TO - Google Charts",
      "summary": "Learn how to add Google Charts to your web page.\nExample\nGoogle Pie Chart\nStart with a simple basic web page.\nAdd a <div> element with the id \"piechart\":\nExample\nREMOVE ADS\nAdd a reference to the Chart API at google.com:\nExample\nAnd add a JavaScript function:\nExample",
      "examples": [
        "<!DOCTYPE html>\n<html>\n<body>\n\n<h1>My Web Page</h1>\n\n<div id=\"piechart\"></div>\n\n</body>\n<html>",
        "<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>",
        "<script type=\"text/javascript\">\n// Load google charts\ngoogle.charts.load('current', {'packages':['corechart']});\ngoogle.charts.setOnLoadCallback(drawChart);\n\n// Draw the chart and set the chart values\nfunction drawChart() {\nvar data = google.visualization.arrayToDataTable([\n['Task', 'Hours per Day'],\n['Work', 8],\n['Friends', 2],\n['Eat', 2],\n['TV', 2],\n['Gym', 2],\n['Sleep', 8]\n]);\n\n// Optional; add a title and set the width and height of the chart\nvar options = {'title':'My Average Day', 'width':550, 'height':400};\n\n// Display the chart inside the <div> element with id=\"piechart\"\nvar chart = new google.visualization.PieChart(document.getElementById('piechart'));\nchart.draw(data, options);\n}\n</script>"
      ]
    },
    {
      "title": "How TO - Google Fonts Use this font for free!",
      "summary": "Learn how to use Google Fonts on your web page.\nExample\nAll of Google fonts are free and easy to use.\n1896 Google Fonts\nCurrently there are 1896 fonts available at Google:",
      "examples": [
        "Use this font for free!\nAll of Google fonts are free and easy to use."
      ]
    },
    {
      "title": "How TO - Google Font Pairings Beautiful Norway Beautiful Norway Beautiful Norway Beautiful Norway Beautiful Norway Beautiful Norway Beautiful Norway Beautiful Norway",
      "summary": "Great font pairings are essential to great design.\nPopular Google Web Font Pairings\nGoogle Fonts are free to use, and have more than 1000 fonts to choose from.\nBelow are some popular Google Web Font Pairings.\nMerriweather and Open Sans\nExample\nUse the \"Merriweather\" font for headings, and \"Open Sans\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nUbuntu and Lora\nExample\nUse the \"Ubuntu\" font for headings, and \"Lora\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nAbril Fatface and Poppins\nExample\nUse the \"Abril Fatface\" font for headings, and \"Poppins\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nCinzel and Fauna One\nExample\nUse the \"Cinzel\" font for headings, and \"Fauna One\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nREMOVE ADS\nFjalla One and Libre Baskerville\nExample\nUse the \"Fjalla One\" font for headings, and \"Libre Baskerville\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nSpace Mono and Muli\nExample\nUse the \"Space Mono\" font for headings, and \"Muli\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nSpectral and Rubik\nExample\nUse the \"Spectral\" font for headings, and \"Rubik\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nOswald and Noto Sans\nExample\nUse the \"Oswald\" font for headings, and \"Noto Sans\" for text:\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing.\nFor a list of all free Google Fonts, visit our How To - Google Fonts Tutorial.",
      "examples": [
        "Beautiful Norway\nNorway has a total area of 385,252 square kilometres and a population of 5,438,657 (December 2020). Norway is bordered by Sweeden, Finland and Russia to the north-east, and the Skagerrak to the south, with Denmark on the other side.\nNorway has beautiful mountains, glaciers and stunning fjords. Oslo, the capital, is a city of green spaces and museums. Bergen, with colorful wooden houses, is the starting point for cruises to the dramatic Sognefjord. Norway is also known for fishing, hiking and skiing."
      ]
    },
    {
      "title": "How to Set Up Google Analytics",
      "summary": "Google Analytics is used to view and understand web traffic.\nIt is free and easy to use.\nYou can customize it for many use cases.\nIt works out of the box.\nIt is fast to set up. Get your insights today!\nSkip reading about Google Analytics. Take me directly to the first step. Go to the first step\nWhat is Google Analytics\nGoogle Analytics is a web analytics solution.\nIt is developed and supported by Google.\nThe newest version is called Google Analytics 4.\nIt can be used to view data such as audience, page views, sessions and, demographics, and events.\nWhy enable Google Analytics\nUnderstand your web traffic to make better decisions.\nUnderstand and improve the sales funnel.\nLearn from experimenting (for example, a/b tests).\nGoogle has another solution called Google Optimize. This solution is made for testing.\nWho is Google Analytics for\nGoogle Analytics is useful for anyone who has a website.\nIt gives you information about who uses your site and how they interact with it.\nIn addition, interface is easy to understand.\nYou do not need an analytics background to use and navigate the service.\nHow to set up Google Analytics step-by-step\nGoogle Analytics can be set up in two ways The Global Website Tag (gtag.js) or Google Tag Manager.\nThe easiest way is to use The Global Website Tag.\nThis tutorial will use the The Global Website Tag approach.\nPreparations\nDecide which code editor to use and set up your environment.\nW3Schools has created an easy-to-use code editor called W3Schools Spaces. Sign up and get started in a few clicks.\nCreate your index.html file so that you are ready to enter the code.\nAll setup. Let's go!\nSet up Google Analytics: The Global Website Tag\nStep 1: Create a Google Analytics account\nGo to Analytics: Create an account or sign in to Analytics\nThe link in the paragraph above takes you to the Google Analytics landing page.\nClick the \"Start for free\" button.\nREMOVE ADS\nStep 2: Enter the welcome page\nAfter creating an account or signing in, you are welcomed to the solution.\nPress the \"Start measuring\" button to proceed.\nStep 3: Account setup\nYou have two decisions to make here.\nEnter your account name.\nDecide what data you want to share.\nClick the \"Next\" button.\nOne account can have more than one tracking ID. You can track more than one website with an account.\nStep 4: Property setup\nProperty is the service you measure, such as a website, application, link tree, etc.\nEnter a property name.\nEnter your time zone.\nEnter the currency that you use.\nClick the \"Next\" button.\nStep 5: Add business information\nAnalytics uses the information to tailor your experience.\nSelect your industry category.\nSelect business size.\nTick the boxes for how you are planning to use Analytics.\nClick the \"Create\" button to proceed.\nStep 6: Terms of Service Agreement\nRead and understand the terms of service.\nTick the GDPR box and click the \"I accept\" button if you agree.\nStep 7: Email subscriptions\nTick or uncheck all boxes.\nClick the \"Save\" button to continue.\nStep 8: Select platform\nChose the platform where you are collecting data.\nThen, click the relevant platform to continue.\nWe are continuing with \"Web\" as the example in this tutorial.\nStep 9: Data stream setup\nEnter data stream details.\nThe URL to your site.\nThe name that you want to give the stream.\nDecide if you are to enable enhanced measurement or not.\nClick on the \"Create stream\" button to continue.\nThe enhanced measurement can give the data more context. Improving your understanding of the traffic.\nStep 10: Web stream overview\nHere you can see a detailed overview of the web stream.\nHere are the key takeaways from the overview.\n1. Stream URL.\nThe Stream URL is the link to the connected site.\n2. Measurement ID\nThe Measurement ID is the identifier for your data stream.\nIt has a format of G-XXXXXXX.\nGoogle Analytics 4 uses Measurement ID. Older versions use Tracking ID. You can not have both.\n3. Tagging instructions\nDecide to use Global site tag (gtag.js) or Tag manager.\nThis tutorial will use the Global site tag.\nInstalling the Global site tag is the easiest and quickest way of getting it up and running.\nStep 11: Global site tag (gtag.js)\nClick the \"Global site tag (gtag.js)\" row.\nHere you can see a code snippet.\nThe code snippet is a script to allow Google to measure data on your site.\nYou can see the Measurement ID in the second last line in the code snippet.\nThe code snippet\nStep 12: Enter the code snippet\nCopy the code snippet.\nMake sure to include your Measurement ID.\nLocate the <head> tag in your HTML.\nPaste the code snippet just below the <head> tag.\nSave and publish the code.\nWe used W3Schools Spaces in this example.\nStep 13: Test that it works\nEnsure that you have successfully saved and published the code snippet with the correct Measurement ID.\nOpen the URL for the site you have connected to the data stream.\nClick on \"Real time\" on the menu to the left.\nConfirm that you see yourself as an active user.\nCongrats. You have successfully enabled Google Analytics for your site!\nExplore Google Analytics\nRecommended related topics are Tag manager and Events\nSpend time in the service to learn about your user activity, commerce, demographics, device, and referrals.\nTip: Ever heard of W3Schools Spaces? It is a personal space where you can make a website from scratch or use a template and host it for free.\nIt has everything you need in the browser.\nGet started in a few clicks.\n* no credit card required",
      "examples": [
        "<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-DNJN1PF3CS\"></script>\n<script>\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments);}\ngtag('js', new Date());\n\ngtag('config', 'G-XXXXXXX');\n</script>"
      ]
    },
    {
      "title": "How TO - Weight Converter",
      "summary": "Learn how to create a weight converter with HTML and JavaScript.\nWeight Converter\nType a value in any of the fields to convert between weight measurements:\nCreate a Weight Converter\nCreate an input element that can convert a value from one weight measurement to another.\nExample - Pounds to Kilogram\nExample - Pounds to Kilogram\nREMOVE ADS\nConvert from Pounds to other Measurements\nThe table below shows how to convert from Pounds to other weight measurements:\nConvert from Kilograms to other Measurements\nThe table below shows how to convert from Kilograms to other weight measurements:\nConvert from Ounces to other Measurements\nThe table below shows how to convert from Ounces to other weight measurements:\nConvert from Grams to other Measurements\nThe table below shows how to convert from Grams to other weight measurements:\nConvert from Stones to other Measurements\nThe table below shows how to convert from Stones to other weight measurements:",
      "examples": [
        "<p>\n<label>Pounds</label>\n<input id=\"inputPounds\" type=\"number\" placeholder=\"Pounds\"\noninput=\"weightConverter(this.value)\" onchange=\"weightConverter(this.value)\">\n</p>\n<p>Grams: <span id=\"outputGrams\"></span></p>",
        "/* When the input field receives input, convert the value from pounds to kilograms */\nfunction weightConverter(valNum) {\ndocument.getElementById(\"outputGrams\").innerHTML = valNum / 0.0022046;\n}"
      ]
    },
    {
      "title": "How TO - Temperature Converter",
      "summary": "Learn how to create a temperature converter with HTML and JavaScript.\nTemperature Converter\nType a value in any of the fields to convert between temperature measurements:\nCreate a Temperature Converter\nCreate an input element that can convert a value from one temperature measurement to another.\nExample - Fahrenheit to Celcius\nExample - Fahrenheit to Celcius\nREMOVE ADS\nConvert from Fahrenheit to other Measurements\nThe table below shows how to convert from Fahrenheit to other temperature measurements:\nConvert from Celsius to other Measurements\nThe table below shows how to convert from Celsius to other temperature measurements:\nConvert from Kelvin to other Measurements\nThe table below shows how to convert from Kelvin to other temperature measurements:",
      "examples": [
        "<p>\n<label>Fahrenheit</label>\n<input id=\"inputFahrenheit\" type=\"number\" placeholder=\"Fahrenheit\"\noninput=\"temperatureConverter(this.value)\"\nonchange=\"temperatureConverter(this.value)\">\n</p>\n<p>Celsius: <span id=\"outputCelsius\"></span></p>",
        "/* When the input field receives input, convert the value from fahrenheit to celsius */\nfunction temperatureConverter(valNum) {\nvalNum = parseFloat(valNum);\ndocument.getElementById(\"outputCelsius\").innerHTML = (valNum-32) / 1.8;\n}"
      ]
    },
    {
      "title": "How TO - Length Converter",
      "summary": "Learn how to create a Length converter with HTML and JavaScript.\nLength Converter\nType a value in any of the fields to convert between Length measurements:\nCreate a Length Converter\nCreate an input element that can convert a value from one Length measurement to another.\nExample - Feet to Meter\nExample - Feet to Meter\nREMOVE ADS\nConvert from Feet to other Measurements\nThe table below shows how to convert from Feet to other Length measurements:\nConvert from Meters to other Measurements\nThe table below shows how to convert from Meters to other Length measurements:\nConvert from Inches to other Measurements\nThe table below shows how to convert from Inches to other Length measurements:\nConvert from cm to other Measurements\nThe table below shows how to convert from cm to other Length measurements:\nConvert from Yards to other Measurements\nThe table below shows how to convert from Yards to other Length measurements:\nConvert from Kilometers to other Measurements\nThe table below shows how to convert from Kilometers to other Length measurements:\nConvert from Miles to other Measurements\nThe table below shows how to convert from Miles to other Length measurements:",
      "examples": [
        "<p>\n<label>Feet</label>\n<input id=\"inputFeet\" type=\"number\" placeholder=\"Feet\"\noninput=\"lengthConverter(this.value)\" onchange=\"lengthConverter(this.value)\">\n</p>\n<p>cm: <span id=\"outputMeters\"></span></p>",
        "/* When the input field receives input, convert the value from feet to meters */\nfunction lengthConverter(valNum) {\ndocument.getElementById(\"outputMeters\").innerHTML = valNum / 0.0022046;\n}"
      ]
    },
    {
      "title": "How TO - Speed Converter",
      "summary": "Learn how to create a speed converter with HTML and JavaScript.\nSpeed Converter\nType a value in any of the fields to convert between speed measurements:\nCreate a Speed Converter\nCreate an input element that can convert a value from one speed measurement to another.\nExample - MPH to KPH\nExample - MPH to KPH\nREMOVE ADS\nConvert from MPH to other Measurements\nThe table below shows how to convert from MPH to other speed measurements:\nConvert from KPH to other Measurements\nThe table below shows how to convert from KPH to other speed measurements:\nConvert from Knots to other Measurements\nThe table below shows how to convert from Knots to other speed measurements:\nConvert from Mach to other Measurements\nThe table below shows how to convert from Mach to other speed measurements:",
      "examples": [
        "<p>\n<label>MPH</label>\n<input id=\"inputMPH\" type=\"number\" placeholder=\"MPH\"\noninput=\"speedConverter(this.value)\"\nonchange=\"speedConverter(this.value)\">\n</p>\n<p>KPH: <span id=\"outputKPH\"></span></p>",
        "/* When the input field receives input, convert the value from mph to kph */\nfunction speedConverter(valNum) {\nvalNum = parseFloat(valNum);\ndocument.getElementById(\"outputKPH\").innerHTML = valNum * 1.609344;\n}"
      ]
    },
    {
      "title": "How TO - Get a Developer Job",
      "summary": "Everyone can become a developer.\nYou can find lots of free content on the internet.\nLanding your first developer job can be hard.\nThe most important thing is to never give up.\nPractice every day to become better.\nWhat does a developer do\nA developer is someone who make things happen on a computer.\nThis can be to create a website, web application, or to create a game.\nIt can be both a hobby, a job - or a jobby ;+]\nIt is creative and fun to build something that works!\nWhat does it take to become a developer\nSet a goal of which type of developer you want to become. E.G. Front-End or Back-End.\nDecide which progamming languages to learn.\nRead, practice, and build with code.\nGet noticed by someone who can give you an opportunity.\nNever give up.\nThe difference between Front-End and Back-End is that Front-End refers to how a web page looks, while back-end refers to how it works.\nYou also think of Front-End as client-side and Back-End as server-side.\nWhere do I start\nHTML, CSS and JavaScript are the basic languages that you need to know to create a website.\nTo become a web developer, start with the subjects below, in the following order:\nCreate the structure with HTML. The first thing you have to learn, is HTML, which is the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nHave you ever heard about W3Schools Spaces? Here you can build a free website using HTML, CSS, and JavaScript.\n* no credit card required\nLearn and practice JavaScript and CSS frameworks and libraries such as:\nBootstrap - Learn Bootstrap\nBootstrap - Learn Bootstrap\nSASS - Learn SASS\nSASS - Learn SASS\njQuery - Learn jQuery\njQuery - Learn jQuery\nReact - Learn React\nReact - Learn React\nVersion control with Git - Learn Git\nVersion control with Git - Learn Git\nKnowing the frameworks and libraries will make you more attractive in the job market.\nHow can I learn Back-End?\nHTML, CSS, and JavaScript are used to create static websites.\nTo make the websites dynamic (databases, contact forms, user access, and so on) you need to use Back-End programming languages.\nHere are some popular Back-End languages:\nNode.js - Learn Node.js\nNode.js - Learn Node.js\nPython - Learn Python\nPython - Learn Python\nJava - Learn Java\nJava - Learn Java\nKotlin - Learn Kotlin\nKotlin - Learn Kotlin\nC# - Learn C#\nC# - Learn C#\nBrowse our site for other popular languages - Visit W3Schools.com\nBrowse our site for other popular languages - Visit W3Schools.com\nPeople who work with creating websites and web applications are called Front-End Developers.\nPeople who work with creating applications are called Back-End Developers.\nPeople who work with both Front-End and Back-End are called Fullstack Developers.\nWe recommend to begin your journey with Front-End.\nREMOVE ADS\nHow to get your first job in Ten steps\nThere are many ways of getting your first job.\nThe order of the steps is a suggestion.\nYou can do the steps in the order that you like.\nPreparations: Set a goal\nCommit to your goal.\nCreate a plan.\nDedicate time every day and week for learning and practice.\nBeing consistent is the the most important thing!\nThere is really no reason to pay for an expensive Bootcamp or monthly subscription to get access to content.\nYou can find lots of free content open on the internet.\nWork your plan, build, and be consistent. You will be fine!\nStep One: Master the languages\nRead, practice and build with the languages that you have decided to learn.\nStart with the frameworks and libraries once you feel confident with the main languages.\nAlways be building.\nStep Two: Build an online resume\nAn online resume is a digital version of a resume.\nIt is an overview of your experience, skills, education, and achievements.\nIt can be used to apply for a job, freelancer gig, consultancy engagement, or apply to a school.\nThe value of having it online as a website is that people from all over the world can access it easily.\nHere is a tutorial on how to create your online resume: How To Create an Online Resume\nStep Three: Build a portfolio site\nThe portfolio is essential to get noticed.\nCreating a portfolio is a good way of growing your online presence.\nThe portfolio is used to showcase your skills and projects.\nIt can help you to get a job, freelancer gig, or, internship.\nHere is a tutorial on how to create your portfolio: How To Create a Portfolio\nStep Four: Search and apply for relevant jobs (ongoing)\nAlways be searching and applying for jobs.\nTypical entry jobs are Intern or Junior Developer.\nRemember that getting the first job is the hardest.\nLanding the next one is easier.\nStep Five: Look for freelance gigs\nFreelance gigs are good to build relevant work experience.\nCreate your profile with a gig platform.\nSearch and apply for relevant engagements.\nMarket your profile actively.\nAdd completed engagements to your Resume and Portfolio.\nStep Six: Work on projects\nWorking on your own projects improves your skills.\nShare your completed projects with others.\nKeep practicing. Consistency is the most important thing!\nWe have created a code editor for you called, W3Schools Spaces? Here you can build a free website using HTML, CSS, and JavaScript.\n* no credit card required\nStep Seven: Apply for internships\nInternships are one of the best ways to enter the job market.\nIt can help you to get relevant experience such as:\nWorking on solving real world problems\nWorking as a team (this is important). To not only work solo\nLearning from others\nGetting feedback on your code\nLearning agile methods\nGet a chance to prove yourself with a company\nStep Eight: Upload your code to Github and contribute\nGithub is an open-source repository.\nIt is a community for programmers.\nHaving your code on github allows for collaboration with others.\nParticipating in an open-source project is a good way to get experience. Look for one!\nHere is a tutorial for you to learn Git: Learn Git\nStep Nine: Join a developer community\nCommunity is a place where you can connect with others.\nParticipating in a community can make the learning easier.\nSharing different perspectives is a good way to learn.\nYou can give back by contributing with what you have learned.\nConnect with others and network, so that you can get noticed.\nMaybe you can find a mentor in the community crowd?\nJoining a community is great to connect with other developers to learn, collaborate, and network.\nWe have created a community for just this.\nStep Ten: Grow your online presence\nShowcase your work on social medias.\nContribute by writing relevant content such as.\nYour projects\nArticles\nContributions to an open-source platform\nW3Schools Spaces\nW3Schools Spaces\nEverything you need right in the browser. It is easy to use - try it!",
      "examples": []
    },
    {
      "title": "How TO - Become a Front-End Developer",
      "summary": "A Front-End Developer is someone who creates websites and web applications.\nThe Front-End Developer creates things that the user sees.\nIt is a popular job, and everyone can become a Front-End Developer.\nWhy become a Front-End Developer\nIt is fun and creative.\nIt is flexible - you can work from anywhere!\nMany companies are looking for Front-End Developers.\nWhat does a Front-End Developer do\nThe main responsibility of a Front-End Developer is the User interface.\nSimply put, create things that the user sees.\nNote: If you don't know what a Front-End Developer is, you can learn more about it in the What is a Front-End Developer tutorial.\nThe difference between Front-End and Back-End is that Front-End refers to how a web page looks, while back-end refers to how it works.\nYou also think of Front-End as client-side and Back-End as server-side.\nWhere do I start\nHTML, CSS, and JavaScript are the basic languages you need to know to create a website.\nTo become a Front-End Developer, start with the subjects below, in the following order:\nYou have to code to learn how to code. Practice a lot!\nCreate the structure with HTML. The first thing you have to learn is HTML, which is the standard markup language for creating web pages.\nStyle with CSS. The next step is to learn CSS, to set the layout of your web page with beautiful colors, fonts, and much more.\nMake it interactive with JavaScript. After studying HTML and CSS, you should learn JavaScript to create dynamic and interactive web pages for your users.\nHave you ever heard about W3Schools Spaces? Here you can create a free website using HTML, CSS, and JavaScript.\n* no credit card required\nLearn and practice JavaScript and CSS frameworks and libraries such as:\nBootstrap - Learn Bootstrap\nBootstrap - Learn Bootstrap\nSASS - Learn SASS\nSASS - Learn SASS\njQuery - Learn jQuery\njQuery - Learn jQuery\nReact - Learn React\nReact - Learn React\nVersion control with Git - Learn Git\nVersion control with Git - Learn Git\nKnowing the frameworks and libraries will make you more attractive in the job market.\nLearning RESTful APIs is a bonus. This will allow you to connect the Front-End to the Back-End and its logic.\nREMOVE ADS\nRelevant skills\nA Front-End Developer can have a big tool-box of skills.\nHere are some:\nProgramming languages such as Python, PHP, and SQL\nProblem-solving\nGraphical design\nTypography\nCommunication and collaboration\nSEO\nWant to get your first job? Read our article on how to get a developer job in Ten steps.\nW3Schools Spaces\nW3Schools Spaces\nEverything you need right in the browser. It is easy to use - try it!",
      "examples": []
    },
    {
      "title": "How TO - Hire Developers",
      "summary": "How do you hire developers?\n- A checklist for beginners.\nRecruiting the right developer can be challenging.\nYou need to know what you are looking for, find the right candidates, evaluate them, and ensure they match the company's culture.\nDid you know: The average cost of failed hiring is $17,000, according to research by CareerBuilder.\nHere is a simple checklist for beginners on how to hire developers:\nDefine your needs\nWhat type of developer are you looking for?\nFront-end developer, back-end developer, full stack developer?\nWhat skills and technologies are required for the role?\nWhat level of experience are you looking for?\nJunior, mid-level, or senior?\nWhat will the day-to-day work life look like for the developer?\nWhat tasks will the developer solve?\nLook at our coding language dictionary to understand the different skills trending in the market\n.\nAnswering these questions will help you understand what you're looking for.\nFill up your pipeline.\nFind out where the developers you are looking for are hanging out. Navigate through:\nCommunity Channels\nMeet-ups\nSocial Media\nEvents\nPersonal network\nCheck out:\nDev.Events - To get an overview of the best developer conferences in 2024\nW3Schools Pathfinder - To get an up-to-date candidate pipeline based on your hiring criteria\nW3Schools LinkedIn profile - To get in touch with over 1 million developers\nThe main challenge is not finding developers. It's getting them to want to talk to you.\nEspecially mid-level and senior developers, whom recruiters often approach.\nTherefore;\nPersonalize your message when reaching out - No one likes to be one of a million.\nShow interest in them and what they do.\nMake sure to show what is in it for them by joining the company and its vision.\nStart the evaluation process.\nYou should now have a list of candidates you want to evaluate.\nRemember, It's not just about the technical skills; they should match the company's culture. Hire for culture, train for skills.\nHere is a simple checklist to follow:\nLook at their portfolio/ repository.\nEvaluate their level of problem-solving ability.\nRun interviews\nDo a background test.\nTry Pathfinders assessment engine for an objective talent evaluation.\nThere you have it.\nA simple checklist to follow when you are hiring developers.\nRemember: A hiring process can be scary the first time. The second time, it gets easier.\nBy the third time, you will have a pipeline build-up.\nDon't give up - we believe in you.",
      "examples": []
    }
  ],
  "glossary": [
    "accordion",
    "active class",
    "add class",
    "alert buttons",
    "alerts",
    "animate icons",
    "animated buttons",
    "animated search",
    "arrows",
    "aspect ratio",
    "autocomplete",
    "avatar images",
    "backend",
    "badges",
    "big header",
    "block buttons",
    "blog",
    "blog layout",
    "bottom navigation",
    "breadcrumbs",
    "browser window",
    "bullet color",
    "button group",
    "buttons",
    "calendar",
    "callout",
    "cards",
    "cascading dropdown",
    "center images",
    "center tables",
    "center vertically",
    "center website",
    "change class",
    "chat messages",
    "check checkbox",
    "checkout form",
    "circles",
    "clearfix",
    "collapsed sidebar",
    "collapsed sidepanel",
    "collapsible",
    "color picker",
    "column cards",
    "comparison table",
    "contenteditable border",
    "convert length",
    "convert speed",
    "convert temperature",
    "convert weight",
    "converters",
    "countdown timer",
    "coupon",
    "curtain menu",
    "custom scrollbar",
    "custom select",
    "cutout text",
    "delete modal",
    "device look",
    "dividers",
    "download buttons",
    "download link",
    "dropup",
    "email field",
    "equal height",
    "exercises",
    "expanding grid",
    "fading buttons",
    "favicon",
    "filter dropdown",
    "filter elements",
    "filter list",
    "filter table",
    "filters",
    "fixed footer",
    "fixed menu",
    "fixed sidebar",
    "flip box",
    "flip card",
    "forms",
    "free",
    "fullscreen navigation",
    "fullscreen search",
    "fullscreen video",
    "fullscreen window",
    "glowing text",
    "google",
    "google charts",
    "google fonts",
    "grid",
    "hero image",
    "hide scrollbar",
    "hire developers",
    "hover dropdowns",
    "hover tabs",
    "how to",
    "howto home",
    "html includes",
    "icon bar",
    "icon buttons",
    "image effects",
    "image gallery",
    "image grid",
    "image text",
    "image zoom",
    "images",
    "inline form",
    "javascript",
    "js animations",
    "js exponentiation",
    "labels",
    "lightbox",
    "list group",
    "loaders",
    "loading buttons",
    "login form",
    "london",
    "mega menu",
    "menu icon",
    "menus",
    "mobile menu",
    "modal box",
    "modal boxes",
    "modal header",
    "modal image",
    "modal images",
    "more",
    "nested table",
    "newsletter",
    "notes",
    "notification button",
    "offline detection",
    "outline buttons",
    "overlay effect",
    "pagination",
    "parallax",
    "paris",
    "password",
    "password validation",
    "pill buttons",
    "pill navigation",
    "placeholder color",
    "popup form",
    "popups",
    "portfolio gallery",
    "pricing table",
    "product card",
    "profile card",
    "programs",
    "progress bars",
    "quotes slideshow",
    "range sliders",
    "redirect webpage",
    "references",
    "register form",
    "remove class",
    "remove decimals",
    "remove property",
    "report error",
    "responsive floats",
    "responsive form",
    "responsive header",
    "responsive iframes",
    "responsive images",
    "responsive sidebar",
    "responsive tables",
    "responsive text",
    "responsive topnav",
    "ribbon",
    "round buttons",
    "rounded images",
    "scroll drawing",
    "scroll indicator",
    "search bar",
    "search button",
    "search menu",
    "section counter",
    "shapes",
    "side navigation",
    "signup form",
    "skill bar",
    "slideshow",
    "slideshow gallery",
    "smooth scroll",
    "snackbar",
    "sort list",
    "sort table",
    "split buttons",
    "split navigation",
    "split screen",
    "stacked form",
    "star rating",
    "sticky element",
    "sticky header",
    "sticky image",
    "sticky navbar",
    "style hr",
    "subnavigation menu",
    "syntax highlighter",
    "tab gallery",
    "tab headers",
    "tables",
    "tabs",
    "tag cloud",
    "testimonials",
    "text buttons",
    "text divider",
    "thumbnails",
    "timeline",
    "toggle class",
    "toggle switch",
    "toggle text",
    "tokyo",
    "tooltips",
    "top navigation",
    "tree view",
    "typewriter",
    "user rating",
    "username",
    "vertical line",
    "vertical menu",
    "vertical tabs",
    "w3schools spaces",
    "website",
    "zoom hover"
  ]
}