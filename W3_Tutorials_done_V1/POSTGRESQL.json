{
  "language": "POSTGRESQL",
  "tutorials": [
    {
      "title": "PostgreSQL Tutorial",
      "code": [
        {
          "text": "SELECT * FROM cars\nORDER BY year;",
          "html": "SELECT * FROM cars<br/>\n          ORDER BY year;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/index.php"
      }
    },
    {
      "title": "PostgreSQL Get Started",
      "code": [
        {
          "text": "SELECT version();",
          "html": "<code class=\"language-sql\"><span class=\"token keyword keyword-SELECT\">SELECT</span> version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_getstarted.php"
      }
    },
    {
      "title": "PostgreSQL - pgAdmin4",
      "code": [
        {
          "text": "SELECT version();",
          "html": "<code class=\"language-sql\"><span class=\"token keyword keyword-SELECT\">SELECT</span> version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_pgadmin4.php"
      }
    },
    {
      "title": "PostgreSQL Create Table",
      "code": [
        {
          "text": "CREATE TABLE cars (\nbrand VARCHAR(255),\nmodel VARCHAR(255),\nyear INT\n);",
          "html": "CREATE TABLE cars (<br/>\n            brand \n          VARCHAR(255),<br/>\n            model \n          VARCHAR(255),<br/>  year INT<br/>\n        );"
        },
        {
          "text": "CREATE TABLE",
          "html": "CREATE TABLE"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        },
        {
          "text": "brand | model | year\n-------+-------+------\n(0 rows)",
          "html": "brand | model | year<br/>\n-------+-------+------<br/>\n(0 rows)"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_create_table.php"
      }
    },
    {
      "title": "PostgreSQL Insert Data",
      "code": [
        {
          "text": "INSERT INTO cars (brand, model, year)\nVALUES ('Ford', 'Mustang', 1964);",
          "html": "INSERT INTO cars (brand, model, year)<br/>\nVALUES ('Ford', 'Mustang', 1964);"
        },
        {
          "text": "INSERT 0 1",
          "html": "INSERT 0 1"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        },
        {
          "text": "brand |  model  | year\n-------+---------+------\nFord  | Mustang | 1964\n(1 row)",
          "html": "brand |  model  | year<br/>\n-------+---------+------<br/> Ford  | Mustang | 1964<br/>\n(1 row)"
        },
        {
          "text": "INSERT INTO cars (brand, model, year)\nVALUES\n('Volvo', 'p1800', 1968),\n('BMW', 'M1', 1978),\n('Toyota', 'Celica', 1975);",
          "html": "INSERT INTO cars (brand, model, year)<br/>\nVALUES<br/>\n  ('Volvo', 'p1800', 1968),<br/>\n  ('BMW', 'M1', 1978),<br/>\n  ('Toyota', 'Celica', 1975);"
        },
        {
          "text": "INSERT 0 3",
          "html": "INSERT 0 3"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_insert_into.php"
      }
    },
    {
      "title": "PostgreSQL Select Data",
      "code": [
        {
          "text": "SELECT brand, year FROM cars;",
          "html": "SELECT brand, year FROM cars;"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_fetch_data.php"
      }
    },
    {
      "title": "PostgreSQL ADD COLUMN",
      "code": [
        {
          "text": "ALTER TABLE cars\nADD color VARCHAR(255);",
          "html": "ALTER TABLE cars<br/>\n          ADD color VARCHAR(255);"
        },
        {
          "text": "ALTER TABLE",
          "html": "ALTER TABLE"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_add_column.php"
      }
    },
    {
      "title": "PostgreSQL UPDATE",
      "code": [
        {
          "text": "UPDATE cars\nSET color = 'red'\nWHERE brand = 'Volvo';",
          "html": "UPDATE cars<br/>\n          SET color = 'red'<br/>\n          WHERE brand = 'Volvo';"
        },
        {
          "text": "UPDATE 1",
          "html": "UPDATE 1"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        },
        {
          "text": "UPDATE cars\nSET color = 'red';",
          "html": "UPDATE cars<br/>\n          SET color = 'red';"
        },
        {
          "text": "UPDATE 4",
          "html": "UPDATE 4"
        },
        {
          "text": "UPDATE cars\nSET color = 'white', year = 1970\nWHERE brand = 'Toyota';",
          "html": "UPDATE cars<br/>\n          SET color = 'white', year = 1970<br/>\n          WHERE brand = 'Toyota';"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_update.php"
      }
    },
    {
      "title": "PostgreSQL ALTER COLUMN",
      "code": [
        {
          "text": "ALTER TABLE cars\nALTER COLUMN year TYPE VARCHAR(4);",
          "html": "ALTER TABLE cars<br/>\n          ALTER COLUMN \n          year TYPE VARCHAR(4);"
        },
        {
          "text": "ALTER TABLE",
          "html": "ALTER TABLE"
        },
        {
          "text": "ALTER TABLE cars\nALTER COLUMN color TYPE VARCHAR(30);",
          "html": "ALTER TABLE cars<br/>\n          ALTER COLUMN color TYPE VARCHAR(30);"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_alter_column.php"
      }
    },
    {
      "title": "PostgreSQL DROP COLUMN",
      "code": [
        {
          "text": "ALTER TABLE cars\nDROP COLUMN color;",
          "html": "ALTER TABLE cars<br/>\n          DROP COLUMN color;"
        },
        {
          "text": "ALTER TABLE",
          "html": "ALTER TABLE"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_drop_column.php"
      }
    },
    {
      "title": "PostgreSQL DELETE",
      "code": [
        {
          "text": "DELETE FROM cars\nWHERE brand = 'Volvo';",
          "html": "DELETE FROM cars<br/>\n          WHERE brand = 'Volvo';"
        },
        {
          "text": "DELETE 1",
          "html": "DELETE 1"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        },
        {
          "text": "DELETE FROM cars;",
          "html": "DELETE FROM cars;"
        },
        {
          "text": "DELETE 3",
          "html": "DELETE 3"
        },
        {
          "text": "TRUNCATE TABLE cars;",
          "html": "TRUNCATE TABLE cars;"
        },
        {
          "text": "TRUNCATE TABLE",
          "html": "TRUNCATE TABLE"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_delete.php"
      }
    },
    {
      "title": "PostgreSQL DROP TABLE",
      "code": [
        {
          "text": "DROP TABLE cars;",
          "html": "DROP TABLE cars;"
        },
        {
          "text": "DROP TABLE",
          "html": "DROP TABLE"
        },
        {
          "text": "SELECT * FROM cars;",
          "html": "SELECT * FROM cars;"
        },
        {
          "text": "ERROR: relation \"cars\" does not exist\nLINE 1: SELECT * FROM cars;\n^",
          "html": "ERROR: relation \"cars\" does not exist<br/>LINE 1: SELECT * FROM cars;<br/>                      \n    ^"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_drop_table.php"
      }
    },
    {
      "title": "Create Demo Database",
      "code": [
        {
          "text": "CREATE TABLE categories (\ncategory_id SERIAL NOT NULL PRIMARY KEY,\ncategory_name VARCHAR(255),\ndescription VARCHAR(255)\n);",
          "html": "CREATE TABLE categories (<br/>  category_id SERIAL NOT NULL PRIMARY KEY,<br/>  category_name VARCHAR(255),<br/>  description VARCHAR(255)<br/>);"
        },
        {
          "text": "CREATE TABLE",
          "html": "CREATE TABLE"
        },
        {
          "text": "INSERT INTO categories (category_name, description)\nVALUES\n('Beverages', 'Soft drinks, coffees, teas, beers, and ales'),\n('Condiments', 'Sweet and savory sauces, relishes, spreads, and seasonings'),\n('Confections', 'Desserts, candies, and sweet breads'),\n('Dairy Products', 'Cheeses'),\n('Grains/Cereals', 'Breads, crackers, pasta, and cereal'),\n('Meat/Poultry', 'Prepared meats'),\n('Produce', 'Dried fruit and bean curd'),\n('Seafood', 'Seaweed and fish');",
          "html": "INSERT INTO categories (category_name, description)<br/>VALUES<br/>  ('Beverages', 'Soft drinks, coffees, teas, beers, and ales'),<br/>  ('Condiments', 'Sweet and savory sauces, relishes, spreads, and seasonings'),<br/>  ('Confections', 'Desserts, candies, and sweet breads'),<br/>  ('Dairy Products', 'Cheeses'),<br/>  ('Grains/Cereals', 'Breads, crackers, pasta, and cereal'),<br/>  ('Meat/Poultry', 'Prepared meats'),<br/>  ('Produce', 'Dried fruit and bean curd'),<br/>  \n        ('Seafood', 'Seaweed and fish');"
        },
        {
          "text": "INSERT 0 8",
          "html": "INSERT 0 8"
        },
        {
          "text": "CREATE TABLE customers (\ncustomer_id SERIAL NOT NULL PRIMARY KEY,\ncustomer_name VARCHAR(255),\ncontact_name VARCHAR(255),\naddress VARCHAR(255),\ncity VARCHAR(255),\npostal_code VARCHAR(255),\ncountry VARCHAR(255)\n);",
          "html": "CREATE TABLE customers (<br/>  customer_id SERIAL NOT \n        NULL PRIMARY KEY,<br/>  customer_name VARCHAR(255),<br/>  \n        contact_name VARCHAR(255),<br/>  address VARCHAR(255),<br/>  \n        city VARCHAR(255),<br/>  postal_code VARCHAR(255),<br/>  country \n        VARCHAR(255)<br/>);"
        },
        {
          "text": "INSERT INTO customers (customer_name, contact_name, address, city, postal_code, country)\nVALUES\n('Alfreds Futterkiste', 'Maria Anders', 'Obere Str. 57', 'Berlin', '12209', 'Germany'),\n('Ana Trujillo Emparedados y helados', 'Ana Trujillo', 'Avda. de la Constitucion 2222', 'Mexico D.F.', '05021', 'Mexico'),\n('Antonio Moreno Taquera', 'Antonio Moreno', 'Mataderos 2312', 'Mexico D.F.', '05023', 'Mexico'),\n('Around the Horn', 'Thomas Hardy', '120 Hanover Sq.', 'London', 'WA1 1DP', 'UK'),\n('Berglunds snabbkoep', 'Christina Berglund', 'Berguvsvegen 8', 'Lulea', 'S-958 22', 'Sweden'),\n('Blauer See Delikatessen', 'Hanna Moos', 'Forsterstr. 57', 'Mannheim', '68306', 'Germany'),\n('Blondel pere et fils', 'Frederique Citeaux', '24, place Kleber', 'Strasbourg', '67000', 'France'),\n('Bolido Comidas preparadas', 'Martin Sommer', 'C/ Araquil, 67', 'Madrid', '28023', 'Spain'),\n('Bon app', 'Laurence Lebihans', '12, rue des Bouchers', 'Marseille', '13008', 'France'),\n('Bottom-Dollar Marketse', 'Elizabeth Lincoln', '23 Tsawassen Blvd.', 'Tsawassen', 'T2F 8M4', 'Canada'),\n('Bs Beverages', 'Victoria Ashworth', 'Fauntleroy Circus', 'London', 'EC2 5NT', 'UK'),\n('Cactus Comidas para llevar', 'Patricio Simpson', 'Cerrito 333', 'Buenos Aires', '1010', 'Argentina'),\n('Centro comercial Moctezuma', 'Francisco Chang', 'Sierras de Granada 9993', 'Mexico D.F.', '05022', 'Mexico'),\n('Chop-suey Chinese', 'Yang Wang', 'Hauptstr. 29', 'Bern', '3012', 'Switzerland'),\n('Comercio Mineiro', 'Pedro Afonso', 'Av. dos Lusiadas, 23', 'Sao Paulo', '05432-043', 'Brazil'),\n('Consolidated Holdings', 'Elizabeth Brown', 'Berkeley Gardens 12 Brewery ', 'London', 'WX1 6LT', 'UK'),\n('Drachenblut Delikatessend', 'Sven Ottlieb', 'Walserweg 21', 'Aachen', '52066', 'Germany'),\n('Du monde entier', 'Janine Labrune', '67, rue des Cinquante Otages', 'Nantes', '44000', 'France'),\n('Eastern Connection', 'Ann Devon', '35 King George', 'London', 'WX3 6FW', 'UK'),\n('Ernst Handel', 'Roland Mendel', 'Kirchgasse 6', 'Graz', '8010', 'Austria'),\n('Familia Arquibaldo', 'Aria Cruz', 'Rua Oros, 92', 'Sao Paulo', '05442-030', 'Brazil'),\n('FISSA Fabrica Inter. Salchichas S.A.', 'Diego Roel', 'C/ Moralzarzal, 86', 'Madrid', '28034', 'Spain'),\n('Folies gourmandes', 'Martine Rance', '184, chaussee de Tournai', 'Lille', '59000', 'France'),\n('Folk och fe HB', 'Maria Larsson', 'Akergatan 24', 'Brecke', 'S-844 67', 'Sweden'),\n('Frankenversand', 'Peter Franken', 'Berliner Platz 43', 'Munchen', '80805', 'Germany'),\n('France restauration', 'Carine Schmitt', '54, rue Royale', 'Nantes', '44000', 'France'),\n('Franchi S.p.A.', 'Paolo Accorti', 'Via Monte Bianco 34', 'Torino', '10100', 'Italy'),\n('Furia Bacalhau e Frutos do Mar', 'Lino Rodriguez ', 'Jardim das rosas n. 32', 'Lisboa', '1675', 'Portugal'),\n('Galeria del gastronomo', 'Eduardo Saavedra', 'Rambla de Cataluna, 23', 'Barcelona', '08022', 'Spain'),\n('Godos Cocina Tipica', 'Jose Pedro Freyre', 'C/ Romero, 33', 'Sevilla', '41101', 'Spain'),\n('Gourmet Lanchonetes', 'Andre Fonseca', 'Av. Brasil, 442', 'Campinas', '04876-786', 'Brazil'),\n('Great Lakes Food Market', 'Howard Snyder', '2732 Baker Blvd.', 'Eugene', '97403', 'USA'),\n('GROSELLA-Restaurante', 'Manuel Pereira', '5th Ave. Los Palos Grandes', 'Caracas', '1081', 'Venezuela'),\n('Hanari Carnes', 'Mario Pontes', 'Rua do Paco, 67', 'Rio de Janeiro', '05454-876', 'Brazil'),\n('HILARION-Abastos', 'Carlos Hernandez', 'Carrera 22 con Ave. Carlos Soublette #8-35', 'San Cristobal', '5022', 'Venezuela'),\n('Hungry Coyote Import Store', 'Yoshi Latimer', 'City Center Plaza 516 Main St.', 'Elgin', '97827', 'USA'),\n('Hungry Owl All-Night Grocers', 'Patricia McKenna', '8 Johnstown Road', 'Cork', '', 'Ireland'),\n('Island Trading', 'Helen Bennett', 'Garden House Crowther Way', 'Cowes', 'PO31 7PJ', 'UK'),\n('Koniglich Essen', 'Philip Cramer', 'Maubelstr. 90', 'Brandenburg', '14776', 'Germany'),\n('La corne d abondance', 'Daniel Tonini', '67, avenue de l Europe', 'Versailles', '78000', 'France'),\n('La maison d Asie', 'Annette Roulet', '1 rue Alsace-Lorraine', 'Toulouse', '31000', 'France'),\n('Laughing Bacchus Wine Cellars', 'Yoshi Tannamuri', '1900 Oak St.', 'Vancouver', 'V3F 2K1', 'Canada'),\n('Lazy K Kountry Store', 'John Steel', '12 Orchestra Terrace', 'Walla Walla', '99362', 'USA'),\n('Lehmanns Marktstand', 'Renate Messner', 'Magazinweg 7', 'Frankfurt a.M. ', '60528', 'Germany'),\n('Lets Stop N Shop', 'Jaime Yorres', '87 Polk St. Suite 5', 'San Francisco', '94117', 'USA'),\n('LILA-Supermercado', 'Carlos Gonzalez', 'Carrera 52 con Ave. Bolivar #65-98 Llano Largo', 'Barquisimeto', '3508', 'Venezuela'),\n('LINO-Delicateses', 'Felipe Izquierdo', 'Ave. 5 de Mayo Porlamar', 'I. de Margarita', '4980', 'Venezuela'),\n('Lonesome Pine Restaurant', 'Fran Wilson', '89 Chiaroscuro Rd.', 'Portland', '97219', 'USA'),\n('Magazzini Alimentari Riuniti', 'Giovanni Rovelli', 'Via Ludovico il Moro 22', 'Bergamo', '24100', 'Italy'),\n('Maison Dewey', 'Catherine Dewey', 'Rue Joseph-Bens 532', 'Bruxelles', 'B-1180', 'Belgium'),\n('Mere Paillarde', 'Jean Fresniere', '43 rue St. Laurent', 'Montreal', 'H1J 1C3', 'Canada'),\n('Morgenstern Gesundkost', 'Alexander Feuer', 'Heerstr. 22', 'Leipzig', '04179', 'Germany'),\n('North/South', 'Simon Crowther', 'South House 300 Queensbridge', 'London', 'SW7 1RZ', 'UK'),\n('Oceano Atlantico Ltda.', 'Yvonne Moncada', 'Ing. Gustavo Moncada 8585 Piso 20-A', 'Buenos Aires', '1010', 'Argentina'),\n('Old World Delicatessen', 'Rene Phillips', '2743 Bering St.', 'Anchorage', '99508', 'USA'),\n('Ottilies Keseladen', 'Henriette Pfalzheim', 'Mehrheimerstr. 369', 'Koln', '50739', 'Germany'),\n('Paris specialites', 'Marie Bertrand', '265, boulevard Charonne', 'Paris', '75012', 'France'),\n('Pericles Comidas clasicas', 'Guillermo Fernandez', 'Calle Dr. Jorge Cash 321', 'Mexico D.F.', '05033', 'Mexico'),\n('Piccolo und mehr', 'Georg Pipps', 'Geislweg 14', 'Salzburg', '5020', 'Austria'),\n('Princesa Isabel Vinhoss', 'Isabel de Castro', 'Estrada da saude n. 58', 'Lisboa', '1756', 'Portugal'),\n('Que Delicia', 'Bernardo Batista', 'Rua da Panificadora, 12', 'Rio de Janeiro', '02389-673', 'Brazil'),\n('Queen Cozinha', 'Lucia Carvalho', 'Alameda dos Canarios, 891', 'Sao Paulo', '05487-020', 'Brazil'),\n('QUICK-Stop', 'Horst Kloss', 'Taucherstrasse 10', 'Cunewalde', '01307', 'Germany'),\n('Rancho grande', 'Sergio Gutiarrez', 'Av. del Libertador 900', 'Buenos Aires', '1010', 'Argentina'),\n('Rattlesnake Canyon Grocery', 'Paula Wilson', '2817 Milton Dr.', 'Albuquerque', '87110', 'USA'),\n('Reggiani Caseifici', 'Maurizio Moroni', 'Strada Provinciale 124', 'Reggio Emilia', '42100', 'Italy'),\n('Ricardo Adocicados', 'Janete Limeira', 'Av. Copacabana, 267', 'Rio de Janeiro', '02389-890', 'Brazil'),\n('Richter Supermarkt', 'Michael Holz', 'Grenzacherweg 237', 'Genève', '1203', 'Switzerland'),\n('Romero y tomillo', 'Alejandra Camino', 'Gran Via, 1', 'Madrid', '28001', 'Spain'),\n('Santa Gourmet', 'Jonas Bergulfsen', 'Erling Skakkes gate 78', 'Stavern', '4110', 'Norway'),\n('Save-a-lot Markets', 'Jose Pavarotti', '187 Suffolk Ln.', 'Boise', '83720', 'USA'),\n('Seven Seas Imports', 'Hari Kumar', '90 Wadhurst Rd.', 'London', 'OX15 4NB', 'UK'),\n('Simons bistro', 'Jytte Petersen', 'Vinbeltet 34', 'Kobenhavn', '1734', 'Denmark'),\n('Specialites du monde', 'Dominique Perrier', '25, rue Lauriston', 'Paris', '75016', 'France'),\n('Split Rail Beer & Ale', 'Art Braunschweiger', 'P.O. Box 555', 'Lander', '82520', 'USA'),\n('Supremes delices', 'Pascale Cartrain', 'Boulevard Tirou, 255', 'Charleroi', 'B-6000', 'Belgium'),\n('The Big Cheese', 'Liz Nixon', '89 Jefferson Way Suite 2', 'Portland', '97201', 'USA'),\n('The Cracker Box', 'Liu Wong', '55 Grizzly Peak Rd.', 'Butte', '59801', 'USA'),\n('Toms Spezialiteten', 'Karin Josephs', 'Luisenstr. 48', 'Manster', '44087', 'Germany'),\n('Tortuga Restaurante', 'Miguel Angel Paolino', 'Avda. Azteca 123', 'Mexico D.F.', '05033', 'Mexico'),\n('Tradicao Hipermercados', 'Anabela Domingues', 'Av. Ines de Castro, 414', 'Sao Paulo', '05634-030', 'Brazil'),\n('Trails Head Gourmet Provisioners', 'Helvetius Nagy', '722 DaVinci Blvd.', 'Kirkland', '98034', 'USA'),\n('Vaffeljernet', 'Palle Ibsen', 'Smagsloget 45', 'Arhus', '8200', 'Denmark'),\n('Victuailles en stock', 'Mary Saveley', '2, rue du Commerce', 'Lyon', '69004', 'France'),\n('Vins et alcools Chevalier', 'Paul Henriot', '59 rue de l Abbaye', 'Reims', '51100', 'France'),\n('Die Wandernde Kuh', 'Rita Moller', 'Adenauerallee 900', 'Stuttgart', '70563', 'Germany'),\n('Wartian Herkku', 'Pirkko Koskitalo', 'Torikatu 38', 'Oulu', '90110', 'Finland'),\n('Wellington Importadora', 'Paula Parente', 'Rua do Mercado, 12', 'Resende', '08737-363', 'Brazil'),\n('White Clover Markets', 'Karl Jablonski', '305 - 14th Ave. S. Suite 3B', 'Seattle', '98128', 'USA'),\n('Wilman Kala', 'Matti Karttunen', 'Keskuskatu 45', 'Helsinki', '21240', 'Finland'),\n('Wolski', 'Zbyszek', 'ul. Filtrowa 68', 'Walla', '01-012', 'Poland');",
          "html": "INSERT INTO customers (customer_name, contact_name, address, city, postal_code, country)<br/>\n        VALUES<br/>  ('Alfreds Futterkiste', 'Maria Anders', 'Obere Str. \n        57', 'Berlin', '12209', 'Germany'),<br/>  ('Ana Trujillo Emparedados \n        y helados', 'Ana Trujillo', 'Avda. de la Constitucion 2222', 'Mexico \n        D.F.', '05021', 'Mexico'),<br/>  ('Antonio Moreno Taquera', 'Antonio \n        Moreno', 'Mataderos 2312', 'Mexico D.F.', '05023', 'Mexico'),<br/>  \n        ('Around the Horn', 'Thomas Hardy', '120 Hanover Sq.', 'London', 'WA1 \n        1DP', 'UK'),<br/>  ('Berglunds snabbkoep', 'Christina Berglund', 'Berguvsvegen \n        8', 'Lulea', 'S-958 22', 'Sweden'),<br/>  ('Blauer See Delikatessen', \n        'Hanna Moos', 'Forsterstr. 57', 'Mannheim', '68306', 'Germany'),<br/>  \n        ('Blondel pere et fils', 'Frederique Citeaux', '24, place Kleber', \n        'Strasbourg', '67000', 'France'),<br/>  ('Bolido Comidas preparadas', \n        'Martin Sommer', 'C/ Araquil, 67', 'Madrid', '28023', 'Spain'),<br/>  \n        ('Bon app', 'Laurence Lebihans', '12, rue des Bouchers', 'Marseille', \n        '13008', 'France'),<br/>  ('Bottom-Dollar Marketse', 'Elizabeth \n        Lincoln', '23 Tsawassen Blvd.', 'Tsawassen', 'T2F 8M4', 'Canada'),<br/>  \n        ('Bs Beverages', 'Victoria Ashworth', 'Fauntleroy Circus', 'London', \n        'EC2 5NT', 'UK'),<br/>  ('Cactus Comidas para llevar', 'Patricio \n        Simpson', 'Cerrito 333', 'Buenos Aires', '1010', 'Argentina'),<br/>  \n        ('Centro comercial Moctezuma', 'Francisco Chang', 'Sierras de Granada \n        9993', 'Mexico D.F.', '05022', 'Mexico'),<br/>  ('Chop-suey \n        Chinese', 'Yang Wang', 'Hauptstr. 29', 'Bern', '3012', 'Switzerland'),<br/>  \n        ('Comercio Mineiro', 'Pedro Afonso', 'Av. dos Lusiadas, 23', 'Sao \n        Paulo', '05432-043', 'Brazil'),<br/>  ('Consolidated Holdings', \n        'Elizabeth Brown', 'Berkeley Gardens 12 Brewery ', 'London', 'WX1 6LT', \n        'UK'),<br/>  ('Drachenblut Delikatessend', 'Sven Ottlieb', 'Walserweg \n        21', 'Aachen', '52066', 'Germany'),<br/>  ('Du monde entier', \n        'Janine Labrune', '67, rue des Cinquante Otages', 'Nantes', '44000', \n        'France'),<br/>  ('Eastern Connection', 'Ann Devon', '35 King \n        George', 'London', 'WX3 6FW', 'UK'),<br/>  ('Ernst Handel', 'Roland \n        Mendel', 'Kirchgasse 6', 'Graz', '8010', 'Austria'),<br/>  ('Familia \n        Arquibaldo', 'Aria Cruz', 'Rua Oros, 92', 'Sao Paulo', '05442-030', \n        'Brazil'),<br/>  ('FISSA Fabrica Inter. Salchichas S.A.', 'Diego \n        Roel', 'C/ Moralzarzal, 86', 'Madrid', '28034', 'Spain'),<br/>  ('Folies \n        gourmandes', 'Martine Rance', '184, chaussee de Tournai', 'Lille', \n        '59000', 'France'),<br/>  ('Folk och fe HB', 'Maria Larsson', 'Akergatan \n        24', 'Brecke', 'S-844 67', 'Sweden'),<br/>  ('Frankenversand', \n        'Peter Franken', 'Berliner Platz 43', 'Munchen', '80805', 'Germany'),<br/>  \n        ('France restauration', 'Carine Schmitt', '54, rue Royale', 'Nantes', \n        '44000', 'France'),<br/>  ('Franchi S.p.A.', 'Paolo Accorti', 'Via \n        Monte Bianco 34', 'Torino', '10100', 'Italy'),<br/>  ('Furia \n        Bacalhau e Frutos do Mar', 'Lino Rodriguez ', 'Jardim das rosas n. 32', \n        'Lisboa', '1675', 'Portugal'),<br/>  ('Galeria del gastronomo', \n        'Eduardo Saavedra', 'Rambla de Cataluna, 23', 'Barcelona', '08022', \n        'Spain'),<br/>  ('Godos Cocina Tipica', 'Jose Pedro Freyre', 'C/ \n        Romero, 33', 'Sevilla', '41101', 'Spain'),<br/>  ('Gourmet \n        Lanchonetes', 'Andre Fonseca', 'Av. Brasil, 442', 'Campinas', \n        '04876-786', 'Brazil'),<br/>  ('Great Lakes Food Market', 'Howard \n        Snyder', '2732 Baker Blvd.', 'Eugene', '97403', 'USA'),<br/>  \n        ('GROSELLA-Restaurante', 'Manuel Pereira', '5th Ave. Los Palos Grandes', \n        'Caracas', '1081', 'Venezuela'),<br/>  ('Hanari Carnes', 'Mario \n        Pontes', 'Rua do Paco, 67', 'Rio de Janeiro', '05454-876', 'Brazil'),<br/>  \n        ('HILARION-Abastos', 'Carlos Hernandez', 'Carrera 22 con Ave. Carlos \n        Soublette #8-35', 'San Cristobal', '5022', 'Venezuela'),<br/>  \n        ('Hungry Coyote Import Store', 'Yoshi Latimer', 'City Center Plaza 516 \n        Main St.', 'Elgin', '97827', 'USA'),<br/>  ('Hungry Owl All-Night \n        Grocers', 'Patricia McKenna', '8 Johnstown Road', 'Cork', '', \n        'Ireland'),<br/>  ('Island Trading', 'Helen Bennett', 'Garden House \n        Crowther Way', 'Cowes', 'PO31 7PJ', 'UK'),<br/>  ('Koniglich Essen', \n        'Philip Cramer', 'Maubelstr. 90', 'Brandenburg', '14776', 'Germany'),<br/>  \n        ('La corne d abondance', 'Daniel Tonini', '67, avenue de l Europe', \n        'Versailles', '78000', 'France'),<br/>  ('La maison d Asie', \n        'Annette Roulet', '1 rue Alsace-Lorraine', 'Toulouse', '31000', \n        'France'),<br/>  ('Laughing Bacchus Wine Cellars', 'Yoshi Tannamuri', \n        '1900 Oak St.', 'Vancouver', 'V3F 2K1', 'Canada'),<br/>  ('Lazy K \n        Kountry Store', 'John Steel', '12 Orchestra Terrace', 'Walla Walla', \n        '99362', 'USA'),<br/>  ('Lehmanns Marktstand', 'Renate Messner', 'Magazinweg \n        7', 'Frankfurt a.M. ', '60528', 'Germany'),<br/>  ('Lets Stop N \n        Shop', 'Jaime Yorres', '87 Polk St. Suite 5', 'San Francisco', '94117', \n        'USA'),<br/>  ('LILA-Supermercado', 'Carlos Gonzalez', 'Carrera 52 \n        con Ave. Bolivar #65-98 Llano Largo', 'Barquisimeto', '3508', \n        'Venezuela'),<br/>  ('LINO-Delicateses', 'Felipe Izquierdo', 'Ave. 5 \n        de Mayo Porlamar', 'I. de Margarita', '4980', 'Venezuela'),<br/>  \n        ('Lonesome Pine Restaurant', 'Fran Wilson', '89 Chiaroscuro Rd.', \n        'Portland', '97219', 'USA'),<br/>  ('Magazzini Alimentari Riuniti', \n        'Giovanni Rovelli', 'Via Ludovico il Moro 22', 'Bergamo', '24100', \n        'Italy'),<br/>  ('Maison Dewey', 'Catherine Dewey', 'Rue Joseph-Bens \n        532', 'Bruxelles', 'B-1180', 'Belgium'),<br/>  ('Mere Paillarde', \n        'Jean Fresniere', '43 rue St. Laurent', 'Montreal', 'H1J 1C3', \n        'Canada'),<br/>  ('Morgenstern Gesundkost', 'Alexander Feuer', 'Heerstr. \n        22', 'Leipzig', '04179', 'Germany'),<br/>  ('North/South', 'Simon \n        Crowther', 'South House 300 Queensbridge', 'London', 'SW7 1RZ', 'UK'),<br/>  \n        ('Oceano Atlantico Ltda.', 'Yvonne Moncada', 'Ing. Gustavo Moncada 8585 \n        Piso 20-A', 'Buenos Aires', '1010', 'Argentina'),<br/>  ('Old World \n        Delicatessen', 'Rene Phillips', '2743 Bering St.', 'Anchorage', '99508', \n        'USA'),<br/>  ('Ottilies Keseladen', 'Henriette Pfalzheim', 'Mehrheimerstr. \n        369', 'Koln', '50739', 'Germany'),<br/>  ('Paris specialites', \n        'Marie Bertrand', '265, boulevard Charonne', 'Paris', '75012', \n        'France'),<br/>  ('Pericles Comidas clasicas', 'Guillermo \n        Fernandez', 'Calle Dr. Jorge Cash 321', 'Mexico D.F.', '05033', \n        'Mexico'),<br/>  ('Piccolo und mehr', 'Georg Pipps', 'Geislweg 14', \n        'Salzburg', '5020', 'Austria'),<br/>  ('Princesa Isabel Vinhoss', \n        'Isabel de Castro', 'Estrada da saude n. 58', 'Lisboa', '1756', \n        'Portugal'),<br/>  ('Que Delicia', 'Bernardo Batista', 'Rua da \n        Panificadora, 12', 'Rio de Janeiro', '02389-673', 'Brazil'),<br/>  \n        ('Queen Cozinha', 'Lucia Carvalho', 'Alameda dos Canarios, 891', 'Sao \n        Paulo', '05487-020', 'Brazil'),<br/>  ('QUICK-Stop', 'Horst Kloss', \n        'Taucherstrasse 10', 'Cunewalde', '01307', 'Germany'),<br/>  \n        ('Rancho grande', 'Sergio Gutiarrez', 'Av. del Libertador 900', 'Buenos \n        Aires', '1010', 'Argentina'),<br/>  ('Rattlesnake Canyon Grocery', \n        'Paula Wilson', '2817 Milton Dr.', 'Albuquerque', '87110', 'USA'),<br/>  \n        ('Reggiani Caseifici', 'Maurizio Moroni', 'Strada Provinciale 124', \n        'Reggio Emilia', '42100', 'Italy'),<br/>  ('Ricardo Adocicados', 'Janete \n        Limeira', 'Av. Copacabana, 267', 'Rio de Janeiro', '02389-890', \n        'Brazil'),<br/>  ('Richter Supermarkt', 'Michael Holz', 'Grenzacherweg \n        237', 'Genève', '1203', 'Switzerland'),<br/>  ('Romero y tomillo', \n        'Alejandra Camino', 'Gran Via, 1', 'Madrid', '28001', 'Spain'),<br/>  \n        ('Santa Gourmet', 'Jonas Bergulfsen', 'Erling Skakkes gate 78', 'Stavern', \n        '4110', 'Norway'),<br/>  ('Save-a-lot Markets', 'Jose Pavarotti', \n        '187 Suffolk Ln.', 'Boise', '83720', 'USA'),<br/>  ('Seven Seas \n        Imports', 'Hari Kumar', '90 Wadhurst Rd.', 'London', 'OX15 4NB', 'UK'),<br/>  \n        ('Simons bistro', 'Jytte Petersen', 'Vinbeltet 34', 'Kobenhavn', '1734', \n        'Denmark'),<br/>  ('Specialites du monde', 'Dominique Perrier', '25, \n        rue Lauriston', 'Paris', '75016', 'France'),<br/>  ('Split Rail Beer \n        &amp; Ale', 'Art Braunschweiger', 'P.O. Box 555', 'Lander', '82520', 'USA'),<br/>  \n        ('Supremes delices', 'Pascale Cartrain', 'Boulevard Tirou, 255', \n        'Charleroi', 'B-6000', 'Belgium'),<br/>  ('The Big Cheese', 'Liz \n        Nixon', '89 Jefferson Way Suite 2', 'Portland', '97201', 'USA'),<br/>  \n        ('The Cracker Box', 'Liu Wong', '55 Grizzly Peak Rd.', 'Butte', '59801', \n        'USA'),<br/>  ('Toms Spezialiteten', 'Karin Josephs', 'Luisenstr. \n        48', 'Manster', '44087', 'Germany'),<br/>  ('Tortuga Restaurante', \n        'Miguel Angel Paolino', 'Avda. Azteca 123', 'Mexico D.F.', '05033', \n        'Mexico'),<br/>  ('Tradicao Hipermercados', 'Anabela Domingues', \n        'Av. Ines de Castro, 414', 'Sao Paulo', '05634-030', 'Brazil'),<br/>  \n        ('Trails Head Gourmet Provisioners', 'Helvetius Nagy', '722 DaVinci \n        Blvd.', 'Kirkland', '98034', 'USA'),<br/>  ('Vaffeljernet', 'Palle \n        Ibsen', 'Smagsloget 45', 'Arhus', '8200', 'Denmark'),<br/>  ('Victuailles \n        en stock', 'Mary Saveley', '2, rue du Commerce', 'Lyon', '69004', \n        'France'),<br/>  ('Vins et alcools Chevalier', 'Paul Henriot', '59 \n        rue de l Abbaye', 'Reims', '51100', 'France'),<br/>  ('Die Wandernde \n        Kuh', 'Rita Moller', 'Adenauerallee 900', 'Stuttgart', '70563', \n        'Germany'),<br/>  ('Wartian Herkku', 'Pirkko Koskitalo', 'Torikatu \n        38', 'Oulu', '90110', 'Finland'),<br/>  ('Wellington Importadora', \n        'Paula Parente', 'Rua do Mercado, 12', 'Resende', '08737-363', \n        'Brazil'),<br/>  ('White Clover Markets', 'Karl Jablonski', '305 - \n        14th Ave. S. Suite 3B', 'Seattle', '98128', 'USA'),<br/>  ('Wilman \n        Kala', 'Matti Karttunen', 'Keskuskatu 45', 'Helsinki', '21240', \n        'Finland'),<br/>  ('Wolski', 'Zbyszek', 'ul. Filtrowa 68', 'Walla', \n        '01-012', 'Poland');"
        },
        {
          "text": "INSERT 0 91",
          "html": "INSERT 0 91"
        },
        {
          "text": "CREATE TABLE products (\nproduct_id SERIAL NOT NULL PRIMARY KEY,\nproduct_name VARCHAR(255),\ncategory_id INT,\nunit VARCHAR(255),\nprice DECIMAL(10, 2)\n);",
          "html": "CREATE TABLE products (<br/>  product_id SERIAL NOT NULL PRIMARY \n        KEY,<br/>  product_name VARCHAR(255),<br/>  \n        category_id INT,<br/>  unit VARCHAR(255),<br/>  price \n        DECIMAL(10, 2)<br/>);"
        },
        {
          "text": "INSERT INTO products (product_id, product_name, category_id, unit, price)\nVALUES\n(1, 'Chais', 1, '10 boxes x 20 bags', 18),\n(2, 'Chang', 1, '24 - 12 oz bottles', 19),\n(3, 'Aniseed Syrup', 2, '12 - 550 ml bottles', 10),\n(4, 'Chef Antons Cajun Seasoning', 2, '48 - 6 oz jars', 22),\n(5, 'Chef Antons Gumbo Mix', 2, '36 boxes', 21.35),\n(6, 'Grandmas Boysenberry Spread', 2, '12 - 8 oz jars', 25),\n(7, 'Uncle Bobs Organic Dried Pears', 7, '12 - 1 lb pkgs.', 30),\n(8, 'Northwoods Cranberry Sauce', 2, '12 - 12 oz jars', 40),\n(9, 'Mishi Kobe Niku', 6, '18 - 500 g pkgs.', 97),\n(10, 'Ikura', 8, '12 - 200 ml jars', 31),\n(11, 'Queso Cabrales', 4, '1 kg pkg.', 21),\n(12, 'Queso Manchego La Pastora', 4, '10 - 500 g pkgs.', 38),\n(13, 'Konbu', 8, '2 kg box', 6),\n(14, 'Tofu', 7, '40 - 100 g pkgs.', 23.25),\n(15, 'Genen Shouyu', 2, '24 - 250 ml bottles', 15.5),\n(16, 'Pavlova', 3, '32 - 500 g boxes', 17.45),\n(17, 'Alice Mutton', 6, '20 - 1 kg tins', 39),\n(18, 'Carnarvon Tigers', 8, '16 kg pkg.', 62.5),\n(19, 'Teatime Chocolate Biscuits', 3, '10 boxes x 12 pieces', 9.2),\n(20, 'Sir Rodneys Marmalade', 3, '30 gift boxes', 81),\n(21, 'Sir Rodneys Scones', 3, '24 pkgs. x 4 pieces', 10),\n(22, 'Gustafs Kneckebrod', 5, '24 - 500 g pkgs.', 21),\n(23, 'Tunnbrod', 5, '12 - 250 g pkgs.', 9),\n(24, 'Guarani Fantastica', 1, '12 - 355 ml cans', 4.5),\n(25, 'NuNuCa Nui-Nougat-Creme', 3, '20 - 450 g glasses', 14),\n(26, 'Gumber Gummiberchen', 3, '100 - 250 g bags', 31.23),\n(27, 'Schoggi Schokolade', 3, '100 - 100 g pieces', 43.9),\n(28, 'Rassle Sauerkraut', 7, '25 - 825 g cans', 45.6),\n(29, 'Thoringer Rostbratwurst', 6, '50 bags x 30 sausgs.', 123.79),\n(30, 'Nord-Ost Matjeshering', 8, '10 - 200 g glasses', 25.89),\n(31, 'Gorgonzola Telino', 4, '12 - 100 g pkgs', 12.5),\n(32, 'Mascarpone Fabioli', 4, '24 - 200 g pkgs.', 32),\n(33, 'Geitost', 4, '500 g', 2.5),\n(34, 'Sasquatch Ale', 1, '24 - 12 oz bottles', 14),\n(35, 'Steeleye Stout', 1, '24 - 12 oz bottles', 18),\n(36, 'Inlagd Sill', 8, '24 - 250 g jars', 19),\n(37, 'Gravad lax', 8, '12 - 500 g pkgs.', 26),\n(38, 'Cote de Blaye', 1, '12 - 75 cl bottles', 263.5),\n(39, 'Chartreuse verte', 1, '750 cc per bottle', 18),\n(40, 'Boston Crab Meat', 8, '24 - 4 oz tins', 18.4),\n(41, 'Jacks New England Clam Chowder', 8, '12 - 12 oz cans', 9.65),\n(42, 'Singaporean Hokkien Fried Mee', 5, '32 - 1 kg pkgs.', 14),\n(43, 'Ipoh Coffee', 1, '16 - 500 g tins', 46),\n(44, 'Gula Malacca', 2, '20 - 2 kg bags', 19.45),\n(45, 'Rogede sild', 8, '1k pkg.', 9.5),\n(46, 'Spegesild', 8, '4 - 450 g glasses', 12),\n(47, 'Zaanse koeken', 3, '10 - 4 oz boxes', 9.5),\n(48, 'Chocolade', 3, '10 pkgs.', 12.75),\n(49, 'Maxilaku', 3, '24 - 50 g pkgs.', 20),\n(50, 'Valkoinen suklaa', 3, '12 - 100 g bars', 16.25),\n(51, 'Manjimup Dried Apples', 7, '50 - 300 g pkgs.', 53),\n(52, 'Filo Mix', 5, '16 - 2 kg boxes', 7),\n(53, 'Perth Pasties', 6, '48 pieces', 32.8),\n(54, 'Tourtiare', 6, '16 pies', 7.45),\n(55, 'Pate chinois', 6, '24 boxes x 2 pies', 24),\n(56, 'Gnocchi di nonna Alice', 5, '24 - 250 g pkgs.', 38),\n(57, 'Ravioli Angelo', 5, '24 - 250 g pkgs.', 19.5),\n(58, 'Escargots de Bourgogne', 8, '24 pieces', 13.25),\n(59, 'Raclette Courdavault', 4, '5 kg pkg.', 55),\n(60, 'Camembert Pierrot', 4, '15 - 300 g rounds', 34),\n(61, 'Sirop d arable', 2, '24 - 500 ml bottles', 28.5),\n(62, 'Tarte au sucre', 3, '48 pies', 49.3),\n(63, 'Vegie-spread', 2, '15 - 625 g jars', 43.9),\n(64, 'Wimmers gute Semmelknadel', 5, '20 bags x 4 pieces', 33.25),\n(65, 'Louisiana Fiery Hot Pepper Sauce', 2, '32 - 8 oz bottles', 21.05),\n(66, 'Louisiana Hot Spiced Okra', 2, '24 - 8 oz jars', 17),\n(67, 'Laughing Lumberjack Lager', 1, '24 - 12 oz bottles', 14),\n(68, 'Scottish Longbreads', 3, '10 boxes x 8 pieces', 12.5),\n(69, 'Gudbrandsdalsost', 4, '10 kg pkg.', 36),\n(70, 'Outback Lager', 1, '24 - 355 ml bottles', 15),\n(71, 'Flotemysost', 4, '10 - 500 g pkgs.', 21.5),\n(72, 'Mozzarella di Giovanni', 4, '24 - 200 g pkgs.', 34.8),\n(73, 'Red Kaviar', 8, '24 - 150 g jars', 15),\n(74, 'Longlife Tofu', 7, '5 kg pkg.', 10),\n(75, 'Rhenbreu Klosterbier', 1, '24 - 0.5 l bottles', 7.75),\n(76, 'Lakkalikeeri', 1, '500 ml ', 18),\n(77, 'Original Frankfurter grune Soae', 2, '12 boxes', 13);",
          "html": "INSERT INTO products (product_id, product_name, category_id, \n        unit, price)<br/>VALUES<br/>  (1, 'Chais', 1, '10 boxes x 20 bags', 18),<br/>\n         \n        (2, 'Chang', 1, '24 - 12 oz bottles', 19),<br/>  (3, 'Aniseed Syrup', \n        2, '12 - 550 ml bottles', 10),<br/>  (4, 'Chef Antons Cajun Seasoning', \n        2, '48 - 6 oz jars', 22),<br/>  (5, 'Chef Antons Gumbo Mix', 2, '36 \n        boxes', 21.35),<br/>  (6, 'Grandmas Boysenberry Spread', 2, '12 - 8 oz \n        jars', 25),<br/>  (7, 'Uncle Bobs Organic Dried Pears', 7, '12 - 1 lb \n        pkgs.', 30),<br/>  (8, 'Northwoods Cranberry Sauce', 2, '12 - 12 oz \n        jars', 40),<br/>  (9, 'Mishi Kobe Niku', 6, '18 - 500 g pkgs.', 97),<br/>\n         \n        (10, 'Ikura', 8, '12 - 200 ml jars', 31),<br/>  (11, 'Queso Cabrales', \n        4, '1 kg pkg.', 21),<br/>  (12, 'Queso Manchego La Pastora', 4, '10 - \n        500 g pkgs.', 38),<br/>  (13, 'Konbu', 8, '2 kg box', 6),<br/>  (14, \n        'Tofu', 7, '40 - 100 g pkgs.', 23.25),<br/>  (15, 'Genen Shouyu', 2, \n        '24 - 250 ml bottles', 15.5),<br/>  (16, 'Pavlova', 3, '32 - 500 g \n        boxes', 17.45),<br/>  (17, 'Alice Mutton', 6, '20 - 1 kg tins', 39),<br/>\n         \n        (18, 'Carnarvon Tigers', 8, '16 kg pkg.', 62.5),<br/>  (19, 'Teatime \n        Chocolate Biscuits', 3, '10 boxes x 12 pieces', 9.2),<br/>  (20, 'Sir \n        Rodneys Marmalade', 3, '30 gift boxes', 81),<br/>  (21, 'Sir Rodneys \n        Scones', 3, '24 pkgs. x 4 pieces', 10),<br/>  (22, 'Gustafs Kneckebrod', \n        5, '24 - 500 g pkgs.', 21),<br/>  (23, 'Tunnbrod', 5, '12 - 250 g \n        pkgs.', 9),<br/>  (24, 'Guarani Fantastica', 1, '12 - 355 ml cans', \n        4.5),<br/>  (25, 'NuNuCa Nui-Nougat-Creme', 3, '20 - 450 g glasses', \n        14),<br/>  (26, 'Gumber Gummiberchen', 3, '100 - 250 g bags', 31.23),<br/>\n         \n        (27, 'Schoggi Schokolade', 3, '100 - 100 g pieces', 43.9),<br/>  (28, 'Rassle \n        Sauerkraut', 7, '25 - 825 g cans', 45.6),<br/>  (29, 'Thoringer \n        Rostbratwurst', 6, '50 bags x 30 sausgs.', 123.79),<br/>  (30, 'Nord-Ost \n        Matjeshering', 8, '10 - 200 g glasses', 25.89),<br/>  (31, 'Gorgonzola \n        Telino', 4, '12 - 100 g pkgs', 12.5),<br/>  (32, 'Mascarpone Fabioli', \n        4, '24 - 200 g pkgs.', 32),<br/>  (33, 'Geitost', 4, '500 g', 2.5),<br/>\n         \n        (34, 'Sasquatch Ale', 1, '24 - 12 oz bottles', 14),<br/>  (35, 'Steeleye \n        Stout', 1, '24 - 12 oz bottles', 18),<br/>  (36, 'Inlagd Sill', 8, \n        '24 - 250 g jars', 19),<br/>  (37, 'Gravad lax', 8, '12 - 500 g pkgs.', \n        26),<br/>  (38, 'Cote de Blaye', 1, '12 - 75 cl bottles', 263.5),<br/>\n         \n        (39, 'Chartreuse verte', 1, '750 cc per bottle', 18),<br/>  (40, \n        'Boston Crab Meat', 8, '24 - 4 oz tins', 18.4),<br/>  (41, 'Jacks New \n        England Clam Chowder', 8, '12 - 12 oz cans', 9.65),<br/>  (42, \n        'Singaporean Hokkien Fried Mee', 5, '32 - 1 kg pkgs.', 14),<br/>  (43, \n        'Ipoh Coffee', 1, '16 - 500 g tins', 46),<br/>  (44, 'Gula Malacca', \n        2, '20 - 2 kg bags', 19.45),<br/>  (45, 'Rogede sild', 8, '1k \n        pkg.', 9.5),<br/>  (46, 'Spegesild', 8, '4 - 450 g glasses', 12),<br/>\n         \n        (47, 'Zaanse koeken', 3, '10 - 4 oz boxes', 9.5),<br/>  (48, 'Chocolade', \n        3, '10 pkgs.', 12.75),<br/>  (49, 'Maxilaku', 3, '24 - 50 g pkgs.', \n        20),<br/>  (50, 'Valkoinen suklaa', 3, '12 - 100 g bars', 16.25),<br/>\n         \n        (51, 'Manjimup Dried Apples', 7, '50 - 300 g pkgs.', 53),<br/>  (52, \n        'Filo Mix', 5, '16 - 2 kg boxes', 7),<br/>  (53, 'Perth Pasties', \n        6, '48 pieces', 32.8),<br/>  (54, 'Tourtiare', 6, '16 pies', 7.45),<br/>\n         \n        (55, 'Pate chinois', 6, '24 boxes x 2 pies', 24),<br/>  (56, 'Gnocchi \n        di nonna Alice', 5, '24 - 250 g pkgs.', 38),<br/>  (57, 'Ravioli \n        Angelo', 5, '24 - 250 g pkgs.', 19.5),<br/>  (58, 'Escargots de \n        Bourgogne', 8, '24 pieces', 13.25),<br/>  (59, 'Raclette Courdavault', \n        4, '5 kg pkg.', 55),<br/>  (60, 'Camembert Pierrot', 4, '15 - 300 g \n        rounds', 34),<br/>  (61, 'Sirop d arable', 2, '24 - 500 ml bottles', \n        28.5),<br/>  (62, 'Tarte au sucre', 3, '48 pies', 49.3),<br/>  (63, \n        'Vegie-spread', 2, '15 - 625 g jars', 43.9),<br/>  (64, 'Wimmers gute \n        Semmelknadel', 5, '20 bags x 4 pieces', 33.25),<br/>  (65, 'Louisiana \n        Fiery Hot Pepper Sauce', 2, '32 - 8 oz bottles', 21.05),<br/>  (66, \n        'Louisiana Hot Spiced Okra', 2, '24 - 8 oz jars', 17),<br/>  (67, \n        'Laughing Lumberjack Lager', 1, '24 - 12 oz bottles', 14),<br/>  (68, \n        'Scottish Longbreads', 3, '10 boxes x 8 pieces', 12.5),<br/>  (69, 'Gudbrandsdalsost', \n        4, '10 kg pkg.', 36),<br/>  (70, 'Outback Lager', 1, '24 - 355 ml \n        bottles', 15),<br/>  (71, 'Flotemysost', 4, '10 - 500 g pkgs.', 21.5),<br/>\n         \n        (72, 'Mozzarella di Giovanni', 4, '24 - 200 g pkgs.', 34.8),<br/>  (73, \n        'Red Kaviar', 8, '24 - 150 g jars', 15),<br/>  (74, 'Longlife Tofu', \n        7, '5 kg pkg.', 10),<br/>  (75, 'Rhenbreu Klosterbier', 1, '24 - 0.5 l \n        bottles', 7.75),<br/>  (76, 'Lakkalikeeri', 1, '500 ml ', 18),<br/>  (77, \n        'Original Frankfurter grune Soae', 2, '12 boxes', 13);<br/>"
        },
        {
          "text": "INSERT 0 77",
          "html": "INSERT 0 77"
        },
        {
          "text": "CREATE TABLE orders (\norder_id SERIAL NOT NULL PRIMARY KEY,\ncustomer_id INT,\norder_date DATE\n);",
          "html": "CREATE TABLE orders (<br/>  order_id SERIAL NOT NULL PRIMARY KEY,<br/>  \n        customer_id INT,<br/>  order_date DATE<br/>\n        );"
        },
        {
          "text": "INSERT INTO orders (order_id, customer_id, order_date)\nVALUES\n(10248, 90, '2021-07-04'),\n(10249, 81, '2021-07-05'),\n(10250, 34, '2021-07-08'),\n(10251, 84, '2021-07-08'),\n(10252, 76, '2021-07-09'),\n(10253, 34, '2021-07-10'),\n(10254, 14, '2021-07-11'),\n(10255, 68, '2021-07-12'),\n(10256, 88, '2021-07-15'),\n(10257, 35, '2021-07-16'),\n(10258, 20, '2021-07-17'),\n(10259, 13, '2021-07-18'),\n(10260, 55, '2021-07-19'),\n(10261, 61, '2021-07-19'),\n(10262, 65, '2021-07-22'),\n(10263, 20, '2021-07-23'),\n(10264, 24, '2021-07-24'),\n(10265, 7, '2021-07-25'),\n(10266, 87, '2021-07-26'),\n(10267, 25, '2021-07-29'),\n(10268, 33, '2021-07-30'),\n(10269, 89, '2021-07-31'),\n(10270, 87, '2021-08-01'),\n(10271, 75, '2021-08-01'),\n(10272, 65, '2021-08-02'),\n(10273, 63, '2021-08-05'),\n(10274, 85, '2021-08-06'),\n(10275, 49, '2021-08-07'),\n(10276, 80, '2021-08-08'),\n(10277, 52, '2021-08-09'),\n(10278, 5, '2021-08-12'),\n(10279, 44, '2021-08-13'),\n(10280, 5, '2021-08-14'),\n(10281, 69, '2021-08-14'),\n(10282, 69, '2021-08-15'),\n(10283, 46, '2021-08-16'),\n(10284, 44, '2021-08-19'),\n(10285, 63, '2021-08-20'),\n(10286, 63, '2021-08-21'),\n(10287, 67, '2021-08-22'),\n(10288, 66, '2021-08-23'),\n(10289, 11, '2021-08-26'),\n(10290, 15, '2021-08-27'),\n(10291, 61, '2021-08-27'),\n(10292, 81, '2021-08-28'),\n(10293, 80, '2021-08-29'),\n(10294, 65, '2021-08-30'),\n(10295, 85, '2021-09-02'),\n(10296, 46, '2021-09-03'),\n(10297, 7, '2021-09-04'),\n(10298, 37, '2021-09-05'),\n(10299, 67, '2021-09-06'),\n(10300, 49, '2021-09-09'),\n(10301, 86, '2021-09-09'),\n(10302, 76, '2021-09-10'),\n(10303, 30, '2021-09-11'),\n(10304, 80, '2021-09-12'),\n(10305, 55, '2021-09-13'),\n(10306, 69, '2021-09-16'),\n(10307, 48, '2021-09-17'),\n(10308, 2, '2021-09-18'),\n(10309, 37, '2021-09-19'),\n(10310, 77, '2021-09-20'),\n(10311, 18, '2021-09-20'),\n(10312, 86, '2021-09-23'),\n(10313, 63, '2021-09-24'),\n(10314, 65, '2021-09-25'),\n(10315, 38, '2021-09-26'),\n(10316, 65, '2021-09-27'),\n(10317, 48, '2021-09-30'),\n(10318, 38, '2021-10-01'),\n(10319, 80, '2021-10-02'),\n(10320, 87, '2021-10-03'),\n(10321, 38, '2021-10-03'),\n(10322, 58, '2021-10-04'),\n(10323, 39, '2021-10-07'),\n(10324, 71, '2021-10-08'),\n(10325, 39, '2021-10-09'),\n(10326, 8, '2021-10-10'),\n(10327, 24, '2021-10-11'),\n(10328, 28, '2021-10-14'),\n(10329, 75, '2021-10-15'),\n(10330, 46, '2021-10-16'),\n(10331, 9, '2021-10-16'),\n(10332, 51, '2021-10-17'),\n(10333, 87, '2021-10-18'),\n(10334, 84, '2021-10-21'),\n(10335, 37, '2021-10-22'),\n(10336, 60, '2021-10-23'),\n(10337, 25, '2021-10-24'),\n(10338, 55, '2021-10-25'),\n(10339, 51, '2021-10-28'),\n(10340, 9, '2021-10-29'),\n(10341, 73, '2021-10-29'),\n(10342, 25, '2021-10-30'),\n(10343, 44, '2021-10-31'),\n(10344, 89, '2021-11-01'),\n(10345, 63, '2021-11-04'),\n(10346, 65, '2021-11-05'),\n(10347, 21, '2021-11-06'),\n(10348, 86, '2021-11-07'),\n(10349, 75, '2021-11-08'),\n(10350, 41, '2021-11-11'),\n(10351, 20, '2021-11-11'),\n(10352, 28, '2021-11-12'),\n(10353, 59, '2021-11-13'),\n(10354, 58, '2021-11-14'),\n(10355, 4, '2021-11-15'),\n(10356, 86, '2021-11-18'),\n(10357, 46, '2021-11-19'),\n(10358, 41, '2021-11-20'),\n(10359, 72, '2021-11-21'),\n(10360, 7, '2021-11-22'),\n(10361, 63, '2021-11-22'),\n(10362, 9, '2021-11-25'),\n(10363, 17, '2021-11-26'),\n(10364, 19, '2021-11-26'),\n(10365, 3, '2021-11-27'),\n(10366, 29, '2021-11-28'),\n(10367, 83, '2021-11-28'),\n(10368, 20, '2021-11-29'),\n(10369, 75, '2021-12-02'),\n(10370, 14, '2021-12-03'),\n(10371, 41, '2021-12-03'),\n(10372, 62, '2021-12-04'),\n(10373, 37, '2021-12-05'),\n(10374, 91, '2021-12-05'),\n(10375, 36, '2021-12-06'),\n(10376, 51, '2021-12-09'),\n(10377, 72, '2021-12-09'),\n(10378, 24, '2021-12-10'),\n(10379, 61, '2021-12-11'),\n(10380, 37, '2021-12-12'),\n(10381, 46, '2021-12-12'),\n(10382, 20, '2021-12-13'),\n(10383, 4, '2021-12-16'),\n(10384, 5, '2021-12-16'),\n(10385, 75, '2021-12-17'),\n(10386, 21, '2021-12-18'),\n(10387, 70, '2021-12-18'),\n(10388, 72, '2021-12-19'),\n(10389, 10, '2021-12-20'),\n(10390, 20, '2021-12-23'),\n(10391, 17, '2021-12-23'),\n(10392, 59, '2021-12-24'),\n(10393, 71, '2021-12-25'),\n(10394, 36, '2021-12-25'),\n(10395, 35, '2021-12-26'),\n(10396, 25, '2021-12-27'),\n(10397, 60, '2021-12-27'),\n(10398, 71, '2021-12-30'),\n(10399, 83, '2021-12-31'),\n(10400, 19, '2022-01-01'),\n(10401, 65, '2022-01-01'),\n(10402, 20, '2022-01-02'),\n(10403, 20, '2022-01-03'),\n(10404, 49, '2022-01-03'),\n(10405, 47, '2022-01-06'),\n(10406, 62, '2022-01-07'),\n(10407, 56, '2022-01-07'),\n(10408, 23, '2022-01-08'),\n(10409, 54, '2022-01-09'),\n(10410, 10, '2022-01-10'),\n(10411, 10, '2022-01-10'),\n(10412, 87, '2022-01-13'),\n(10413, 41, '2022-01-14'),\n(10414, 21, '2022-01-14'),\n(10415, 36, '2022-01-15'),\n(10416, 87, '2022-01-16'),\n(10417, 73, '2022-01-16'),\n(10418, 63, '2022-01-17'),\n(10419, 68, '2022-01-20'),\n(10420, 88, '2022-01-21'),\n(10421, 61, '2022-01-21'),\n(10422, 27, '2022-01-22'),\n(10423, 31, '2022-01-23'),\n(10424, 51, '2022-01-23'),\n(10425, 41, '2022-01-24'),\n(10426, 29, '2022-01-27'),\n(10427, 59, '2022-01-27'),\n(10428, 66, '2022-01-28'),\n(10429, 37, '2022-01-29'),\n(10430, 20, '2022-01-30'),\n(10431, 10, '2022-01-30'),\n(10432, 75, '2022-01-31'),\n(10433, 60, '2022-02-03'),\n(10434, 24, '2022-02-03'),\n(10435, 16, '2022-02-04'),\n(10436, 7, '2022-02-05'),\n(10437, 87, '2022-02-05'),\n(10438, 79, '2022-02-06'),\n(10439, 51, '2022-02-07'),\n(10440, 71, '2022-02-10'),\n(10441, 55, '2022-02-10'),\n(10442, 20, '2022-02-11'),\n(10443, 66, '2022-02-12'),\n(10444, 5, '2022-02-12'),\n(10445, 5, '2022-02-13'),\n(10446, 79, '2022-02-14'),\n(10447, 67, '2022-02-14'),\n(10448, 64, '2022-02-17'),\n(10449, 7, '2022-02-18'),\n(10450, 84, '2022-02-19'),\n(10451, 63, '2022-02-19'),\n(10452, 71, '2022-02-20'),\n(10453, 4, '2022-02-21'),\n(10454, 41, '2022-02-21'),\n(10455, 87, '2022-02-24'),\n(10456, 39, '2022-02-25'),\n(10457, 39, '2022-02-25'),\n(10458, 76, '2022-02-26'),\n(10459, 84, '2022-02-27'),\n(10460, 24, '2022-02-28'),\n(10461, 46, '2022-02-28'),\n(10462, 16, '2022-03-03'),\n(10463, 76, '2022-03-04'),\n(10464, 28, '2022-03-04'),\n(10465, 83, '2022-03-05'),\n(10466, 15, '2022-03-06'),\n(10467, 49, '2022-03-06'),\n(10468, 39, '2022-03-07'),\n(10469, 89, '2022-03-10'),\n(10470, 9, '2022-03-11'),\n(10471, 11, '2022-03-11'),\n(10472, 72, '2022-03-12'),\n(10473, 38, '2022-03-13'),\n(10474, 58, '2022-03-13'),\n(10475, 76, '2022-03-14'),\n(10476, 35, '2022-03-17'),\n(10477, 60, '2022-03-17'),\n(10478, 84, '2022-03-18'),\n(10479, 65, '2022-03-19'),\n(10480, 23, '2022-03-20'),\n(10481, 67, '2022-03-20'),\n(10482, 43, '2022-03-21'),\n(10483, 89, '2022-03-24'),\n(10484, 11, '2022-03-24'),\n(10485, 47, '2022-03-25'),\n(10486, 35, '2022-03-26'),\n(10487, 62, '2022-03-26'),\n(10488, 25, '2022-03-27'),\n(10489, 59, '2022-03-28'),\n(10490, 35, '2022-03-31'),\n(10491, 28, '2022-03-31'),\n(10492, 10, '2022-04-01'),\n(10493, 41, '2022-04-02'),\n(10494, 15, '2022-04-02'),\n(10495, 42, '2022-04-03'),\n(10496, 81, '2022-04-04'),\n(10497, 44, '2022-04-04'),\n(10498, 35, '2022-04-07'),\n(10499, 46, '2022-04-08'),\n(10500, 41, '2022-04-09'),\n(10501, 6, '2022-04-09'),\n(10502, 58, '2022-04-10'),\n(10503, 37, '2022-04-11'),\n(10504, 89, '2022-04-11'),\n(10505, 51, '2022-04-14'),\n(10506, 39, '2022-04-15'),\n(10507, 3, '2022-04-15'),\n(10508, 56, '2022-04-16'),\n(10509, 6, '2022-04-17'),\n(10510, 71, '2022-04-18'),\n(10511, 9, '2022-04-18'),\n(10512, 21, '2022-04-21'),\n(10513, 86, '2022-04-22'),\n(10514, 20, '2022-04-22'),\n(10515, 63, '2022-04-23'),\n(10516, 37, '2022-04-24'),\n(10517, 53, '2022-04-24'),\n(10518, 80, '2022-04-25'),\n(10519, 14, '2022-04-28'),\n(10520, 70, '2022-04-29'),\n(10521, 12, '2022-04-29'),\n(10522, 44, '2022-04-30'),\n(10523, 72, '2022-05-01'),\n(10524, 5, '2022-05-01'),\n(10525, 9, '2022-05-02'),\n(10526, 87, '2022-05-05'),\n(10527, 63, '2022-05-05'),\n(10528, 32, '2022-05-06'),\n(10529, 50, '2022-05-07'),\n(10530, 59, '2022-05-08'),\n(10531, 54, '2022-05-08'),\n(10532, 19, '2022-05-09'),\n(10533, 24, '2022-05-12'),\n(10534, 44, '2022-05-12'),\n(10535, 3, '2022-05-13'),\n(10536, 44, '2022-05-14'),\n(10537, 68, '2022-05-14'),\n(10538, 11, '2022-05-15'),\n(10539, 11, '2022-05-16'),\n(10540, 63, '2022-05-19'),\n(10541, 34, '2022-05-19'),\n(10542, 39, '2022-05-20'),\n(10543, 46, '2022-05-21'),\n(10544, 48, '2022-05-21'),\n(10545, 43, '2022-05-22'),\n(10546, 84, '2022-05-23'),\n(10547, 72, '2022-05-23'),\n(10548, 79, '2022-05-26'),\n(10549, 63, '2022-05-27'),\n(10550, 30, '2022-05-28'),\n(10551, 28, '2022-05-28'),\n(10552, 35, '2022-05-29'),\n(10553, 87, '2022-05-30'),\n(10554, 56, '2022-05-30'),\n(10555, 71, '2022-06-02'),\n(10556, 73, '2022-06-03'),\n(10557, 44, '2022-06-03'),\n(10558, 4, '2022-06-04'),\n(10559, 7, '2022-06-05'),\n(10560, 25, '2022-06-06'),\n(10561, 24, '2022-06-06'),\n(10562, 66, '2022-06-09'),\n(10563, 67, '2022-06-10'),\n(10564, 65, '2022-06-10'),\n(10565, 51, '2022-06-11'),\n(10566, 7, '2022-06-12'),\n(10567, 37, '2022-06-12'),\n(10568, 29, '2022-06-13'),\n(10569, 65, '2022-06-16'),\n(10570, 51, '2022-06-17'),\n(10571, 20, '2022-06-17'),\n(10572, 5, '2022-06-18'),\n(10573, 3, '2022-06-19'),\n(10574, 82, '2022-06-19'),\n(10575, 52, '2022-06-20'),\n(10576, 80, '2022-06-23'),\n(10577, 82, '2022-06-23'),\n(10578, 11, '2022-06-24'),\n(10579, 45, '2022-06-25'),\n(10580, 56, '2022-06-26'),\n(10581, 21, '2022-06-26'),\n(10582, 6, '2022-06-27'),\n(10583, 87, '2022-06-30'),\n(10584, 7, '2022-06-30'),\n(10585, 88, '2022-07-01'),\n(10586, 66, '2022-07-02'),\n(10587, 61, '2022-07-02'),\n(10588, 63, '2022-07-03'),\n(10589, 32, '2022-07-04'),\n(10590, 51, '2022-07-07'),\n(10591, 83, '2022-07-07'),\n(10592, 44, '2022-07-08'),\n(10593, 44, '2022-07-09'),\n(10594, 55, '2022-07-09'),\n(10595, 20, '2022-07-10'),\n(10596, 89, '2022-07-11'),\n(10597, 59, '2022-07-11'),\n(10598, 65, '2022-07-14'),\n(10599, 11, '2022-07-15'),\n(10600, 36, '2022-07-16'),\n(10601, 35, '2022-07-16'),\n(10602, 83, '2022-07-17'),\n(10603, 71, '2022-07-18'),\n(10604, 28, '2022-07-18'),\n(10605, 51, '2022-07-21'),\n(10606, 81, '2022-07-22'),\n(10607, 71, '2022-07-22'),\n(10608, 79, '2022-07-23'),\n(10609, 18, '2022-07-24'),\n(10610, 41, '2022-07-25'),\n(10611, 91, '2022-07-25'),\n(10612, 71, '2022-07-28'),\n(10613, 35, '2022-07-29'),\n(10614, 6, '2022-07-29'),\n(10615, 90, '2022-07-30'),\n(10616, 32, '2022-07-31'),\n(10617, 32, '2022-07-31'),\n(10618, 51, '2022-08-01'),\n(10619, 51, '2022-08-04'),\n(10620, 42, '2022-08-05'),\n(10621, 38, '2022-08-05'),\n(10622, 67, '2022-08-06'),\n(10623, 25, '2022-08-07'),\n(10624, 78, '2022-08-07'),\n(10625, 2, '2022-08-08'),\n(10626, 5, '2022-08-11'),\n(10627, 71, '2022-08-11'),\n(10628, 7, '2022-08-12'),\n(10629, 30, '2022-08-12'),\n(10630, 39, '2022-08-13'),\n(10631, 41, '2022-08-14'),\n(10632, 86, '2022-08-14'),\n(10633, 20, '2022-08-15'),\n(10634, 23, '2022-08-15'),\n(10635, 49, '2022-08-18'),\n(10636, 87, '2022-08-19'),\n(10637, 62, '2022-08-19'),\n(10638, 47, '2022-08-20'),\n(10639, 70, '2022-08-20'),\n(10640, 86, '2022-08-21'),\n(10641, 35, '2022-08-22'),\n(10642, 73, '2022-08-22'),\n(10643, 1, '2022-08-25'),\n(10644, 88, '2022-08-25'),\n(10645, 34, '2022-08-26'),\n(10646, 37, '2022-08-27'),\n(10647, 61, '2022-08-27'),\n(10648, 67, '2022-08-28'),\n(10649, 50, '2022-08-28'),\n(10650, 21, '2022-08-29'),\n(10651, 86, '2022-09-01'),\n(10652, 31, '2022-09-01'),\n(10653, 25, '2022-09-02'),\n(10654, 5, '2022-09-02'),\n(10655, 66, '2022-09-03'),\n(10656, 32, '2022-09-04'),\n(10657, 71, '2022-09-04'),\n(10658, 63, '2022-09-05'),\n(10659, 62, '2022-09-05'),\n(10660, 36, '2022-09-08'),\n(10661, 37, '2022-09-09'),\n(10662, 48, '2022-09-09'),\n(10663, 9, '2022-09-10'),\n(10664, 28, '2022-09-10'),\n(10665, 48, '2022-09-11'),\n(10666, 68, '2022-09-12'),\n(10667, 20, '2022-09-12'),\n(10668, 86, '2022-09-15'),\n(10669, 73, '2022-09-15'),\n(10670, 25, '2022-09-16'),\n(10671, 26, '2022-09-17'),\n(10672, 5, '2022-09-17'),\n(10673, 90, '2022-09-18'),\n(10674, 38, '2022-09-18'),\n(10675, 25, '2022-09-19'),\n(10676, 80, '2022-09-22'),\n(10677, 3, '2022-09-22'),\n(10678, 71, '2022-09-23'),\n(10679, 7, '2022-09-23'),\n(10680, 55, '2022-09-24'),\n(10681, 32, '2022-09-25'),\n(10682, 3, '2022-09-25'),\n(10683, 18, '2022-09-26'),\n(10684, 56, '2022-09-26'),\n(10685, 31, '2022-09-29'),\n(10686, 59, '2022-09-30'),\n(10687, 37, '2022-09-30'),\n(10688, 83, '2022-10-01'),\n(10689, 5, '2022-10-01'),\n(10690, 34, '2022-10-02'),\n(10691, 63, '2022-10-03'),\n(10692, 1, '2022-10-03'),\n(10693, 89, '2022-10-06'),\n(10694, 63, '2022-10-06'),\n(10695, 90, '2022-10-07'),\n(10696, 89, '2022-10-08'),\n(10697, 47, '2022-10-08'),\n(10698, 20, '2022-10-09'),\n(10699, 52, '2022-10-09'),\n(10700, 71, '2022-10-10'),\n(10701, 37, '2022-10-13'),\n(10702, 1, '2022-10-13'),\n(10703, 24, '2022-10-14'),\n(10704, 62, '2022-10-14'),\n(10705, 35, '2022-10-15'),\n(10706, 55, '2022-10-16'),\n(10707, 4, '2022-10-16'),\n(10708, 77, '2022-10-17'),\n(10709, 31, '2022-10-17'),\n(10710, 27, '2022-10-20'),\n(10711, 71, '2022-10-21'),\n(10712, 37, '2022-10-21'),\n(10713, 71, '2022-10-22'),\n(10714, 71, '2022-10-22'),\n(10715, 9, '2022-10-23'),\n(10716, 64, '2022-10-24'),\n(10717, 25, '2022-10-24'),\n(10718, 39, '2022-10-27'),\n(10719, 45, '2022-10-27'),\n(10720, 61, '2022-10-28'),\n(10721, 63, '2022-10-29'),\n(10722, 71, '2022-10-29'),\n(10723, 89, '2022-10-30'),\n(10724, 51, '2022-10-30'),\n(10725, 21, '2022-10-31'),\n(10726, 19, '2022-11-03'),\n(10727, 66, '2022-11-03'),\n(10728, 62, '2022-11-04'),\n(10729, 47, '2022-11-04'),\n(10730, 9, '2022-11-05'),\n(10731, 14, '2022-11-06'),\n(10732, 9, '2022-11-06'),\n(10733, 5, '2022-11-07'),\n(10734, 31, '2022-11-07'),\n(10735, 45, '2022-11-10'),\n(10736, 37, '2022-11-11'),\n(10737, 85, '2022-11-11'),\n(10738, 74, '2022-11-12'),\n(10739, 85, '2022-11-12'),\n(10740, 89, '2022-11-13'),\n(10741, 4, '2022-11-14'),\n(10742, 10, '2022-11-14'),\n(10743, 4, '2022-11-17'),\n(10744, 83, '2022-11-17'),\n(10745, 63, '2022-11-18'),\n(10746, 14, '2022-11-19'),\n(10747, 59, '2022-11-19'),\n(10748, 71, '2022-11-20'),\n(10749, 38, '2022-11-20'),\n(10750, 87, '2022-11-21'),\n(10751, 68, '2022-11-24'),\n(10752, 53, '2022-11-24'),\n(10753, 27, '2022-11-25'),\n(10754, 49, '2022-11-25'),\n(10755, 9, '2022-11-26'),\n(10756, 75, '2022-11-27'),\n(10757, 71, '2022-11-27'),\n(10758, 68, '2022-11-28'),\n(10759, 2, '2022-11-28'),\n(10760, 50, '2022-12-01'),\n(10761, 65, '2022-12-02'),\n(10762, 24, '2022-12-02'),\n(10763, 23, '2022-12-03'),\n(10764, 20, '2022-12-03'),\n(10765, 63, '2022-12-04'),\n(10766, 56, '2022-12-05'),\n(10767, 76, '2022-12-05'),\n(10768, 4, '2022-12-08'),\n(10769, 83, '2022-12-08'),\n(10770, 34, '2022-12-09'),\n(10771, 20, '2022-12-10'),\n(10772, 44, '2022-12-10'),\n(10773, 20, '2022-12-11'),\n(10774, 24, '2022-12-11'),\n(10775, 78, '2022-12-12'),\n(10776, 20, '2022-12-15'),\n(10777, 31, '2022-12-15'),\n(10778, 5, '2022-12-16'),\n(10779, 52, '2022-12-16'),\n(10780, 46, '2022-12-16'),\n(10781, 87, '2022-12-17'),\n(10782, 12, '2022-12-17'),\n(10783, 34, '2022-12-18'),\n(10784, 49, '2022-12-18'),\n(10785, 33, '2022-12-18'),\n(10786, 62, '2022-12-19'),\n(10787, 41, '2022-12-19'),\n(10788, 63, '2022-12-22'),\n(10789, 23, '2022-12-22'),\n(10790, 31, '2022-12-22'),\n(10791, 25, '2022-12-23'),\n(10792, 91, '2022-12-23'),\n(10793, 4, '2022-12-24'),\n(10794, 61, '2022-12-24'),\n(10795, 20, '2022-12-24'),\n(10796, 35, '2022-12-25'),\n(10797, 17, '2022-12-25'),\n(10798, 38, '2022-12-26'),\n(10799, 39, '2022-12-26'),\n(10800, 72, '2022-12-26'),\n(10801, 8, '2022-12-29'),\n(10802, 73, '2022-12-29'),\n(10803, 88, '2022-12-30'),\n(10804, 72, '2022-12-30'),\n(10805, 77, '2022-12-30'),\n(10806, 84, '2022-12-31'),\n(10807, 27, '2022-12-31'),\n(10808, 60, '2023-01-01'),\n(10809, 88, '2023-01-01'),\n(10810, 42, '2023-01-01'),\n(10811, 47, '2023-01-02'),\n(10812, 66, '2023-01-02'),\n(10813, 67, '2023-01-05'),\n(10814, 84, '2023-01-05'),\n(10815, 71, '2023-01-05'),\n(10816, 32, '2023-01-06'),\n(10817, 39, '2023-01-06'),\n(10818, 49, '2023-01-07'),\n(10819, 12, '2023-01-07'),\n(10820, 65, '2023-01-07'),\n(10821, 75, '2023-01-08'),\n(10822, 82, '2023-01-08'),\n(10823, 46, '2023-01-09'),\n(10824, 24, '2023-01-09'),\n(10825, 17, '2023-01-09'),\n(10826, 7, '2023-01-12'),\n(10827, 9, '2023-01-12'),\n(10828, 64, '2023-01-13'),\n(10829, 38, '2023-01-13'),\n(10830, 81, '2023-01-13'),\n(10831, 70, '2023-01-14'),\n(10832, 41, '2023-01-14'),\n(10833, 56, '2023-01-15'),\n(10834, 81, '2023-01-15'),\n(10835, 1, '2023-01-15'),\n(10836, 20, '2023-01-16'),\n(10837, 5, '2023-01-16'),\n(10838, 47, '2023-01-19'),\n(10839, 81, '2023-01-19'),\n(10840, 47, '2023-01-19'),\n(10841, 76, '2023-01-20'),\n(10842, 80, '2023-01-20'),\n(10843, 84, '2023-01-21'),\n(10844, 59, '2023-01-21'),\n(10845, 63, '2023-01-21'),\n(10846, 76, '2023-01-22'),\n(10847, 71, '2023-01-22'),\n(10848, 16, '2023-01-23'),\n(10849, 39, '2023-01-23'),\n(10850, 84, '2023-01-23'),\n(10851, 67, '2023-01-26'),\n(10852, 65, '2023-01-26'),\n(10853, 6, '2023-01-27'),\n(10854, 20, '2023-01-27'),\n(10855, 55, '2023-01-27'),\n(10856, 3, '2023-01-28'),\n(10857, 5, '2023-01-28'),\n(10858, 40, '2023-01-29'),\n(10859, 25, '2023-01-29'),\n(10860, 26, '2023-01-29'),\n(10861, 89, '2023-01-30'),\n(10862, 44, '2023-01-30'),\n(10863, 35, '2023-02-02'),\n(10864, 4, '2023-02-02'),\n(10865, 63, '2023-02-02'),\n(10866, 5, '2023-02-03'),\n(10867, 48, '2023-02-03'),\n(10868, 62, '2023-02-04'),\n(10869, 72, '2023-02-04'),\n(10870, 91, '2023-02-04'),\n(10871, 9, '2023-02-05'),\n(10872, 30, '2023-02-05'),\n(10873, 90, '2023-02-06'),\n(10874, 30, '2023-02-06'),\n(10875, 5, '2023-02-06'),\n(10876, 9, '2023-02-09'),\n(10877, 67, '2023-02-09'),\n(10878, 63, '2023-02-10'),\n(10879, 90, '2023-02-10'),\n(10880, 24, '2023-02-10'),\n(10881, 12, '2023-02-11'),\n(10882, 71, '2023-02-11'),\n(10883, 48, '2023-02-12'),\n(10884, 45, '2023-02-12'),\n(10885, 76, '2023-02-12'),\n(10886, 34, '2023-02-13'),\n(10887, 29, '2023-02-13'),\n(10888, 30, '2023-02-16'),\n(10889, 65, '2023-02-16'),\n(10890, 18, '2023-02-16'),\n(10891, 44, '2023-02-17'),\n(10892, 50, '2023-02-17'),\n(10893, 39, '2023-02-18'),\n(10894, 71, '2023-02-18'),\n(10895, 20, '2023-02-18'),\n(10896, 50, '2023-02-19'),\n(10897, 37, '2023-02-19'),\n(10898, 54, '2023-02-20'),\n(10899, 46, '2023-02-20'),\n(10900, 88, '2023-02-20'),\n(10901, 35, '2023-02-23'),\n(10902, 24, '2023-02-23'),\n(10903, 34, '2023-02-24'),\n(10904, 89, '2023-02-24'),\n(10905, 88, '2023-02-24'),\n(10906, 91, '2023-02-25'),\n(10907, 74, '2023-02-25'),\n(10908, 66, '2023-02-26'),\n(10909, 70, '2023-02-26'),\n(10910, 90, '2023-02-26'),\n(10911, 30, '2023-02-26'),\n(10912, 37, '2023-02-26'),\n(10913, 62, '2023-02-26'),\n(10914, 62, '2023-02-27'),\n(10915, 80, '2023-02-27'),\n(10916, 64, '2023-02-27'),\n(10917, 69, '2023-03-02'),\n(10918, 10, '2023-03-02'),\n(10919, 47, '2023-03-02'),\n(10920, 4, '2023-03-03'),\n(10921, 83, '2023-03-03'),\n(10922, 34, '2023-03-03'),\n(10923, 41, '2023-03-03'),\n(10924, 5, '2023-03-04'),\n(10925, 34, '2023-03-04'),\n(10926, 2, '2023-03-04'),\n(10927, 40, '2023-03-05'),\n(10928, 29, '2023-03-05'),\n(10929, 25, '2023-03-05'),\n(10930, 76, '2023-03-06'),\n(10931, 68, '2023-03-06'),\n(10932, 9, '2023-03-06'),\n(10933, 38, '2023-03-06'),\n(10934, 44, '2023-03-09'),\n(10935, 88, '2023-03-09'),\n(10936, 32, '2023-03-09'),\n(10937, 12, '2023-03-10'),\n(10938, 63, '2023-03-10'),\n(10939, 49, '2023-03-10'),\n(10940, 9, '2023-03-11'),\n(10941, 71, '2023-03-11'),\n(10942, 66, '2023-03-11'),\n(10943, 11, '2023-03-11'),\n(10944, 10, '2023-03-12'),\n(10945, 52, '2023-03-12'),\n(10946, 83, '2023-03-12'),\n(10947, 11, '2023-03-13'),\n(10948, 30, '2023-03-13'),\n(10949, 10, '2023-03-13'),\n(10950, 49, '2023-03-16'),\n(10951, 68, '2023-03-16'),\n(10952, 1, '2023-03-16'),\n(10953, 4, '2023-03-16'),\n(10954, 47, '2023-03-17'),\n(10955, 24, '2023-03-17'),\n(10956, 6, '2023-03-17'),\n(10957, 35, '2023-03-18'),\n(10958, 54, '2023-03-18'),\n(10959, 31, '2023-03-18'),\n(10960, 35, '2023-03-19'),\n(10961, 62, '2023-03-19'),\n(10962, 63, '2023-03-19'),\n(10963, 28, '2023-03-19'),\n(10964, 74, '2023-03-20'),\n(10965, 55, '2023-03-20'),\n(10966, 14, '2023-03-20'),\n(10967, 79, '2023-03-23'),\n(10968, 20, '2023-03-23'),\n(10969, 15, '2023-03-23'),\n(10970, 8, '2023-03-24'),\n(10971, 26, '2023-03-24'),\n(10972, 40, '2023-03-24'),\n(10973, 40, '2023-03-24'),\n(10974, 75, '2023-03-25'),\n(10975, 10, '2023-03-25'),\n(10976, 35, '2023-03-25'),\n(10977, 24, '2023-03-26'),\n(10978, 50, '2023-03-26'),\n(10979, 20, '2023-03-26'),\n(10980, 24, '2023-03-27'),\n(10981, 34, '2023-03-27'),\n(10982, 10, '2023-03-27'),\n(10983, 71, '2023-03-27'),\n(10984, 71, '2023-03-30'),\n(10985, 37, '2023-03-30'),\n(10986, 54, '2023-03-30'),\n(10987, 19, '2023-03-31'),\n(10988, 65, '2023-03-31'),\n(10989, 61, '2023-03-31'),\n(10990, 20, '2023-04-01'),\n(10991, 63, '2023-04-01'),\n(10992, 77, '2023-04-01'),\n(10993, 24, '2023-04-01'),\n(10994, 83, '2023-04-02'),\n(10995, 58, '2023-04-02'),\n(10996, 63, '2023-04-02'),\n(10997, 46, '2023-04-03'),\n(10998, 91, '2023-04-03'),\n(10999, 56, '2023-04-03'),\n(11000, 65, '2023-04-06'),\n(11001, 24, '2023-04-06'),\n(11002, 71, '2023-04-06'),\n(11003, 78, '2023-04-06'),\n(11004, 50, '2023-04-07'),\n(11005, 90, '2023-04-07'),\n(11006, 32, '2023-04-07'),\n(11007, 60, '2023-04-08'),\n(11008, 20, '2023-04-08'),\n(11009, 30, '2023-04-08'),\n(11010, 66, '2023-04-09'),\n(11011, 1, '2023-04-09'),\n(11012, 25, '2023-04-09'),\n(11013, 69, '2023-04-09'),\n(11014, 47, '2023-04-10'),\n(11015, 70, '2023-04-10'),\n(11016, 4, '2023-04-10'),\n(11017, 20, '2023-04-13'),\n(11018, 48, '2023-04-13'),\n(11019, 64, '2023-04-13'),\n(11020, 56, '2023-04-14'),\n(11021, 63, '2023-04-14'),\n(11022, 34, '2023-04-14'),\n(11023, 11, '2023-04-14'),\n(11024, 19, '2023-04-15'),\n(11025, 87, '2023-04-15'),\n(11026, 27, '2023-04-15'),\n(11027, 10, '2023-04-16'),\n(11028, 39, '2023-04-16'),\n(11029, 14, '2023-04-16'),\n(11030, 71, '2023-04-17'),\n(11031, 71, '2023-04-17'),\n(11032, 89, '2023-04-17'),\n(11033, 68, '2023-04-17'),\n(11034, 55, '2023-04-20'),\n(11035, 76, '2023-04-20'),\n(11036, 17, '2023-04-20'),\n(11037, 30, '2023-04-21'),\n(11038, 76, '2023-04-21'),\n(11039, 47, '2023-04-21'),\n(11040, 32, '2023-04-22'),\n(11041, 14, '2023-04-22'),\n(11042, 15, '2023-04-22'),\n(11043, 74, '2023-04-22'),\n(11044, 91, '2023-04-23'),\n(11045, 10, '2023-04-23'),\n(11046, 86, '2023-04-23'),\n(11047, 19, '2023-04-24'),\n(11048, 10, '2023-04-24'),\n(11049, 31, '2023-04-24'),\n(11050, 24, '2023-04-27'),\n(11051, 41, '2023-04-27'),\n(11052, 34, '2023-04-27'),\n(11053, 59, '2023-04-27'),\n(11054, 12, '2023-04-28'),\n(11055, 35, '2023-04-28'),\n(11056, 19, '2023-04-28'),\n(11057, 53, '2023-04-29'),\n(11058, 6, '2023-04-29'),\n(11059, 67, '2023-04-29'),\n(11060, 27, '2023-04-30'),\n(11061, 32, '2023-04-30'),\n(11062, 66, '2023-04-30'),\n(11063, 37, '2023-04-30'),\n(11064, 71, '2023-05-01'),\n(11065, 46, '2023-05-01'),\n(11066, 89, '2023-05-01'),\n(11067, 17, '2023-05-04'),\n(11068, 62, '2023-05-04'),\n(11069, 80, '2023-05-04'),\n(11070, 44, '2023-05-05'),\n(11071, 46, '2023-05-05'),\n(11072, 20, '2023-05-05'),\n(11073, 58, '2023-05-05'),\n(11074, 73, '2023-05-06'),\n(11075, 68, '2023-05-06'),\n(11076, 9, '2023-05-06'),\n(11077, 65, '2023-05-06');",
          "html": "INSERT INTO orders (order_id, customer_id, order_date)<br/>\n        VALUES<br/>  (10248, 90, '2021-07-04'), <br/>  (10249, 81, \n        '2021-07-05'), <br/>  (10250, 34, '2021-07-08'), <br/>  (10251, 84, \n        '2021-07-08'), <br/>  (10252, 76, '2021-07-09'), <br/>  (10253, 34, \n        '2021-07-10'), <br/>  (10254, 14, '2021-07-11'), <br/>  (10255, 68, \n        '2021-07-12'), <br/>  (10256, 88, '2021-07-15'), <br/>  (10257, 35, \n        '2021-07-16'), <br/>  (10258, 20, '2021-07-17'), <br/>  (10259, 13, \n        '2021-07-18'), <br/>  (10260, 55, '2021-07-19'), <br/>  (10261, 61, \n        '2021-07-19'), <br/>  (10262, 65, '2021-07-22'), <br/>  (10263, 20,  \n        '2021-07-23'), <br/>  (10264, 24, '2021-07-24'), <br/>  (10265, 7,  \n        '2021-07-25'), <br/>  (10266, 87, '2021-07-26'), <br/>  (10267, 25,  \n        '2021-07-29'), <br/>  (10268, 33, '2021-07-30'), <br/>  (10269, 89,  \n        '2021-07-31'), <br/>  (10270, 87, '2021-08-01'), <br/>  (10271, 75,  \n        '2021-08-01'), <br/>  (10272, 65, '2021-08-02'), <br/>  (10273, 63,  \n        '2021-08-05'), <br/>  (10274, 85, '2021-08-06'), <br/>  (10275, 49,  \n        '2021-08-07'), <br/>  (10276, 80, '2021-08-08'), <br/>  (10277, 52,  \n        '2021-08-09'), <br/>  (10278, 5, '2021-08-12'), <br/>  (10279, 44,  \n        '2021-08-13'), <br/>  (10280, 5, '2021-08-14'), <br/>  (10281, 69,  \n        '2021-08-14'), <br/>  (10282, 69, '2021-08-15'), <br/>  (10283, 46,  \n        '2021-08-16'), <br/>  (10284, 44, '2021-08-19'), <br/>  (10285, 63,  \n        '2021-08-20'), <br/>  (10286, 63, '2021-08-21'), <br/>  (10287, 67,  \n        '2021-08-22'), <br/>  (10288, 66, '2021-08-23'), <br/>  (10289, 11,  \n        '2021-08-26'), <br/>  (10290, 15, '2021-08-27'), <br/>  (10291, 61,  \n        '2021-08-27'), <br/>  (10292, 81, '2021-08-28'), <br/>  (10293, 80,  \n        '2021-08-29'), <br/>  (10294, 65, '2021-08-30'), <br/>  (10295, 85,  \n        '2021-09-02'), <br/>  (10296, 46, '2021-09-03'), <br/>  (10297, 7,  \n        '2021-09-04'), <br/>  (10298, 37, '2021-09-05'), <br/>  (10299, 67,  \n        '2021-09-06'), <br/>  (10300, 49, '2021-09-09'), <br/>  (10301, 86,  \n        '2021-09-09'), <br/>  (10302, 76, '2021-09-10'), <br/>  (10303, 30,  \n        '2021-09-11'), <br/>  (10304, 80, '2021-09-12'), <br/>  (10305, 55,  \n        '2021-09-13'), <br/>  (10306, 69, '2021-09-16'), <br/>  (10307, 48,  \n        '2021-09-17'), <br/>  (10308, 2, '2021-09-18'), <br/>  (10309, 37,  \n        '2021-09-19'), <br/>  (10310, 77, '2021-09-20'), <br/>  (10311, 18,  \n        '2021-09-20'), <br/>  (10312, 86, '2021-09-23'), <br/>  (10313, 63,  \n        '2021-09-24'), <br/>  (10314, 65, '2021-09-25'), <br/>  (10315, 38,  \n        '2021-09-26'), <br/>  (10316, 65, '2021-09-27'), <br/>  (10317, 48,  \n        '2021-09-30'), <br/>  (10318, 38, '2021-10-01'), <br/>  (10319, 80,  \n        '2021-10-02'), <br/>  (10320, 87, '2021-10-03'), <br/>  (10321, 38,  \n        '2021-10-03'), <br/>  (10322, 58, '2021-10-04'), <br/>  (10323, 39,  \n        '2021-10-07'), <br/>  (10324, 71, '2021-10-08'), <br/>  (10325, 39,  \n        '2021-10-09'), <br/>  (10326, 8, '2021-10-10'), <br/>  (10327, 24,  \n        '2021-10-11'), <br/>  (10328, 28, '2021-10-14'), <br/>  (10329, 75,  \n        '2021-10-15'), <br/>  (10330, 46, '2021-10-16'), <br/>  (10331, 9,  \n        '2021-10-16'), <br/>  (10332, 51, '2021-10-17'), <br/>  (10333, 87,  \n        '2021-10-18'), <br/>  (10334, 84, '2021-10-21'), <br/>  (10335, 37,  \n        '2021-10-22'), <br/>  (10336, 60, '2021-10-23'), <br/>  (10337, 25,  \n        '2021-10-24'), <br/>  (10338, 55, '2021-10-25'), <br/>  (10339, 51,  \n        '2021-10-28'), <br/>  (10340, 9, '2021-10-29'), <br/>  (10341, 73,  \n        '2021-10-29'), <br/>  (10342, 25, '2021-10-30'), <br/>  (10343, 44,  \n        '2021-10-31'), <br/>  (10344, 89, '2021-11-01'), <br/>  (10345, 63,  \n        '2021-11-04'), <br/>  (10346, 65, '2021-11-05'), <br/>  (10347, 21,  \n        '2021-11-06'), <br/>  (10348, 86, '2021-11-07'), <br/>  (10349, 75,  \n        '2021-11-08'), <br/>  (10350, 41, '2021-11-11'), <br/>  (10351, 20,  \n        '2021-11-11'), <br/>  (10352, 28, '2021-11-12'), <br/>  (10353, 59,  \n        '2021-11-13'), <br/>  (10354, 58, '2021-11-14'), <br/>  (10355, 4,  \n        '2021-11-15'), <br/>  (10356, 86, '2021-11-18'), <br/>  (10357, 46,  \n        '2021-11-19'), <br/>  (10358, 41, '2021-11-20'), <br/>  (10359, 72,  \n        '2021-11-21'), <br/>  (10360, 7, '2021-11-22'), <br/>  (10361, 63,  \n        '2021-11-22'), <br/>  (10362, 9, '2021-11-25'), <br/>  (10363, 17,  \n        '2021-11-26'), <br/>  (10364, 19, '2021-11-26'), <br/>  (10365, 3,  \n        '2021-11-27'), <br/>  (10366, 29, '2021-11-28'), <br/>  (10367, 83,  \n        '2021-11-28'), <br/>  (10368, 20, '2021-11-29'), <br/>  (10369, 75,  \n        '2021-12-02'), <br/>  (10370, 14, '2021-12-03'), <br/>  (10371, 41,  \n        '2021-12-03'), <br/>  (10372, 62, '2021-12-04'), <br/>  (10373, 37,  \n        '2021-12-05'), <br/>  (10374, 91, '2021-12-05'), <br/>  (10375, 36,  \n        '2021-12-06'), <br/>  (10376, 51, '2021-12-09'), <br/>  (10377, 72,  \n        '2021-12-09'), <br/>  (10378, 24, '2021-12-10'), <br/>  (10379, 61,  \n        '2021-12-11'), <br/>  (10380, 37, '2021-12-12'), <br/>  (10381, 46,  \n        '2021-12-12'), <br/>  (10382, 20, '2021-12-13'), <br/>  (10383, 4,  \n        '2021-12-16'), <br/>  (10384, 5, '2021-12-16'), <br/>  (10385, 75,  \n        '2021-12-17'), <br/>  (10386, 21, '2021-12-18'), <br/>  (10387, 70,  \n        '2021-12-18'), <br/>  (10388, 72, '2021-12-19'), <br/>  (10389, 10,  \n        '2021-12-20'), <br/>  (10390, 20, '2021-12-23'), <br/>  (10391, 17,  \n        '2021-12-23'), <br/>  (10392, 59, '2021-12-24'), <br/>  (10393, 71,  \n        '2021-12-25'), <br/>  (10394, 36, '2021-12-25'), <br/>  (10395, 35,  \n        '2021-12-26'), <br/>  (10396, 25, '2021-12-27'), <br/>  (10397, 60,  \n        '2021-12-27'), <br/>  (10398, 71, '2021-12-30'), <br/>  (10399, 83,  \n        '2021-12-31'), <br/>  (10400, 19, '2022-01-01'), <br/>  (10401, 65,  \n        '2022-01-01'), <br/>  (10402, 20, '2022-01-02'), <br/>  (10403, 20,  \n        '2022-01-03'), <br/>  (10404, 49, '2022-01-03'), <br/>  (10405, 47,  \n        '2022-01-06'), <br/>  (10406, 62, '2022-01-07'), <br/>  (10407, 56,  \n        '2022-01-07'), <br/>  (10408, 23, '2022-01-08'), <br/>  (10409, 54,  \n        '2022-01-09'), <br/>  (10410, 10, '2022-01-10'), <br/>  (10411, 10,  \n        '2022-01-10'), <br/>  (10412, 87, '2022-01-13'), <br/>  (10413, 41,  \n        '2022-01-14'), <br/>  (10414, 21, '2022-01-14'), <br/>  (10415, 36,  \n        '2022-01-15'), <br/>  (10416, 87, '2022-01-16'), <br/>  (10417, 73,  \n        '2022-01-16'), <br/>  (10418, 63, '2022-01-17'), <br/>  (10419, 68,  \n        '2022-01-20'), <br/>  (10420, 88, '2022-01-21'), <br/>  (10421, 61,  \n        '2022-01-21'), <br/>  (10422, 27, '2022-01-22'), <br/>  (10423, 31,  \n        '2022-01-23'), <br/>  (10424, 51, '2022-01-23'), <br/>  (10425, 41,  \n        '2022-01-24'), <br/>  (10426, 29, '2022-01-27'), <br/>  (10427, 59,  \n        '2022-01-27'), <br/>  (10428, 66, '2022-01-28'), <br/>  (10429, 37,  \n        '2022-01-29'), <br/>  (10430, 20, '2022-01-30'), <br/>  (10431, 10,  \n        '2022-01-30'), <br/>  (10432, 75, '2022-01-31'), <br/>  (10433, 60,  \n        '2022-02-03'), <br/>  (10434, 24, '2022-02-03'), <br/>  (10435, 16,  \n        '2022-02-04'), <br/>  (10436, 7, '2022-02-05'), <br/>  (10437, 87,  \n        '2022-02-05'), <br/>  (10438, 79, '2022-02-06'), <br/>  (10439, 51,  \n        '2022-02-07'), <br/>  (10440, 71, '2022-02-10'), <br/>  (10441, 55,  \n        '2022-02-10'), <br/>  (10442, 20, '2022-02-11'), <br/>  (10443, 66,  \n        '2022-02-12'), <br/>  (10444, 5, '2022-02-12'), <br/>  (10445, 5,  \n        '2022-02-13'), <br/>  (10446, 79, '2022-02-14'), <br/>  (10447, 67,  \n        '2022-02-14'), <br/>  (10448, 64, '2022-02-17'), <br/>  (10449, 7,  \n        '2022-02-18'), <br/>  (10450, 84, '2022-02-19'), <br/>  (10451, 63,  \n        '2022-02-19'), <br/>  (10452, 71, '2022-02-20'), <br/>  (10453, 4,  \n        '2022-02-21'), <br/>  (10454, 41, '2022-02-21'), <br/>  (10455, 87,  \n        '2022-02-24'), <br/>  (10456, 39, '2022-02-25'), <br/>  (10457, 39,  \n        '2022-02-25'), <br/>  (10458, 76, '2022-02-26'), <br/>  (10459, 84,  \n        '2022-02-27'), <br/>  (10460, 24, '2022-02-28'), <br/>  (10461, 46,  \n        '2022-02-28'), <br/>  (10462, 16, '2022-03-03'), <br/>  (10463, 76,  \n        '2022-03-04'), <br/>  (10464, 28, '2022-03-04'), <br/>  (10465, 83,  \n        '2022-03-05'), <br/>  (10466, 15, '2022-03-06'), <br/>  (10467, 49,  \n        '2022-03-06'), <br/>  (10468, 39, '2022-03-07'), <br/>  (10469, 89,  \n        '2022-03-10'), <br/>  (10470, 9, '2022-03-11'), <br/>  (10471, 11,  \n        '2022-03-11'), <br/>  (10472, 72, '2022-03-12'), <br/>  (10473, 38,  \n        '2022-03-13'), <br/>  (10474, 58, '2022-03-13'), <br/>  (10475, 76,  \n        '2022-03-14'), <br/>  (10476, 35, '2022-03-17'), <br/>  (10477, 60,  \n        '2022-03-17'), <br/>  (10478, 84, '2022-03-18'), <br/>  (10479, 65,  \n        '2022-03-19'), <br/>  (10480, 23, '2022-03-20'), <br/>  (10481, 67,  \n        '2022-03-20'), <br/>  (10482, 43, '2022-03-21'), <br/>  (10483, 89,  \n        '2022-03-24'), <br/>  (10484, 11, '2022-03-24'), <br/>  (10485, 47,  \n        '2022-03-25'), <br/>  (10486, 35, '2022-03-26'), <br/>  (10487, 62,  \n        '2022-03-26'), <br/>  (10488, 25, '2022-03-27'), <br/>  (10489, 59,  \n        '2022-03-28'), <br/>  (10490, 35, '2022-03-31'), <br/>  (10491, 28,  \n        '2022-03-31'), <br/>  (10492, 10, '2022-04-01'), <br/>  (10493, 41,  \n        '2022-04-02'), <br/>  (10494, 15, '2022-04-02'), <br/>  (10495, 42,  \n        '2022-04-03'), <br/>  (10496, 81, '2022-04-04'), <br/>  (10497, 44,  \n        '2022-04-04'), <br/>  (10498, 35, '2022-04-07'), <br/>  (10499, 46,  \n        '2022-04-08'), <br/>  (10500, 41, '2022-04-09'), <br/>  (10501, 6,  \n        '2022-04-09'), <br/>  (10502, 58, '2022-04-10'), <br/>  (10503, 37,  \n        '2022-04-11'), <br/>  (10504, 89, '2022-04-11'), <br/>  (10505, 51,  \n        '2022-04-14'), <br/>  (10506, 39, '2022-04-15'), <br/>  (10507, 3,  \n        '2022-04-15'), <br/>  (10508, 56, '2022-04-16'), <br/>  (10509, 6,  \n        '2022-04-17'), <br/>  (10510, 71, '2022-04-18'), <br/>  (10511, 9,  \n        '2022-04-18'), <br/>  (10512, 21, '2022-04-21'), <br/>  (10513, 86,  \n        '2022-04-22'), <br/>  (10514, 20, '2022-04-22'), <br/>  (10515, 63,  \n        '2022-04-23'), <br/>  (10516, 37, '2022-04-24'), <br/>  (10517, 53,  \n        '2022-04-24'), <br/>  (10518, 80, '2022-04-25'), <br/>  (10519, 14,  \n        '2022-04-28'), <br/>  (10520, 70, '2022-04-29'), <br/>  (10521, 12,  \n        '2022-04-29'), <br/>  (10522, 44, '2022-04-30'), <br/>  (10523, 72,  \n        '2022-05-01'), <br/>  (10524, 5, '2022-05-01'), <br/>  (10525, 9,  \n        '2022-05-02'), <br/>  (10526, 87, '2022-05-05'), <br/>  (10527, 63, \n        '2022-05-05'), <br/>  (10528, 32, '2022-05-06'), <br/>  (10529, 50,  \n        '2022-05-07'), <br/>  (10530, 59, '2022-05-08'), <br/>  (10531, 54,  \n        '2022-05-08'), <br/>  (10532, 19, '2022-05-09'), <br/>  (10533, 24,  \n        '2022-05-12'), <br/>  (10534, 44, '2022-05-12'), <br/>  (10535, 3,  \n        '2022-05-13'), <br/>  (10536, 44, '2022-05-14'), <br/>  (10537, 68,  \n        '2022-05-14'), <br/>  (10538, 11, '2022-05-15'), <br/>  (10539, 11,  \n        '2022-05-16'), <br/>  (10540, 63, '2022-05-19'), <br/>  (10541, 34,  \n        '2022-05-19'), <br/>  (10542, 39, '2022-05-20'), <br/>  (10543, 46,  \n        '2022-05-21'), <br/>  (10544, 48, '2022-05-21'), <br/>  (10545, 43,  \n        '2022-05-22'), <br/>  (10546, 84, '2022-05-23'), <br/>  (10547, 72,  \n        '2022-05-23'), <br/>  (10548, 79, '2022-05-26'), <br/>  (10549, 63,  \n        '2022-05-27'), <br/>  (10550, 30, '2022-05-28'), <br/>  (10551, 28,  \n        '2022-05-28'), <br/>  (10552, 35, '2022-05-29'), <br/>  (10553, 87,  \n        '2022-05-30'), <br/>  (10554, 56, '2022-05-30'), <br/>  (10555, 71,  \n        '2022-06-02'), <br/>  (10556, 73, '2022-06-03'), <br/>  (10557, 44,  \n        '2022-06-03'), <br/>  (10558, 4, '2022-06-04'), <br/>  (10559, 7,  \n        '2022-06-05'), <br/>  (10560, 25, '2022-06-06'), <br/>  (10561, 24,  \n        '2022-06-06'), <br/>  (10562, 66, '2022-06-09'), <br/>  (10563, 67,  \n        '2022-06-10'), <br/>  (10564, 65, '2022-06-10'), <br/>  (10565, 51,  \n        '2022-06-11'), <br/>  (10566, 7, '2022-06-12'), <br/>  (10567, 37,  \n        '2022-06-12'), <br/>  (10568, 29, '2022-06-13'), <br/>  (10569, 65,  \n        '2022-06-16'), <br/>  (10570, 51, '2022-06-17'), <br/>  (10571, 20,  \n        '2022-06-17'), <br/>  (10572, 5, '2022-06-18'), <br/>  (10573, 3,  \n        '2022-06-19'), <br/>  (10574, 82, '2022-06-19'), <br/>  (10575, 52,  \n        '2022-06-20'), <br/>  (10576, 80, '2022-06-23'), <br/>  (10577, 82,  \n        '2022-06-23'), <br/>  (10578, 11, '2022-06-24'), <br/>  (10579, 45,  \n        '2022-06-25'), <br/>  (10580, 56, '2022-06-26'), <br/>  (10581, 21,  \n        '2022-06-26'), <br/>  (10582, 6, '2022-06-27'), <br/>  (10583, 87,  \n        '2022-06-30'), <br/>  (10584, 7, '2022-06-30'), <br/>  (10585, 88,  \n        '2022-07-01'), <br/>  (10586, 66, '2022-07-02'), <br/>  (10587, 61,  \n        '2022-07-02'), <br/>  (10588, 63, '2022-07-03'), <br/>  (10589, 32,  \n        '2022-07-04'), <br/>  (10590, 51, '2022-07-07'), <br/>  (10591, 83,  \n        '2022-07-07'), <br/>  (10592, 44, '2022-07-08'), <br/>  (10593, 44,  \n        '2022-07-09'), <br/>  (10594, 55, '2022-07-09'), <br/>  (10595, 20,  \n        '2022-07-10'), <br/>  (10596, 89, '2022-07-11'), <br/>  (10597, 59,  \n        '2022-07-11'), <br/>  (10598, 65, '2022-07-14'), <br/>  (10599, 11,  \n        '2022-07-15'), <br/>  (10600, 36, '2022-07-16'), <br/>  (10601, 35,  \n        '2022-07-16'), <br/>  (10602, 83, '2022-07-17'), <br/>  (10603, 71,  \n        '2022-07-18'), <br/>  (10604, 28, '2022-07-18'), <br/>  (10605, 51,  \n        '2022-07-21'), <br/>  (10606, 81, '2022-07-22'), <br/>  (10607, 71,  \n        '2022-07-22'), <br/>  (10608, 79, '2022-07-23'), <br/>  (10609, 18,  \n        '2022-07-24'), <br/>  (10610, 41, '2022-07-25'), <br/>  (10611, 91,  \n        '2022-07-25'), <br/>  (10612, 71, '2022-07-28'), <br/>  (10613, 35,  \n        '2022-07-29'), <br/>  (10614, 6, '2022-07-29'), <br/>  (10615, 90,  \n        '2022-07-30'), <br/>  (10616, 32, '2022-07-31'), <br/>  (10617, 32,  \n        '2022-07-31'), <br/>  (10618, 51, '2022-08-01'), <br/>  (10619, 51,  \n        '2022-08-04'), <br/>  (10620, 42, '2022-08-05'), <br/>  (10621, 38,  \n        '2022-08-05'), <br/>  (10622, 67, '2022-08-06'), <br/>  (10623, 25,  \n        '2022-08-07'), <br/>  (10624, 78, '2022-08-07'), <br/>  (10625, 2,  \n        '2022-08-08'), <br/>  (10626, 5, '2022-08-11'), <br/>  (10627, 71,  \n        '2022-08-11'), <br/>  (10628, 7, '2022-08-12'), <br/>  (10629, 30,  \n        '2022-08-12'), <br/>  (10630, 39, '2022-08-13'), <br/>  (10631, 41,  \n        '2022-08-14'), <br/>  (10632, 86, '2022-08-14'), <br/>  (10633, 20,  \n        '2022-08-15'), <br/>  (10634, 23, '2022-08-15'), <br/>  (10635, 49,  \n        '2022-08-18'), <br/>  (10636, 87, '2022-08-19'), <br/>  (10637, 62,  \n        '2022-08-19'), <br/>  (10638, 47, '2022-08-20'), <br/>  (10639, 70,  \n        '2022-08-20'), <br/>  (10640, 86, '2022-08-21'), <br/>  (10641, 35,  \n        '2022-08-22'), <br/>  (10642, 73, '2022-08-22'), <br/>  (10643, 1,  \n        '2022-08-25'), <br/>  (10644, 88, '2022-08-25'), <br/>  (10645, 34,  \n        '2022-08-26'), <br/>  (10646, 37, '2022-08-27'), <br/>  (10647, 61,  \n        '2022-08-27'), <br/>  (10648, 67, '2022-08-28'), <br/>  (10649, 50,  \n        '2022-08-28'), <br/>  (10650, 21, '2022-08-29'), <br/>  (10651, 86,  \n        '2022-09-01'), <br/>  (10652, 31, '2022-09-01'), <br/>  (10653, 25,  \n        '2022-09-02'), <br/>  (10654, 5, '2022-09-02'), <br/>  (10655, 66,  \n        '2022-09-03'), <br/>  (10656, 32, '2022-09-04'), <br/>  (10657, 71,  \n        '2022-09-04'), <br/>  (10658, 63, '2022-09-05'), <br/>  (10659, 62,  \n        '2022-09-05'), <br/>  (10660, 36, '2022-09-08'), <br/>  (10661, 37,  \n        '2022-09-09'), <br/>  (10662, 48, '2022-09-09'), <br/>  (10663, 9,  \n        '2022-09-10'), <br/>  (10664, 28, '2022-09-10'), <br/>  (10665, 48,  \n        '2022-09-11'), <br/>  (10666, 68, '2022-09-12'), <br/>  (10667, 20,  \n        '2022-09-12'), <br/>  (10668, 86, '2022-09-15'), <br/>  (10669, 73,  \n        '2022-09-15'), <br/>  (10670, 25, '2022-09-16'), <br/>  (10671, 26,  \n        '2022-09-17'), <br/>  (10672, 5, '2022-09-17'), <br/>  (10673, 90,  \n        '2022-09-18'), <br/>  (10674, 38, '2022-09-18'), <br/>  (10675, 25,  \n        '2022-09-19'), <br/>  (10676, 80, '2022-09-22'), <br/>  (10677, 3,  \n        '2022-09-22'), <br/>  (10678, 71, '2022-09-23'), <br/>  (10679, 7,  \n        '2022-09-23'), <br/>  (10680, 55, '2022-09-24'), <br/>  (10681, 32,  \n        '2022-09-25'), <br/>  (10682, 3, '2022-09-25'), <br/>  (10683, 18,  \n        '2022-09-26'), <br/>  (10684, 56, '2022-09-26'), <br/>  (10685, 31,  \n        '2022-09-29'), <br/>  (10686, 59, '2022-09-30'), <br/>  (10687, 37,  \n        '2022-09-30'), <br/>  (10688, 83, '2022-10-01'), <br/>  (10689, 5,  \n        '2022-10-01'), <br/>  (10690, 34, '2022-10-02'), <br/>  (10691, 63,  \n        '2022-10-03'), <br/>  (10692, 1, '2022-10-03'), <br/>  (10693, 89,  \n        '2022-10-06'), <br/>  (10694, 63, '2022-10-06'), <br/>  (10695, 90,  \n        '2022-10-07'), <br/>  (10696, 89, '2022-10-08'), <br/>  (10697, 47,  \n        '2022-10-08'), <br/>  (10698, 20, '2022-10-09'), <br/>  (10699, 52,  \n        '2022-10-09'), <br/>  (10700, 71, '2022-10-10'), <br/>  (10701, 37,  \n        '2022-10-13'), <br/>  (10702, 1, '2022-10-13'), <br/>  (10703, 24,  \n        '2022-10-14'), <br/>  (10704, 62, '2022-10-14'), <br/>  (10705, 35,  \n        '2022-10-15'), <br/>  (10706, 55, '2022-10-16'), <br/>  (10707, 4,  \n        '2022-10-16'), <br/>  (10708, 77, '2022-10-17'), <br/>  (10709, 31,  \n        '2022-10-17'), <br/>  (10710, 27, '2022-10-20'), <br/>  (10711, 71,  \n        '2022-10-21'), <br/>  (10712, 37, '2022-10-21'), <br/>  (10713, 71,  \n        '2022-10-22'), <br/>  (10714, 71, '2022-10-22'), <br/>  (10715, 9,  \n        '2022-10-23'), <br/>  (10716, 64, '2022-10-24'), <br/>  (10717, 25,  \n        '2022-10-24'), <br/>  (10718, 39, '2022-10-27'), <br/>  (10719, 45,  \n        '2022-10-27'), <br/>  (10720, 61, '2022-10-28'), <br/>  (10721, 63,  \n        '2022-10-29'), <br/>  (10722, 71, '2022-10-29'), <br/>  (10723, 89,  \n        '2022-10-30'), <br/>  (10724, 51, '2022-10-30'), <br/>  (10725, 21,  \n        '2022-10-31'), <br/>  (10726, 19, '2022-11-03'), <br/>  (10727, 66,  \n        '2022-11-03'), <br/>  (10728, 62, '2022-11-04'), <br/>  (10729, 47,  \n        '2022-11-04'), <br/>  (10730, 9, '2022-11-05'), <br/>  (10731, 14,  \n        '2022-11-06'), <br/>  (10732, 9, '2022-11-06'), <br/>  (10733, 5,  \n        '2022-11-07'), <br/>  (10734, 31, '2022-11-07'), <br/>  (10735, 45,  \n        '2022-11-10'), <br/>  (10736, 37, '2022-11-11'), <br/>  (10737, 85,  \n        '2022-11-11'), <br/>  (10738, 74, '2022-11-12'), <br/>  (10739, 85,  \n        '2022-11-12'), <br/>  (10740, 89, '2022-11-13'), <br/>  (10741, 4,  \n        '2022-11-14'), <br/>  (10742, 10, '2022-11-14'), <br/>  (10743, 4,  \n        '2022-11-17'), <br/>  (10744, 83, '2022-11-17'), <br/>  (10745, 63,  \n        '2022-11-18'), <br/>  (10746, 14, '2022-11-19'), <br/>  (10747, 59,  \n        '2022-11-19'), <br/>  (10748, 71, '2022-11-20'), <br/>  (10749, 38,  \n        '2022-11-20'), <br/>  (10750, 87, '2022-11-21'), <br/>  (10751, 68,  \n        '2022-11-24'), <br/>  (10752, 53, '2022-11-24'), <br/>  (10753, 27,  \n        '2022-11-25'), <br/>  (10754, 49, '2022-11-25'), <br/>  (10755, 9,  \n        '2022-11-26'), <br/>  (10756, 75, '2022-11-27'), <br/>  (10757, 71,  \n        '2022-11-27'), <br/>  (10758, 68, '2022-11-28'), <br/>  (10759, 2,  \n        '2022-11-28'), <br/>  (10760, 50, '2022-12-01'), <br/>  (10761, 65,  \n        '2022-12-02'), <br/>  (10762, 24, '2022-12-02'), <br/>  (10763, 23,  \n        '2022-12-03'), <br/>  (10764, 20, '2022-12-03'), <br/>  (10765, 63,  \n        '2022-12-04'), <br/>  (10766, 56, '2022-12-05'), <br/>  (10767, 76,  \n        '2022-12-05'), <br/>  (10768, 4, '2022-12-08'), <br/>  (10769, 83,  \n        '2022-12-08'), <br/>  (10770, 34, '2022-12-09'), <br/>  (10771, 20,  \n        '2022-12-10'), <br/>  (10772, 44, '2022-12-10'), <br/>  (10773, 20,  \n        '2022-12-11'), <br/>  (10774, 24, '2022-12-11'), <br/>  (10775, 78,  \n        '2022-12-12'), <br/>  (10776, 20, '2022-12-15'), <br/>  (10777, 31,  \n        '2022-12-15'), <br/>  (10778, 5, '2022-12-16'), <br/>  (10779, 52,  \n        '2022-12-16'), <br/>  (10780, 46, '2022-12-16'), <br/>  (10781, 87,  \n        '2022-12-17'), <br/>  (10782, 12, '2022-12-17'), <br/>  (10783, 34,  \n        '2022-12-18'), <br/>  (10784, 49, '2022-12-18'), <br/>  (10785, 33,  \n        '2022-12-18'), <br/>  (10786, 62, '2022-12-19'), <br/>  (10787, 41,  \n        '2022-12-19'), <br/>  (10788, 63, '2022-12-22'), <br/>  (10789, 23,  \n        '2022-12-22'), <br/>  (10790, 31, '2022-12-22'), <br/>  (10791, 25,  \n        '2022-12-23'), <br/>  (10792, 91, '2022-12-23'), <br/>  (10793, 4,  \n        '2022-12-24'), <br/>  (10794, 61, '2022-12-24'), <br/>  (10795, 20,  \n        '2022-12-24'), <br/>  (10796, 35, '2022-12-25'), <br/>  (10797, 17,  \n        '2022-12-25'), <br/>  (10798, 38, '2022-12-26'), <br/>  (10799, 39,  \n        '2022-12-26'), <br/>  (10800, 72, '2022-12-26'), <br/>  (10801, 8,  \n        '2022-12-29'), <br/>  (10802, 73, '2022-12-29'), <br/>  (10803, 88,  \n        '2022-12-30'), <br/>  (10804, 72, '2022-12-30'), <br/>  (10805, 77,  \n        '2022-12-30'), <br/>  (10806, 84, '2022-12-31'), <br/>  (10807, 27,  \n        '2022-12-31'), <br/>  (10808, 60, '2023-01-01'), <br/>  (10809, 88,  \n        '2023-01-01'), <br/>  (10810, 42, '2023-01-01'), <br/>  (10811, 47,  \n        '2023-01-02'), <br/>  (10812, 66, '2023-01-02'), <br/>  (10813, 67,  \n        '2023-01-05'), <br/>  (10814, 84, '2023-01-05'), <br/>  (10815, 71,  \n        '2023-01-05'), <br/>  (10816, 32, '2023-01-06'), <br/>  (10817, 39,  \n        '2023-01-06'), <br/>  (10818, 49, '2023-01-07'), <br/>  (10819, 12,  \n        '2023-01-07'), <br/>  (10820, 65, '2023-01-07'), <br/>  (10821, 75,  \n        '2023-01-08'), <br/>  (10822, 82, '2023-01-08'), <br/>  (10823, 46,  \n        '2023-01-09'), <br/>  (10824, 24, '2023-01-09'), <br/>  (10825, 17,  \n        '2023-01-09'), <br/>  (10826, 7, '2023-01-12'), <br/>  (10827, 9,  \n        '2023-01-12'), <br/>  (10828, 64, '2023-01-13'), <br/>  (10829, 38,  \n        '2023-01-13'), <br/>  (10830, 81, '2023-01-13'), <br/>  (10831, 70,  \n        '2023-01-14'), <br/>  (10832, 41, '2023-01-14'), <br/>  (10833, 56,  \n        '2023-01-15'), <br/>  (10834, 81, '2023-01-15'), <br/>  (10835, 1,  \n        '2023-01-15'), <br/>  (10836, 20, '2023-01-16'), <br/>  (10837, 5,  \n        '2023-01-16'), <br/>  (10838, 47, '2023-01-19'), <br/>  (10839, 81,  \n        '2023-01-19'), <br/>  (10840, 47, '2023-01-19'), <br/>  (10841, 76,  \n        '2023-01-20'), <br/>  (10842, 80, '2023-01-20'), <br/>  (10843, 84,  \n        '2023-01-21'), <br/>  (10844, 59, '2023-01-21'), <br/>  (10845, 63,  \n        '2023-01-21'), <br/>  (10846, 76, '2023-01-22'), <br/>  (10847, 71,  \n        '2023-01-22'), <br/>  (10848, 16, '2023-01-23'), <br/>  (10849, 39,  \n        '2023-01-23'), <br/>  (10850, 84, '2023-01-23'), <br/>  (10851, 67,  \n        '2023-01-26'), <br/>  (10852, 65, '2023-01-26'), <br/>  (10853, 6,  \n        '2023-01-27'), <br/>  (10854, 20, '2023-01-27'), <br/>  (10855, 55,  \n        '2023-01-27'), <br/>  (10856, 3, '2023-01-28'), <br/>  (10857, 5,  \n        '2023-01-28'), <br/>  (10858, 40, '2023-01-29'), <br/>  (10859, 25,  \n        '2023-01-29'), <br/>  (10860, 26, '2023-01-29'), <br/>  (10861, 89,  \n        '2023-01-30'), <br/>  (10862, 44, '2023-01-30'), <br/>  (10863, 35,  \n        '2023-02-02'), <br/>  (10864, 4, '2023-02-02'), <br/>  (10865, 63,  \n        '2023-02-02'), <br/>  (10866, 5, '2023-02-03'), <br/>  (10867, 48,  \n        '2023-02-03'), <br/>  (10868, 62, '2023-02-04'), <br/>  (10869, 72,  \n        '2023-02-04'), <br/>  (10870, 91, '2023-02-04'), <br/>  (10871, 9,  \n        '2023-02-05'), <br/>  (10872, 30, '2023-02-05'), <br/>  (10873, 90,  \n        '2023-02-06'), <br/>  (10874, 30, '2023-02-06'), <br/>  (10875, 5,  \n        '2023-02-06'), <br/>  (10876, 9, '2023-02-09'), <br/>  (10877, 67,  \n        '2023-02-09'), <br/>  (10878, 63, '2023-02-10'), <br/>  (10879, 90,  \n        '2023-02-10'), <br/>  (10880, 24, '2023-02-10'), <br/>  (10881, 12,  \n        '2023-02-11'), <br/>  (10882, 71, '2023-02-11'), <br/>  (10883, 48,  \n        '2023-02-12'), <br/>  (10884, 45, '2023-02-12'), <br/>  (10885, 76,  \n        '2023-02-12'), <br/>  (10886, 34, '2023-02-13'), <br/>  (10887, 29,  \n        '2023-02-13'), <br/>  (10888, 30, '2023-02-16'), <br/>  (10889, 65,  \n        '2023-02-16'), <br/>  (10890, 18, '2023-02-16'), <br/>  (10891, 44,  \n        '2023-02-17'), <br/>  (10892, 50, '2023-02-17'), <br/>  (10893, 39,  \n        '2023-02-18'), <br/>  (10894, 71, '2023-02-18'), <br/>  (10895, 20,  \n        '2023-02-18'), <br/>  (10896, 50, '2023-02-19'), <br/>  (10897, 37,  \n        '2023-02-19'), <br/>  (10898, 54, '2023-02-20'), <br/>  (10899, 46,  \n        '2023-02-20'), <br/>  (10900, 88, '2023-02-20'), <br/>  (10901, 35,  \n        '2023-02-23'), <br/>  (10902, 24, '2023-02-23'), <br/>  (10903, 34,  \n        '2023-02-24'), <br/>  (10904, 89, '2023-02-24'), <br/>  (10905, 88,  \n        '2023-02-24'), <br/>  (10906, 91, '2023-02-25'), <br/>  (10907, 74,  \n        '2023-02-25'), <br/>  (10908, 66, '2023-02-26'), <br/>  (10909, 70,  \n        '2023-02-26'), <br/>  (10910, 90, '2023-02-26'), <br/>  (10911, 30,  \n        '2023-02-26'), <br/>  (10912, 37, '2023-02-26'), <br/>  (10913, 62,  \n        '2023-02-26'), <br/>  (10914, 62, '2023-02-27'), <br/>  (10915, 80,  \n        '2023-02-27'), <br/>  (10916, 64, '2023-02-27'), <br/>  (10917, 69,  \n        '2023-03-02'), <br/>  (10918, 10, '2023-03-02'), <br/>  (10919, 47,  \n        '2023-03-02'), <br/>  (10920, 4, '2023-03-03'), <br/>  (10921, 83,  \n        '2023-03-03'), <br/>  (10922, 34, '2023-03-03'), <br/>  (10923, 41,  \n        '2023-03-03'), <br/>  (10924, 5, '2023-03-04'), <br/>  (10925, 34,  \n        '2023-03-04'), <br/>  (10926, 2, '2023-03-04'), <br/>  (10927, 40,  \n        '2023-03-05'), <br/>  (10928, 29, '2023-03-05'), <br/>  (10929, 25,  \n        '2023-03-05'), <br/>  (10930, 76, '2023-03-06'), <br/>  (10931, 68,  \n        '2023-03-06'), <br/>  (10932, 9, '2023-03-06'), <br/>  (10933, 38,  \n        '2023-03-06'), <br/>  (10934, 44, '2023-03-09'), <br/>  (10935, 88,  \n        '2023-03-09'), <br/>  (10936, 32, '2023-03-09'), <br/>  (10937, 12,  \n        '2023-03-10'), <br/>  (10938, 63, '2023-03-10'), <br/>  (10939, 49,  \n        '2023-03-10'), <br/>  (10940, 9, '2023-03-11'), <br/>  (10941, 71,  \n        '2023-03-11'), <br/>  (10942, 66, '2023-03-11'), <br/>  (10943, 11,  \n        '2023-03-11'), <br/>  (10944, 10, '2023-03-12'), <br/>  (10945, 52,  \n        '2023-03-12'), <br/>  (10946, 83, '2023-03-12'), <br/>  (10947, 11,  \n        '2023-03-13'), <br/>  (10948, 30, '2023-03-13'), <br/>  (10949, 10,  \n        '2023-03-13'), <br/>  (10950, 49, '2023-03-16'), <br/>  (10951, 68,  \n        '2023-03-16'), <br/>  (10952, 1, '2023-03-16'), <br/>  (10953, 4,  \n        '2023-03-16'), <br/>  (10954, 47, '2023-03-17'), <br/>  (10955, 24,  \n        '2023-03-17'), <br/>  (10956, 6, '2023-03-17'), <br/>  (10957, 35,  \n        '2023-03-18'), <br/>  (10958, 54, '2023-03-18'), <br/>  (10959, 31,  \n        '2023-03-18'), <br/>  (10960, 35, '2023-03-19'), <br/>  (10961, 62,  \n        '2023-03-19'), <br/>  (10962, 63, '2023-03-19'), <br/>  (10963, 28,  \n        '2023-03-19'), <br/>  (10964, 74, '2023-03-20'), <br/>  (10965, 55,  \n        '2023-03-20'), <br/>  (10966, 14, '2023-03-20'), <br/>  (10967, 79,  \n        '2023-03-23'), <br/>  (10968, 20, '2023-03-23'), <br/>  (10969, 15,  \n        '2023-03-23'), <br/>  (10970, 8, '2023-03-24'), <br/>  (10971, 26,  \n        '2023-03-24'), <br/>  (10972, 40, '2023-03-24'), <br/>  (10973, 40,  \n        '2023-03-24'), <br/>  (10974, 75, '2023-03-25'), <br/>  (10975, 10,  \n        '2023-03-25'), <br/>  (10976, 35, '2023-03-25'), <br/>  (10977, 24,  \n        '2023-03-26'), <br/>  (10978, 50, '2023-03-26'), <br/>  (10979, 20,  \n        '2023-03-26'), <br/>  (10980, 24, '2023-03-27'), <br/>  (10981, 34,  \n        '2023-03-27'), <br/>  (10982, 10, '2023-03-27'), <br/>  (10983, 71,  \n        '2023-03-27'), <br/>  (10984, 71, '2023-03-30'), <br/>  (10985, 37,  \n        '2023-03-30'), <br/>  (10986, 54, '2023-03-30'), <br/>  (10987, 19,  \n        '2023-03-31'), <br/>  (10988, 65, '2023-03-31'), <br/>  (10989, 61,  \n        '2023-03-31'), <br/>  (10990, 20, '2023-04-01'), <br/>  (10991, 63,  \n        '2023-04-01'), <br/>  (10992, 77, '2023-04-01'), <br/>  (10993, 24,  \n        '2023-04-01'), <br/>  (10994, 83, '2023-04-02'), <br/>  (10995, 58,  \n        '2023-04-02'), <br/>  (10996, 63, '2023-04-02'), <br/>  (10997, 46,  \n        '2023-04-03'), <br/>  (10998, 91, '2023-04-03'), <br/>  (10999, 56,  \n        '2023-04-03'), <br/>  (11000, 65, '2023-04-06'), <br/>  (11001, 24,  \n        '2023-04-06'), <br/>  (11002, 71, '2023-04-06'), <br/>  (11003, 78,  \n        '2023-04-06'), <br/>  (11004, 50, '2023-04-07'), <br/>  (11005, 90,  \n        '2023-04-07'), <br/>  (11006, 32, '2023-04-07'), <br/>  (11007, 60,  \n        '2023-04-08'), <br/>  (11008, 20, '2023-04-08'), <br/>  (11009, 30,  \n        '2023-04-08'), <br/>  (11010, 66, '2023-04-09'), <br/>  (11011, 1,  \n        '2023-04-09'), <br/>  (11012, 25, '2023-04-09'), <br/>  (11013, 69,  \n        '2023-04-09'), <br/>  (11014, 47, '2023-04-10'), <br/>  (11015, 70,  \n        '2023-04-10'), <br/>  (11016, 4, '2023-04-10'), <br/>  (11017, 20,  \n        '2023-04-13'), <br/>  (11018, 48, '2023-04-13'), <br/>  (11019, 64,  \n        '2023-04-13'), <br/>  (11020, 56, '2023-04-14'), <br/>  (11021, 63,  \n        '2023-04-14'), <br/>  (11022, 34, '2023-04-14'), <br/>  (11023, 11,  \n        '2023-04-14'), <br/>  (11024, 19, '2023-04-15'), <br/>  (11025, 87,  \n        '2023-04-15'), <br/>  (11026, 27, '2023-04-15'), <br/>  (11027, 10,  \n        '2023-04-16'), <br/>  (11028, 39, '2023-04-16'), <br/>  (11029, 14,  \n        '2023-04-16'), <br/>  (11030, 71, '2023-04-17'), <br/>  (11031, 71,  \n        '2023-04-17'), <br/>  (11032, 89, '2023-04-17'), <br/>  (11033, 68,  \n        '2023-04-17'), <br/>  (11034, 55, '2023-04-20'), <br/>  (11035, 76,  \n        '2023-04-20'), <br/>  (11036, 17, '2023-04-20'), <br/>  (11037, 30,  \n        '2023-04-21'), <br/>  (11038, 76, '2023-04-21'), <br/>  (11039, 47,  \n        '2023-04-21'), <br/>  (11040, 32, '2023-04-22'), <br/>  (11041, 14,  \n        '2023-04-22'), <br/>  (11042, 15, '2023-04-22'), <br/>  (11043, 74,  \n        '2023-04-22'), <br/>  (11044, 91, '2023-04-23'), <br/>  (11045, 10,  \n        '2023-04-23'), <br/>  (11046, 86, '2023-04-23'), <br/>  (11047, 19,  \n        '2023-04-24'), <br/>  (11048, 10, '2023-04-24'), <br/>  (11049, 31,  \n        '2023-04-24'), <br/>  (11050, 24, '2023-04-27'), <br/>  (11051, 41,  \n        '2023-04-27'), <br/>  (11052, 34, '2023-04-27'), <br/>  (11053, 59,  \n        '2023-04-27'), <br/>  (11054, 12, '2023-04-28'), <br/>  (11055, 35,  \n        '2023-04-28'), <br/>  (11056, 19, '2023-04-28'), <br/>  (11057, 53,  \n        '2023-04-29'), <br/>  (11058, 6, '2023-04-29'), <br/>  (11059, 67,  \n        '2023-04-29'), <br/>  (11060, 27, '2023-04-30'), <br/>  (11061, 32,  \n        '2023-04-30'), <br/>  (11062, 66, '2023-04-30'), <br/>  (11063, 37,  \n        '2023-04-30'), <br/>  (11064, 71, '2023-05-01'), <br/>  (11065, 46,  \n        '2023-05-01'), <br/>  (11066, 89, '2023-05-01'), <br/>  (11067, 17,  \n        '2023-05-04'), <br/>  (11068, 62, '2023-05-04'), <br/>  (11069, 80,  \n        '2023-05-04'), <br/>  (11070, 44, '2023-05-05'), <br/>  (11071, 46,  \n        '2023-05-05'), <br/>  (11072, 20, '2023-05-05'), <br/>  (11073, 58,  \n        '2023-05-05'), <br/>  (11074, 73, '2023-05-06'), <br/>  (11075, 68,  \n        '2023-05-06'), <br/>  (11076, 9, '2023-05-06'), <br/>  (11077, 65,  \n        '2023-05-06');<br/>"
        },
        {
          "text": "INSERT 0 830",
          "html": "INSERT 0 830"
        },
        {
          "text": "CREATE TABLE order_details (\norder_detail_id SERIAL NOT NULL PRIMARY KEY,\norder_id INT,\nproduct_id INT,\nquantity INT\n);",
          "html": "CREATE TABLE order_details (<br/>  order_detail_id SERIAL NOT NULL \n        PRIMARY KEY,<br/>  order_id INT,<br/>  product_id INT,<br/>  \n        quantity INT<br/>);"
        },
        {
          "text": "INSERT INTO order_details (order_id, product_id, quantity)\nVALUES\n(10248, 11, 12),\n(10248, 42, 10),\n(10248, 72, 5),\n(10249, 14, 9),\n(10249, 51, 40),\n(10250, 41, 10),\n(10250, 51, 35),\n(10250, 65, 15),\n(10251, 22, 6),\n(10251, 57, 15),\n(10251, 65, 20),\n(10252, 20, 40),\n(10252, 33, 25),\n(10252, 60, 40),\n(10253, 31, 20),\n(10253, 39, 42),\n(10253, 49, 40),\n(10254, 24, 15),\n(10254, 55, 21),\n(10254, 74, 21),\n(10255, 2, 20),\n(10255, 16, 35),\n(10255, 36, 25),\n(10255, 59, 30),\n(10256, 53, 15),\n(10256, 77, 12),\n(10257, 27, 25),\n(10257, 39, 6),\n(10257, 77, 15),\n(10258, 2, 50),\n(10258, 5, 65),\n(10258, 32, 6),\n(10259, 21, 10),\n(10259, 37, 1),\n(10260, 41, 16),\n(10260, 57, 50),\n(10260, 62, 15),\n(10260, 70, 21),\n(10261, 21, 20),\n(10261, 35, 20),\n(10262, 5, 12),\n(10262, 7, 15),\n(10262, 56, 2),\n(10263, 16, 60),\n(10263, 24, 28),\n(10263, 30, 60),\n(10263, 74, 36),\n(10264, 2, 35),\n(10264, 41, 25),\n(10265, 17, 30),\n(10265, 70, 20),\n(10266, 12, 12),\n(10267, 40, 50),\n(10267, 59, 70),\n(10267, 76, 15),\n(10268, 29, 10),\n(10268, 72, 4),\n(10269, 33, 60),\n(10269, 72, 20),\n(10270, 36, 30),\n(10270, 43, 25),\n(10271, 33, 24),\n(10272, 20, 6),\n(10272, 31, 40),\n(10272, 72, 24),\n(10273, 10, 24),\n(10273, 31, 15),\n(10273, 33, 20),\n(10273, 40, 60),\n(10273, 76, 33),\n(10274, 71, 20),\n(10274, 72, 7),\n(10275, 24, 12),\n(10275, 59, 6),\n(10276, 10, 15),\n(10276, 13, 10),\n(10277, 28, 20),\n(10277, 62, 12),\n(10278, 44, 16),\n(10278, 59, 15),\n(10278, 63, 8),\n(10278, 73, 25),\n(10279, 17, 15),\n(10280, 24, 12),\n(10280, 55, 20),\n(10280, 75, 30),\n(10281, 19, 1),\n(10281, 24, 6),\n(10281, 35, 4),\n(10282, 30, 6),\n(10282, 57, 2),\n(10283, 15, 20),\n(10283, 19, 18),\n(10283, 60, 35),\n(10283, 72, 3),\n(10284, 27, 15),\n(10284, 44, 21),\n(10284, 60, 20),\n(10284, 67, 5),\n(10285, 1, 45),\n(10285, 40, 40),\n(10285, 53, 36),\n(10286, 35, 100),\n(10286, 62, 40),\n(10287, 16, 40),\n(10287, 34, 20),\n(10287, 46, 15),\n(10288, 54, 10),\n(10288, 68, 3),\n(10289, 3, 30),\n(10289, 64, 9),\n(10290, 5, 20),\n(10290, 29, 15),\n(10290, 49, 15),\n(10290, 77, 10),\n(10291, 13, 20),\n(10291, 44, 24),\n(10291, 51, 2),\n(10292, 20, 20),\n(10293, 18, 12),\n(10293, 24, 10),\n(10293, 63, 5),\n(10293, 75, 6),\n(10294, 1, 18),\n(10294, 17, 15),\n(10294, 43, 15),\n(10294, 60, 21),\n(10294, 75, 6),\n(10295, 56, 4),\n(10296, 11, 12),\n(10296, 16, 30),\n(10296, 69, 15),\n(10297, 39, 60),\n(10297, 72, 20),\n(10298, 2, 40),\n(10298, 36, 40),\n(10298, 59, 30),\n(10298, 62, 15),\n(10299, 19, 15),\n(10299, 70, 20),\n(10300, 66, 30),\n(10300, 68, 20),\n(10301, 40, 10),\n(10301, 56, 20),\n(10302, 17, 40),\n(10302, 28, 28),\n(10302, 43, 12),\n(10303, 40, 40),\n(10303, 65, 30),\n(10303, 68, 15),\n(10304, 49, 30),\n(10304, 59, 10),\n(10304, 71, 2),\n(10305, 18, 25),\n(10305, 29, 25),\n(10305, 39, 30),\n(10306, 30, 10),\n(10306, 53, 10),\n(10306, 54, 5),\n(10307, 62, 10),\n(10307, 68, 3),\n(10308, 69, 1),\n(10308, 70, 5),\n(10309, 4, 20),\n(10309, 6, 30),\n(10309, 42, 2),\n(10309, 43, 20),\n(10309, 71, 3),\n(10310, 16, 10),\n(10310, 62, 5),\n(10311, 42, 6),\n(10311, 69, 7),\n(10312, 28, 4),\n(10312, 43, 24),\n(10312, 53, 20),\n(10312, 75, 10),\n(10313, 36, 12),\n(10314, 32, 40),\n(10314, 58, 30),\n(10314, 62, 25),\n(10315, 34, 14),\n(10315, 70, 30),\n(10316, 41, 10),\n(10316, 62, 70),\n(10317, 1, 20),\n(10318, 41, 20),\n(10318, 76, 6),\n(10319, 17, 8),\n(10319, 28, 14),\n(10319, 76, 30),\n(10320, 71, 30),\n(10321, 35, 10),\n(10322, 52, 20),\n(10323, 15, 5),\n(10323, 25, 4),\n(10323, 39, 4),\n(10324, 16, 21),\n(10324, 35, 70),\n(10324, 46, 30),\n(10324, 59, 40),\n(10324, 63, 80),\n(10325, 6, 6),\n(10325, 13, 12),\n(10325, 14, 9),\n(10325, 31, 4),\n(10325, 72, 40),\n(10326, 4, 24),\n(10326, 57, 16),\n(10326, 75, 50),\n(10327, 2, 25),\n(10327, 11, 50),\n(10327, 30, 35),\n(10327, 58, 30),\n(10328, 59, 9),\n(10328, 65, 40),\n(10328, 68, 10),\n(10329, 19, 10),\n(10329, 30, 8),\n(10329, 38, 20),\n(10329, 56, 12),\n(10330, 26, 50),\n(10330, 72, 25),\n(10331, 54, 15),\n(10332, 18, 40),\n(10332, 42, 10),\n(10332, 47, 16),\n(10333, 14, 10),\n(10333, 21, 10),\n(10333, 71, 40),\n(10334, 52, 8),\n(10334, 68, 10),\n(10335, 2, 7),\n(10335, 31, 25),\n(10335, 32, 6),\n(10335, 51, 48),\n(10336, 4, 18),\n(10337, 23, 40),\n(10337, 26, 24),\n(10337, 36, 20),\n(10337, 37, 28),\n(10337, 72, 25),\n(10338, 17, 20),\n(10338, 30, 15),\n(10339, 4, 10),\n(10339, 17, 70),\n(10339, 62, 28),\n(10340, 18, 20),\n(10340, 41, 12),\n(10340, 43, 40),\n(10341, 33, 8),\n(10341, 59, 9),\n(10342, 2, 24),\n(10342, 31, 56),\n(10342, 36, 40),\n(10342, 55, 40),\n(10343, 64, 50),\n(10343, 68, 4),\n(10343, 76, 15),\n(10344, 4, 35),\n(10344, 8, 70),\n(10345, 8, 70),\n(10345, 19, 80),\n(10345, 42, 9),\n(10346, 17, 36),\n(10346, 56, 20),\n(10347, 25, 10),\n(10347, 39, 50),\n(10347, 40, 4),\n(10347, 75, 6),\n(10348, 1, 15),\n(10348, 23, 25),\n(10349, 54, 24),\n(10350, 50, 15),\n(10350, 69, 18),\n(10351, 38, 20),\n(10351, 41, 13),\n(10351, 44, 77),\n(10351, 65, 10),\n(10352, 24, 10),\n(10352, 54, 20),\n(10353, 11, 12),\n(10353, 38, 50),\n(10354, 1, 12),\n(10354, 29, 4),\n(10355, 24, 25),\n(10355, 57, 25),\n(10356, 31, 30),\n(10356, 55, 12),\n(10356, 69, 20),\n(10357, 10, 30),\n(10357, 26, 16),\n(10357, 60, 8),\n(10358, 24, 10),\n(10358, 34, 10),\n(10358, 36, 20),\n(10359, 16, 56),\n(10359, 31, 70),\n(10359, 60, 80),\n(10360, 28, 30),\n(10360, 29, 35),\n(10360, 38, 10),\n(10360, 49, 35),\n(10360, 54, 28),\n(10361, 39, 54),\n(10361, 60, 55),\n(10362, 25, 50),\n(10362, 51, 20),\n(10362, 54, 24),\n(10363, 31, 20),\n(10363, 75, 12),\n(10363, 76, 12),\n(10364, 69, 30),\n(10364, 71, 5),\n(10365, 11, 24),\n(10366, 65, 5),\n(10366, 77, 5),\n(10367, 34, 36),\n(10367, 54, 18),\n(10367, 65, 15),\n(10367, 77, 7),\n(10368, 21, 5),\n(10368, 28, 13),\n(10368, 57, 25),\n(10368, 64, 35),\n(10369, 29, 20),\n(10369, 56, 18),\n(10370, 1, 15),\n(10370, 64, 30),\n(10370, 74, 20),\n(10371, 36, 6),\n(10372, 20, 12),\n(10372, 38, 40),\n(10372, 60, 70),\n(10372, 72, 42),\n(10373, 58, 80),\n(10373, 71, 50),\n(10374, 31, 30),\n(10374, 58, 15),\n(10375, 14, 15),\n(10375, 54, 10),\n(10376, 31, 42),\n(10377, 28, 20),\n(10377, 39, 20),\n(10378, 71, 6),\n(10379, 41, 8),\n(10379, 63, 16),\n(10379, 65, 20),\n(10380, 30, 18),\n(10380, 53, 20),\n(10380, 60, 6),\n(10380, 70, 30),\n(10381, 74, 14),\n(10382, 5, 32),\n(10382, 18, 9),\n(10382, 29, 14),\n(10382, 33, 60),\n(10382, 74, 50),\n(10383, 13, 20),\n(10383, 50, 15),\n(10383, 56, 20),\n(10384, 20, 28),\n(10384, 60, 15),\n(10385, 7, 10),\n(10385, 60, 20),\n(10385, 68, 8),\n(10386, 24, 15),\n(10386, 34, 10),\n(10387, 24, 15),\n(10387, 28, 6),\n(10387, 59, 12),\n(10387, 71, 15),\n(10388, 45, 15),\n(10388, 52, 20),\n(10388, 53, 40),\n(10389, 10, 16),\n(10389, 55, 15),\n(10389, 62, 20),\n(10389, 70, 30),\n(10390, 31, 60),\n(10390, 35, 40),\n(10390, 46, 45),\n(10390, 72, 24),\n(10391, 13, 18),\n(10392, 69, 50),\n(10393, 2, 25),\n(10393, 14, 42),\n(10393, 25, 7),\n(10393, 26, 70),\n(10393, 31, 32),\n(10394, 13, 10),\n(10394, 62, 10),\n(10395, 46, 28),\n(10395, 53, 70),\n(10395, 69, 8),\n(10396, 23, 40),\n(10396, 71, 60),\n(10396, 72, 21),\n(10397, 21, 10),\n(10397, 51, 18),\n(10398, 35, 30),\n(10398, 55, 120),\n(10399, 68, 60),\n(10399, 71, 30),\n(10399, 76, 35),\n(10399, 77, 14),\n(10400, 29, 21),\n(10400, 35, 35),\n(10400, 49, 30),\n(10401, 30, 18),\n(10401, 56, 70),\n(10401, 65, 20),\n(10401, 71, 60),\n(10402, 23, 60),\n(10402, 63, 65),\n(10403, 16, 21),\n(10403, 48, 70),\n(10404, 26, 30),\n(10404, 42, 40),\n(10404, 49, 30),\n(10405, 3, 50),\n(10406, 1, 10),\n(10406, 21, 30),\n(10406, 28, 42),\n(10406, 36, 5),\n(10406, 40, 2),\n(10407, 11, 30),\n(10407, 69, 15),\n(10407, 71, 15),\n(10408, 37, 10),\n(10408, 54, 6),\n(10408, 62, 35),\n(10409, 14, 12),\n(10409, 21, 12),\n(10410, 33, 49),\n(10410, 59, 16),\n(10411, 41, 25),\n(10411, 44, 40),\n(10411, 59, 9),\n(10412, 14, 20),\n(10413, 1, 24),\n(10413, 62, 40),\n(10413, 76, 14),\n(10414, 19, 18),\n(10414, 33, 50),\n(10415, 17, 2),\n(10415, 33, 20),\n(10416, 19, 20),\n(10416, 53, 10),\n(10416, 57, 20),\n(10417, 38, 50),\n(10417, 46, 2),\n(10417, 68, 36),\n(10417, 77, 35),\n(10418, 2, 60),\n(10418, 47, 55),\n(10418, 61, 16),\n(10418, 74, 15),\n(10419, 60, 60),\n(10419, 69, 20),\n(10420, 9, 20),\n(10420, 13, 2),\n(10420, 70, 8),\n(10420, 73, 20),\n(10421, 19, 4),\n(10421, 26, 30),\n(10421, 53, 15),\n(10421, 77, 10),\n(10422, 26, 2),\n(10423, 31, 14),\n(10423, 59, 20),\n(10424, 35, 60),\n(10424, 38, 49),\n(10424, 68, 30),\n(10425, 55, 10),\n(10425, 76, 20),\n(10426, 56, 5),\n(10426, 64, 7),\n(10427, 14, 35),\n(10428, 46, 20),\n(10429, 50, 40),\n(10429, 63, 35),\n(10430, 17, 45),\n(10430, 21, 50),\n(10430, 56, 30),\n(10430, 59, 70),\n(10431, 17, 50),\n(10431, 40, 50),\n(10431, 47, 30),\n(10432, 26, 10),\n(10432, 54, 40),\n(10433, 56, 28),\n(10434, 11, 6),\n(10434, 76, 18),\n(10435, 2, 10),\n(10435, 22, 12),\n(10435, 72, 10),\n(10436, 46, 5),\n(10436, 56, 40),\n(10436, 64, 30),\n(10436, 75, 24),\n(10437, 53, 15),\n(10438, 19, 15),\n(10438, 34, 20),\n(10438, 57, 15),\n(10439, 12, 15),\n(10439, 16, 16),\n(10439, 64, 6),\n(10439, 74, 30),\n(10440, 2, 45),\n(10440, 16, 49),\n(10440, 29, 24),\n(10440, 61, 90),\n(10441, 27, 50),\n(10442, 11, 30),\n(10442, 54, 80),\n(10442, 66, 60),\n(10443, 11, 6),\n(10443, 28, 12),\n(10444, 17, 10),\n(10444, 26, 15),\n(10444, 35, 8),\n(10444, 41, 30),\n(10445, 39, 6),\n(10445, 54, 15),\n(10446, 19, 12),\n(10446, 24, 20),\n(10446, 31, 3),\n(10446, 52, 15),\n(10447, 19, 40),\n(10447, 65, 35),\n(10447, 71, 2),\n(10448, 26, 6),\n(10448, 40, 20),\n(10449, 10, 14),\n(10449, 52, 20),\n(10449, 62, 35),\n(10450, 10, 20),\n(10450, 54, 6),\n(10451, 55, 120),\n(10451, 64, 35),\n(10451, 65, 28),\n(10451, 77, 55),\n(10452, 28, 15),\n(10452, 44, 100),\n(10453, 48, 15),\n(10453, 70, 25),\n(10454, 16, 20),\n(10454, 33, 20),\n(10454, 46, 10),\n(10455, 39, 20),\n(10455, 53, 50),\n(10455, 61, 25),\n(10455, 71, 30),\n(10456, 21, 40),\n(10456, 49, 21),\n(10457, 59, 36),\n(10458, 26, 30),\n(10458, 28, 30),\n(10458, 43, 20),\n(10458, 56, 15),\n(10458, 71, 50),\n(10459, 7, 16),\n(10459, 46, 20),\n(10459, 72, 40),\n(10460, 68, 21),\n(10460, 75, 4),\n(10461, 21, 40),\n(10461, 30, 28),\n(10461, 55, 60),\n(10462, 13, 1),\n(10462, 23, 21),\n(10463, 19, 21),\n(10463, 42, 50),\n(10464, 4, 16),\n(10464, 43, 3),\n(10464, 56, 30),\n(10464, 60, 20),\n(10465, 24, 25),\n(10465, 29, 18),\n(10465, 40, 20),\n(10465, 45, 30),\n(10465, 50, 25),\n(10466, 11, 10),\n(10466, 46, 5),\n(10467, 24, 28),\n(10467, 25, 12),\n(10468, 30, 8),\n(10468, 43, 15),\n(10469, 2, 40),\n(10469, 16, 35),\n(10469, 44, 2),\n(10470, 18, 30),\n(10470, 23, 15),\n(10470, 64, 8),\n(10471, 7, 30),\n(10471, 56, 20),\n(10472, 24, 80),\n(10472, 51, 18),\n(10473, 33, 12),\n(10473, 71, 12),\n(10474, 14, 12),\n(10474, 28, 18),\n(10474, 40, 21),\n(10474, 75, 10),\n(10475, 31, 35),\n(10475, 66, 60),\n(10475, 76, 42),\n(10476, 55, 2),\n(10476, 70, 12),\n(10477, 1, 15),\n(10477, 21, 21),\n(10477, 39, 20),\n(10478, 10, 20),\n(10479, 38, 30),\n(10479, 53, 28),\n(10479, 59, 60),\n(10479, 64, 30),\n(10480, 47, 30),\n(10480, 59, 12),\n(10481, 49, 24),\n(10481, 60, 40),\n(10482, 40, 10),\n(10483, 34, 35),\n(10483, 77, 30),\n(10484, 21, 14),\n(10484, 40, 10),\n(10484, 51, 3),\n(10485, 2, 20),\n(10485, 3, 20),\n(10485, 55, 30),\n(10485, 70, 60),\n(10486, 11, 5),\n(10486, 51, 25),\n(10486, 74, 16),\n(10487, 19, 5),\n(10487, 26, 30),\n(10487, 54, 24),\n(10488, 59, 30),\n(10488, 73, 20),\n(10489, 11, 15),\n(10489, 16, 18),\n(10490, 59, 60),\n(10490, 68, 30),\n(10490, 75, 36),\n(10491, 44, 15),\n(10491, 77, 7),\n(10492, 25, 60),\n(10492, 42, 20),\n(10493, 65, 15),\n(10493, 66, 10),\n(10493, 69, 10),\n(10494, 56, 30),\n(10495, 23, 10),\n(10495, 41, 20),\n(10495, 77, 5),\n(10496, 31, 20),\n(10497, 56, 14),\n(10497, 72, 25),\n(10497, 77, 25),\n(10498, 24, 14),\n(10498, 40, 5),\n(10498, 42, 30),\n(10499, 28, 20),\n(10499, 49, 25),\n(10500, 15, 12),\n(10500, 28, 8),\n(10501, 54, 20),\n(10502, 45, 21),\n(10502, 53, 6),\n(10502, 67, 30),\n(10503, 14, 70),\n(10503, 65, 20),\n(10504, 2, 12),\n(10504, 21, 12),\n(10504, 53, 10),\n(10504, 61, 25),\n(10505, 62, 3),\n(10506, 25, 18),\n(10506, 70, 14),\n(10507, 43, 15),\n(10507, 48, 15),\n(10508, 13, 10),\n(10508, 39, 10),\n(10509, 28, 3),\n(10510, 29, 36),\n(10510, 75, 36),\n(10511, 4, 50),\n(10511, 7, 50),\n(10511, 8, 10),\n(10512, 24, 10),\n(10512, 46, 9),\n(10512, 47, 6),\n(10512, 60, 12),\n(10513, 21, 40),\n(10513, 32, 50),\n(10513, 61, 15),\n(10514, 20, 39),\n(10514, 28, 35),\n(10514, 56, 70),\n(10514, 65, 39),\n(10514, 75, 50),\n(10515, 9, 16),\n(10515, 16, 50),\n(10515, 27, 120),\n(10515, 33, 16),\n(10515, 60, 84),\n(10516, 18, 25),\n(10516, 41, 80),\n(10516, 42, 20),\n(10517, 52, 6),\n(10517, 59, 4),\n(10517, 70, 6),\n(10518, 24, 5),\n(10518, 38, 15),\n(10518, 44, 9),\n(10519, 10, 16),\n(10519, 56, 40),\n(10519, 60, 10),\n(10520, 24, 8),\n(10520, 53, 5),\n(10521, 35, 3),\n(10521, 41, 10),\n(10521, 68, 6),\n(10522, 1, 40),\n(10522, 8, 24),\n(10522, 30, 20),\n(10522, 40, 25),\n(10523, 17, 25),\n(10523, 20, 15),\n(10523, 37, 18),\n(10523, 41, 6),\n(10524, 10, 2),\n(10524, 30, 10),\n(10524, 43, 60),\n(10524, 54, 15),\n(10525, 36, 30),\n(10525, 40, 15),\n(10526, 1, 8),\n(10526, 13, 10),\n(10526, 56, 30),\n(10527, 4, 50),\n(10527, 36, 30),\n(10528, 11, 3),\n(10528, 33, 8),\n(10528, 72, 9),\n(10529, 55, 14),\n(10529, 68, 20),\n(10529, 69, 10),\n(10530, 17, 40),\n(10530, 43, 25),\n(10530, 61, 20),\n(10530, 76, 50),\n(10531, 59, 2),\n(10532, 30, 15),\n(10532, 66, 24),\n(10533, 4, 50),\n(10533, 72, 24),\n(10533, 73, 24),\n(10534, 30, 10),\n(10534, 40, 10),\n(10534, 54, 10),\n(10535, 11, 50),\n(10535, 40, 10),\n(10535, 57, 5),\n(10535, 59, 15),\n(10536, 12, 15),\n(10536, 31, 20),\n(10536, 33, 30),\n(10536, 60, 35),\n(10537, 31, 30),\n(10537, 51, 6),\n(10537, 58, 20),\n(10537, 72, 21),\n(10537, 73, 9),\n(10538, 70, 7),\n(10538, 72, 1),\n(10539, 13, 8),\n(10539, 21, 15),\n(10539, 33, 15),\n(10539, 49, 6),\n(10540, 3, 60),\n(10540, 26, 40),\n(10540, 38, 30),\n(10540, 68, 35),\n(10541, 24, 35),\n(10541, 38, 4),\n(10541, 65, 36),\n(10541, 71, 9),\n(10542, 11, 15),\n(10542, 54, 24),\n(10543, 12, 30),\n(10543, 23, 70),\n(10544, 28, 7),\n(10544, 67, 7),\n(10545, 11, 10),\n(10546, 7, 10),\n(10546, 35, 30),\n(10546, 62, 40),\n(10547, 32, 24),\n(10547, 36, 60),\n(10548, 34, 10),\n(10548, 41, 14),\n(10549, 31, 55),\n(10549, 45, 100),\n(10549, 51, 48),\n(10550, 17, 8),\n(10550, 19, 10),\n(10550, 21, 6),\n(10550, 61, 10),\n(10551, 16, 40),\n(10551, 35, 20),\n(10551, 44, 40),\n(10552, 69, 18),\n(10552, 75, 30),\n(10553, 11, 15),\n(10553, 16, 14),\n(10553, 22, 24),\n(10553, 31, 30),\n(10553, 35, 6),\n(10554, 16, 30),\n(10554, 23, 20),\n(10554, 62, 20),\n(10554, 77, 10),\n(10555, 14, 30),\n(10555, 19, 35),\n(10555, 24, 18),\n(10555, 51, 20),\n(10555, 56, 40),\n(10556, 72, 24),\n(10557, 64, 30),\n(10557, 75, 20),\n(10558, 47, 25),\n(10558, 51, 20),\n(10558, 52, 30),\n(10558, 53, 18),\n(10558, 73, 3),\n(10559, 41, 12),\n(10559, 55, 18),\n(10560, 30, 20),\n(10560, 62, 15),\n(10561, 44, 10),\n(10561, 51, 50),\n(10562, 33, 20),\n(10562, 62, 10),\n(10563, 36, 25),\n(10563, 52, 70),\n(10564, 17, 16),\n(10564, 31, 6),\n(10564, 55, 25),\n(10565, 24, 25),\n(10565, 64, 18),\n(10566, 11, 35),\n(10566, 18, 18),\n(10566, 76, 10),\n(10567, 31, 60),\n(10567, 51, 3),\n(10567, 59, 40),\n(10568, 10, 5),\n(10569, 31, 35),\n(10569, 76, 30),\n(10570, 11, 15),\n(10570, 56, 60),\n(10571, 14, 11),\n(10571, 42, 28),\n(10572, 16, 12),\n(10572, 32, 10),\n(10572, 40, 50),\n(10572, 75, 15),\n(10573, 17, 18),\n(10573, 34, 40),\n(10573, 53, 25),\n(10574, 33, 14),\n(10574, 40, 2),\n(10574, 62, 10),\n(10574, 64, 6),\n(10575, 59, 12),\n(10575, 63, 6),\n(10575, 72, 30),\n(10575, 76, 10),\n(10576, 1, 10),\n(10576, 31, 20),\n(10576, 44, 21),\n(10577, 39, 10),\n(10577, 75, 20),\n(10577, 77, 18),\n(10578, 35, 20),\n(10578, 57, 6),\n(10579, 15, 10),\n(10579, 75, 21),\n(10580, 14, 15),\n(10580, 41, 9),\n(10580, 65, 30),\n(10581, 75, 50),\n(10582, 57, 4),\n(10582, 76, 14),\n(10583, 29, 10),\n(10583, 60, 24),\n(10583, 69, 10),\n(10584, 31, 50),\n(10585, 47, 15),\n(10586, 52, 4),\n(10587, 26, 6),\n(10587, 35, 20),\n(10587, 77, 20),\n(10588, 18, 40),\n(10588, 42, 100),\n(10589, 35, 4),\n(10590, 1, 20),\n(10590, 77, 60),\n(10591, 3, 14),\n(10591, 7, 10),\n(10591, 54, 50),\n(10592, 15, 25),\n(10592, 26, 5),\n(10593, 20, 21),\n(10593, 69, 20),\n(10593, 76, 4),\n(10594, 52, 24),\n(10594, 58, 30),\n(10595, 35, 30),\n(10595, 61, 120),\n(10595, 69, 65),\n(10596, 56, 5),\n(10596, 63, 24),\n(10596, 75, 30),\n(10597, 24, 35),\n(10597, 57, 20),\n(10597, 65, 12),\n(10598, 27, 50),\n(10598, 71, 9),\n(10599, 62, 10),\n(10600, 54, 4),\n(10600, 73, 30),\n(10601, 13, 60),\n(10601, 59, 35),\n(10602, 77, 5),\n(10603, 22, 48),\n(10603, 49, 25),\n(10604, 48, 6),\n(10604, 76, 10),\n(10605, 16, 30),\n(10605, 59, 20),\n(10605, 60, 70),\n(10605, 71, 15),\n(10606, 4, 20),\n(10606, 55, 20),\n(10606, 62, 10),\n(10607, 7, 45),\n(10607, 17, 100),\n(10607, 33, 14),\n(10607, 40, 42),\n(10607, 72, 12),\n(10608, 56, 28),\n(10609, 1, 3),\n(10609, 10, 10),\n(10609, 21, 6),\n(10610, 36, 21),\n(10611, 1, 6),\n(10611, 2, 10),\n(10611, 60, 15),\n(10612, 10, 70),\n(10612, 36, 55),\n(10612, 49, 18),\n(10612, 60, 40),\n(10612, 76, 80),\n(10613, 13, 8),\n(10613, 75, 40),\n(10614, 11, 14),\n(10614, 21, 8),\n(10614, 39, 5),\n(10615, 55, 5),\n(10616, 38, 15),\n(10616, 56, 14),\n(10616, 70, 15),\n(10616, 71, 15),\n(10617, 59, 30),\n(10618, 6, 70),\n(10618, 56, 20),\n(10618, 68, 15),\n(10619, 21, 42),\n(10619, 22, 40),\n(10620, 24, 5),\n(10620, 52, 5),\n(10621, 19, 5),\n(10621, 23, 10),\n(10621, 70, 20),\n(10621, 71, 15),\n(10622, 2, 20),\n(10622, 68, 18),\n(10623, 14, 21),\n(10623, 19, 15),\n(10623, 21, 25),\n(10623, 24, 3),\n(10623, 35, 30),\n(10624, 28, 10),\n(10624, 29, 6),\n(10624, 44, 10),\n(10625, 14, 3),\n(10625, 42, 5),\n(10625, 60, 10),\n(10626, 53, 12),\n(10626, 60, 20),\n(10626, 71, 20),\n(10627, 62, 15),\n(10627, 73, 35),\n(10628, 1, 25),\n(10629, 29, 20),\n(10629, 64, 9),\n(10630, 55, 12),\n(10630, 76, 35),\n(10631, 75, 8),\n(10632, 2, 30),\n(10632, 33, 20),\n(10633, 12, 36),\n(10633, 13, 13),\n(10633, 26, 35),\n(10633, 62, 80),\n(10634, 7, 35),\n(10634, 18, 50),\n(10634, 51, 15),\n(10634, 75, 2),\n(10635, 4, 10),\n(10635, 5, 15),\n(10635, 22, 40),\n(10636, 4, 25),\n(10636, 58, 6),\n(10637, 11, 10),\n(10637, 50, 25),\n(10637, 56, 60),\n(10638, 45, 20),\n(10638, 65, 21),\n(10638, 72, 60),\n(10639, 18, 8),\n(10640, 69, 20),\n(10640, 70, 15),\n(10641, 2, 50),\n(10641, 40, 60),\n(10642, 21, 30),\n(10642, 61, 20),\n(10643, 28, 15),\n(10643, 39, 21),\n(10643, 46, 2),\n(10644, 18, 4),\n(10644, 43, 20),\n(10644, 46, 21),\n(10645, 18, 20),\n(10645, 36, 15),\n(10646, 1, 15),\n(10646, 10, 18),\n(10646, 71, 30),\n(10646, 77, 35),\n(10647, 19, 30),\n(10647, 39, 20),\n(10648, 22, 15),\n(10648, 24, 15),\n(10649, 28, 20),\n(10649, 72, 15),\n(10650, 30, 30),\n(10650, 53, 25),\n(10650, 54, 30),\n(10651, 19, 12),\n(10651, 22, 20),\n(10652, 30, 2),\n(10652, 42, 20),\n(10653, 16, 30),\n(10653, 60, 20),\n(10654, 4, 12),\n(10654, 39, 20),\n(10654, 54, 6),\n(10655, 41, 20),\n(10656, 14, 3),\n(10656, 44, 28),\n(10656, 47, 6),\n(10657, 15, 50),\n(10657, 41, 24),\n(10657, 46, 45),\n(10657, 47, 10),\n(10657, 56, 45),\n(10657, 60, 30),\n(10658, 21, 60),\n(10658, 40, 70),\n(10658, 60, 55),\n(10658, 77, 70),\n(10659, 31, 20),\n(10659, 40, 24),\n(10659, 70, 40),\n(10660, 20, 21),\n(10661, 39, 3),\n(10661, 58, 49),\n(10662, 68, 10),\n(10663, 40, 30),\n(10663, 42, 30),\n(10663, 51, 20),\n(10664, 10, 24),\n(10664, 56, 12),\n(10664, 65, 15),\n(10665, 51, 20),\n(10665, 59, 1),\n(10665, 76, 10),\n(10666, 29, 36),\n(10666, 65, 10),\n(10667, 69, 45),\n(10667, 71, 14),\n(10668, 31, 8),\n(10668, 55, 4),\n(10668, 64, 15),\n(10669, 36, 30),\n(10670, 23, 32),\n(10670, 46, 60),\n(10670, 67, 25),\n(10670, 73, 50),\n(10670, 75, 25),\n(10671, 16, 10),\n(10671, 62, 10),\n(10671, 65, 12),\n(10672, 38, 15),\n(10672, 71, 12),\n(10673, 16, 3),\n(10673, 42, 6),\n(10673, 43, 6),\n(10674, 23, 5),\n(10675, 14, 30),\n(10675, 53, 10),\n(10675, 58, 30),\n(10676, 10, 2),\n(10676, 19, 7),\n(10676, 44, 21),\n(10677, 26, 30),\n(10677, 33, 8),\n(10678, 12, 100),\n(10678, 33, 30),\n(10678, 41, 120),\n(10678, 54, 30),\n(10679, 59, 12),\n(10680, 16, 50),\n(10680, 31, 20),\n(10680, 42, 40),\n(10681, 19, 30),\n(10681, 21, 12),\n(10681, 64, 28),\n(10682, 33, 30),\n(10682, 66, 4),\n(10682, 75, 30),\n(10683, 52, 9),\n(10684, 40, 20),\n(10684, 47, 40),\n(10684, 60, 30),\n(10685, 10, 20),\n(10685, 41, 4),\n(10685, 47, 15),\n(10686, 17, 30),\n(10686, 26, 15),\n(10687, 9, 50),\n(10687, 29, 10),\n(10687, 36, 6),\n(10688, 10, 18),\n(10688, 28, 60),\n(10688, 34, 14),\n(10689, 1, 35),\n(10690, 56, 20),\n(10690, 77, 30),\n(10691, 1, 30),\n(10691, 29, 40),\n(10691, 43, 40),\n(10691, 44, 24),\n(10691, 62, 48),\n(10692, 63, 20),\n(10693, 9, 6),\n(10693, 54, 60),\n(10693, 69, 30),\n(10693, 73, 15),\n(10694, 7, 90),\n(10694, 59, 25),\n(10694, 70, 50),\n(10695, 8, 10),\n(10695, 12, 4),\n(10695, 24, 20),\n(10696, 17, 20),\n(10696, 46, 18),\n(10697, 19, 7),\n(10697, 35, 9),\n(10697, 58, 30),\n(10697, 70, 30),\n(10698, 11, 15),\n(10698, 17, 8),\n(10698, 29, 12),\n(10698, 65, 65),\n(10698, 70, 8),\n(10699, 47, 12),\n(10700, 1, 5),\n(10700, 34, 12),\n(10700, 68, 40),\n(10700, 71, 60),\n(10701, 59, 42),\n(10701, 71, 20),\n(10701, 76, 35),\n(10702, 3, 6),\n(10702, 76, 15),\n(10703, 2, 5),\n(10703, 59, 35),\n(10703, 73, 35),\n(10704, 4, 6),\n(10704, 24, 35),\n(10704, 48, 24),\n(10705, 31, 20),\n(10705, 32, 4),\n(10706, 16, 20),\n(10706, 43, 24),\n(10706, 59, 8),\n(10707, 55, 21),\n(10707, 57, 40),\n(10707, 70, 28),\n(10708, 5, 4),\n(10708, 36, 5),\n(10709, 8, 40),\n(10709, 51, 28),\n(10709, 60, 10),\n(10710, 19, 5),\n(10710, 47, 5),\n(10711, 19, 12),\n(10711, 41, 42),\n(10711, 53, 120),\n(10712, 53, 3),\n(10712, 56, 30),\n(10713, 10, 18),\n(10713, 26, 30),\n(10713, 45, 110),\n(10713, 46, 24),\n(10714, 2, 30),\n(10714, 17, 27),\n(10714, 47, 50),\n(10714, 56, 18),\n(10714, 58, 12),\n(10715, 10, 21),\n(10715, 71, 30),\n(10716, 21, 5),\n(10716, 51, 7),\n(10716, 61, 10),\n(10717, 21, 32),\n(10717, 54, 15),\n(10717, 69, 25),\n(10718, 12, 36),\n(10718, 16, 20),\n(10718, 36, 40),\n(10718, 62, 20),\n(10719, 18, 12),\n(10719, 30, 3),\n(10719, 54, 40),\n(10720, 35, 21),\n(10720, 71, 8),\n(10721, 44, 50),\n(10722, 2, 3),\n(10722, 31, 50),\n(10722, 68, 45),\n(10722, 75, 42),\n(10723, 26, 15),\n(10724, 10, 16),\n(10724, 61, 5),\n(10725, 41, 12),\n(10725, 52, 4),\n(10725, 55, 6),\n(10726, 4, 25),\n(10726, 11, 5),\n(10727, 17, 20),\n(10727, 56, 10),\n(10727, 59, 10),\n(10728, 30, 15),\n(10728, 40, 6),\n(10728, 55, 12),\n(10728, 60, 15),\n(10729, 1, 50),\n(10729, 21, 30),\n(10729, 50, 40),\n(10730, 16, 15),\n(10730, 31, 3),\n(10730, 65, 10),\n(10731, 21, 40),\n(10731, 51, 30),\n(10732, 76, 20),\n(10733, 14, 16),\n(10733, 28, 20),\n(10733, 52, 25),\n(10734, 6, 30),\n(10734, 30, 15),\n(10734, 76, 20),\n(10735, 61, 20),\n(10735, 77, 2),\n(10736, 65, 40),\n(10736, 75, 20),\n(10737, 13, 4),\n(10737, 41, 12),\n(10738, 16, 3),\n(10739, 36, 6),\n(10739, 52, 18),\n(10740, 28, 5),\n(10740, 35, 35),\n(10740, 45, 40),\n(10740, 56, 14),\n(10741, 2, 15),\n(10742, 3, 20),\n(10742, 60, 50),\n(10742, 72, 35),\n(10743, 46, 28),\n(10744, 40, 50),\n(10745, 18, 24),\n(10745, 44, 16),\n(10745, 59, 45),\n(10745, 72, 7),\n(10746, 13, 6),\n(10746, 42, 28),\n(10746, 62, 9),\n(10746, 69, 40),\n(10747, 31, 8),\n(10747, 41, 35),\n(10747, 63, 9),\n(10747, 69, 30),\n(10748, 23, 44),\n(10748, 40, 40),\n(10748, 56, 28),\n(10749, 56, 15),\n(10749, 59, 6),\n(10749, 76, 10),\n(10750, 14, 5),\n(10750, 45, 40),\n(10750, 59, 25),\n(10751, 26, 12),\n(10751, 30, 30),\n(10751, 50, 20),\n(10751, 73, 15),\n(10752, 1, 8),\n(10752, 69, 3),\n(10753, 45, 4),\n(10753, 74, 5),\n(10754, 40, 3),\n(10755, 47, 30),\n(10755, 56, 30),\n(10755, 57, 14),\n(10755, 69, 25),\n(10756, 18, 21),\n(10756, 36, 20),\n(10756, 68, 6),\n(10756, 69, 20),\n(10757, 34, 30),\n(10757, 59, 7),\n(10757, 62, 30),\n(10757, 64, 24),\n(10758, 26, 20),\n(10758, 52, 60),\n(10758, 70, 40),\n(10759, 32, 10),\n(10760, 25, 12),\n(10760, 27, 40),\n(10760, 43, 30),\n(10761, 25, 35),\n(10761, 75, 18),\n(10762, 39, 16),\n(10762, 47, 30),\n(10762, 51, 28),\n(10762, 56, 60),\n(10763, 21, 40),\n(10763, 22, 6),\n(10763, 24, 20),\n(10764, 3, 20),\n(10764, 39, 130),\n(10765, 65, 80),\n(10766, 2, 40),\n(10766, 7, 35),\n(10766, 68, 40),\n(10767, 42, 2),\n(10768, 22, 4),\n(10768, 31, 50),\n(10768, 60, 15),\n(10768, 71, 12),\n(10769, 41, 30),\n(10769, 52, 15),\n(10769, 61, 20),\n(10769, 62, 15),\n(10770, 11, 15),\n(10771, 71, 16),\n(10772, 29, 18),\n(10772, 59, 25),\n(10773, 17, 33),\n(10773, 31, 70),\n(10773, 75, 7),\n(10774, 31, 2),\n(10774, 66, 50),\n(10775, 10, 6),\n(10775, 67, 3),\n(10776, 31, 16),\n(10776, 42, 12),\n(10776, 45, 27),\n(10776, 51, 120),\n(10777, 42, 20),\n(10778, 41, 10),\n(10779, 16, 20),\n(10779, 62, 20),\n(10780, 70, 35),\n(10780, 77, 15),\n(10781, 54, 3),\n(10781, 56, 20),\n(10781, 74, 35),\n(10782, 31, 1),\n(10783, 31, 10),\n(10783, 38, 5),\n(10784, 36, 30),\n(10784, 39, 2),\n(10784, 72, 30),\n(10785, 10, 10),\n(10785, 75, 10),\n(10786, 8, 30),\n(10786, 30, 15),\n(10786, 75, 42),\n(10787, 2, 15),\n(10787, 29, 20),\n(10788, 19, 50),\n(10788, 75, 40),\n(10789, 18, 30),\n(10789, 35, 15),\n(10789, 63, 30),\n(10789, 68, 18),\n(10790, 7, 3),\n(10790, 56, 20),\n(10791, 29, 14),\n(10791, 41, 20),\n(10792, 2, 10),\n(10792, 54, 3),\n(10792, 68, 15),\n(10793, 41, 14),\n(10793, 52, 8),\n(10794, 14, 15),\n(10794, 54, 6),\n(10795, 16, 65),\n(10795, 17, 35),\n(10796, 26, 21),\n(10796, 44, 10),\n(10796, 64, 35),\n(10796, 69, 24),\n(10797, 11, 20),\n(10798, 62, 2),\n(10798, 72, 10),\n(10799, 13, 20),\n(10799, 24, 20),\n(10799, 59, 25),\n(10800, 11, 50),\n(10800, 51, 10),\n(10800, 54, 7),\n(10801, 17, 40),\n(10801, 29, 20),\n(10802, 30, 25),\n(10802, 51, 30),\n(10802, 55, 60),\n(10802, 62, 5),\n(10803, 19, 24),\n(10803, 25, 15),\n(10803, 59, 15),\n(10804, 10, 36),\n(10804, 28, 24),\n(10804, 49, 4),\n(10805, 34, 10),\n(10805, 38, 10),\n(10806, 2, 20),\n(10806, 65, 2),\n(10806, 74, 15),\n(10807, 40, 1),\n(10808, 56, 20),\n(10808, 76, 50),\n(10809, 52, 20),\n(10810, 13, 7),\n(10810, 25, 5),\n(10810, 70, 5),\n(10811, 19, 15),\n(10811, 23, 18),\n(10811, 40, 30),\n(10812, 31, 16),\n(10812, 72, 40),\n(10812, 77, 20),\n(10813, 2, 12),\n(10813, 46, 35),\n(10814, 41, 20),\n(10814, 43, 20),\n(10814, 48, 8),\n(10814, 61, 30),\n(10815, 33, 16),\n(10816, 38, 30),\n(10816, 62, 20),\n(10817, 26, 40),\n(10817, 38, 30),\n(10817, 40, 60),\n(10817, 62, 25),\n(10818, 32, 20),\n(10818, 41, 20),\n(10819, 43, 7),\n(10819, 75, 20),\n(10820, 56, 30),\n(10821, 35, 20),\n(10821, 51, 6),\n(10822, 62, 3),\n(10822, 70, 6),\n(10823, 11, 20),\n(10823, 57, 15),\n(10823, 59, 40),\n(10823, 77, 15),\n(10824, 41, 12),\n(10824, 70, 9),\n(10825, 26, 12),\n(10825, 53, 20),\n(10826, 31, 35),\n(10826, 57, 15),\n(10827, 10, 15),\n(10827, 39, 21),\n(10828, 20, 5),\n(10828, 38, 2),\n(10829, 2, 10),\n(10829, 8, 20),\n(10829, 13, 10),\n(10829, 60, 21),\n(10830, 6, 6),\n(10830, 39, 28),\n(10830, 60, 30),\n(10830, 68, 24),\n(10831, 19, 2),\n(10831, 35, 8),\n(10831, 38, 8),\n(10831, 43, 9),\n(10832, 13, 3),\n(10832, 25, 10),\n(10832, 44, 16),\n(10832, 64, 3),\n(10833, 7, 20),\n(10833, 31, 9),\n(10833, 53, 9),\n(10834, 29, 8),\n(10834, 30, 20),\n(10835, 59, 15),\n(10835, 77, 2),\n(10836, 22, 52),\n(10836, 35, 6),\n(10836, 57, 24),\n(10836, 60, 60),\n(10836, 64, 30),\n(10837, 13, 6),\n(10837, 40, 25),\n(10837, 47, 40),\n(10837, 76, 21),\n(10838, 1, 4),\n(10838, 18, 25),\n(10838, 36, 50),\n(10839, 58, 30),\n(10839, 72, 15),\n(10840, 25, 6),\n(10840, 39, 10),\n(10841, 10, 16),\n(10841, 56, 30),\n(10841, 59, 50),\n(10841, 77, 15),\n(10842, 11, 15),\n(10842, 43, 5),\n(10842, 68, 20),\n(10842, 70, 12),\n(10843, 51, 4),\n(10844, 22, 35),\n(10845, 23, 70),\n(10845, 35, 25),\n(10845, 42, 42),\n(10845, 58, 60),\n(10845, 64, 48),\n(10846, 4, 21),\n(10846, 70, 30),\n(10846, 74, 20),\n(10847, 1, 80),\n(10847, 19, 12),\n(10847, 37, 60),\n(10847, 45, 36),\n(10847, 60, 45),\n(10847, 71, 55),\n(10848, 5, 30),\n(10848, 9, 3),\n(10849, 3, 49),\n(10849, 26, 18),\n(10850, 25, 20),\n(10850, 33, 4),\n(10850, 70, 30),\n(10851, 2, 5),\n(10851, 25, 10),\n(10851, 57, 10),\n(10851, 59, 42),\n(10852, 2, 15),\n(10852, 17, 6),\n(10852, 62, 50),\n(10853, 18, 10),\n(10854, 10, 100),\n(10854, 13, 65),\n(10855, 16, 50),\n(10855, 31, 14),\n(10855, 56, 24),\n(10855, 65, 15),\n(10856, 2, 20),\n(10856, 42, 20),\n(10857, 3, 30),\n(10857, 26, 35),\n(10857, 29, 10),\n(10858, 7, 5),\n(10858, 27, 10),\n(10858, 70, 4),\n(10859, 24, 40),\n(10859, 54, 35),\n(10859, 64, 30),\n(10860, 51, 3),\n(10860, 76, 20),\n(10861, 17, 42),\n(10861, 18, 20),\n(10861, 21, 40),\n(10861, 33, 35),\n(10861, 62, 3),\n(10862, 11, 25),\n(10862, 52, 8),\n(10863, 1, 20),\n(10863, 58, 12),\n(10864, 35, 4),\n(10864, 67, 15),\n(10865, 38, 60),\n(10865, 39, 80),\n(10866, 2, 21),\n(10866, 24, 6),\n(10866, 30, 40),\n(10867, 53, 3),\n(10868, 26, 20),\n(10868, 35, 30),\n(10868, 49, 42),\n(10869, 1, 40),\n(10869, 11, 10),\n(10869, 23, 50),\n(10869, 68, 20),\n(10870, 35, 3),\n(10870, 51, 2),\n(10871, 6, 50),\n(10871, 16, 12),\n(10871, 17, 16),\n(10872, 55, 10),\n(10872, 62, 20),\n(10872, 64, 15),\n(10872, 65, 21),\n(10873, 21, 20),\n(10873, 28, 3),\n(10874, 10, 10),\n(10875, 19, 25),\n(10875, 47, 21),\n(10875, 49, 15),\n(10876, 46, 21),\n(10876, 64, 20),\n(10877, 16, 30),\n(10877, 18, 25),\n(10878, 20, 20),\n(10879, 40, 12),\n(10879, 65, 10),\n(10879, 76, 10),\n(10880, 23, 30),\n(10880, 61, 30),\n(10880, 70, 50),\n(10881, 73, 10),\n(10882, 42, 25),\n(10882, 49, 20),\n(10882, 54, 32),\n(10883, 24, 8),\n(10884, 21, 40),\n(10884, 56, 21),\n(10884, 65, 12),\n(10885, 2, 20),\n(10885, 24, 12),\n(10885, 70, 30),\n(10885, 77, 25),\n(10886, 10, 70),\n(10886, 31, 35),\n(10886, 77, 40),\n(10887, 25, 5),\n(10888, 2, 20),\n(10888, 68, 18),\n(10889, 11, 40),\n(10889, 38, 40),\n(10890, 17, 15),\n(10890, 34, 10),\n(10890, 41, 14),\n(10891, 30, 15),\n(10892, 59, 40),\n(10893, 8, 30),\n(10893, 24, 10),\n(10893, 29, 24),\n(10893, 30, 35),\n(10893, 36, 20),\n(10894, 13, 28),\n(10894, 69, 50),\n(10894, 75, 120),\n(10895, 24, 110),\n(10895, 39, 45),\n(10895, 40, 91),\n(10895, 60, 100),\n(10896, 45, 15),\n(10896, 56, 16),\n(10897, 29, 80),\n(10897, 30, 36),\n(10898, 13, 5),\n(10899, 39, 8),\n(10900, 70, 3),\n(10901, 41, 30),\n(10901, 71, 30),\n(10902, 55, 30),\n(10902, 62, 6),\n(10903, 13, 40),\n(10903, 65, 21),\n(10903, 68, 20),\n(10904, 58, 15),\n(10904, 62, 35),\n(10905, 1, 20),\n(10906, 61, 15),\n(10907, 75, 14),\n(10908, 7, 20),\n(10908, 52, 14),\n(10909, 7, 12),\n(10909, 16, 15),\n(10909, 41, 5),\n(10910, 19, 12),\n(10910, 49, 10),\n(10910, 61, 5),\n(10911, 1, 10),\n(10911, 17, 12),\n(10911, 67, 15),\n(10912, 11, 40),\n(10912, 29, 60),\n(10913, 4, 30),\n(10913, 33, 40),\n(10913, 58, 15),\n(10914, 71, 25),\n(10915, 17, 10),\n(10915, 33, 30),\n(10915, 54, 10),\n(10916, 16, 6),\n(10916, 32, 6),\n(10916, 57, 20),\n(10917, 30, 1),\n(10917, 60, 10),\n(10918, 1, 60),\n(10918, 60, 25),\n(10919, 16, 24),\n(10919, 25, 24),\n(10919, 40, 20),\n(10920, 50, 24),\n(10921, 35, 10),\n(10921, 63, 40),\n(10922, 17, 15),\n(10922, 24, 35),\n(10923, 42, 10),\n(10923, 43, 10),\n(10923, 67, 24),\n(10924, 10, 20),\n(10924, 28, 30),\n(10924, 75, 6),\n(10925, 36, 25),\n(10925, 52, 12),\n(10926, 11, 2),\n(10926, 13, 10),\n(10926, 19, 7),\n(10926, 72, 10),\n(10927, 20, 5),\n(10927, 52, 5),\n(10927, 76, 20),\n(10928, 47, 5),\n(10928, 76, 5),\n(10929, 21, 60),\n(10929, 75, 49),\n(10929, 77, 15),\n(10930, 21, 36),\n(10930, 27, 25),\n(10930, 55, 25),\n(10930, 58, 30),\n(10931, 13, 42),\n(10931, 57, 30),\n(10932, 16, 30),\n(10932, 62, 14),\n(10932, 72, 16),\n(10932, 75, 20),\n(10933, 53, 2),\n(10933, 61, 30),\n(10934, 6, 20),\n(10935, 1, 21),\n(10935, 18, 4),\n(10935, 23, 8),\n(10936, 36, 30),\n(10937, 28, 8),\n(10937, 34, 20),\n(10938, 13, 20),\n(10938, 43, 24),\n(10938, 60, 49),\n(10938, 71, 35),\n(10939, 2, 10),\n(10939, 67, 40),\n(10940, 7, 8),\n(10940, 13, 20),\n(10941, 31, 44),\n(10941, 62, 30),\n(10941, 68, 80),\n(10941, 72, 50),\n(10942, 49, 28),\n(10943, 13, 15),\n(10943, 22, 21),\n(10943, 46, 15),\n(10944, 11, 5),\n(10944, 44, 18),\n(10944, 56, 18),\n(10945, 13, 20),\n(10945, 31, 10),\n(10946, 10, 25),\n(10946, 24, 25),\n(10946, 77, 40),\n(10947, 59, 4),\n(10948, 50, 9),\n(10948, 51, 40),\n(10948, 55, 4),\n(10949, 6, 12),\n(10949, 10, 30),\n(10949, 17, 6),\n(10949, 62, 60),\n(10950, 4, 5),\n(10951, 33, 15),\n(10951, 41, 6),\n(10951, 75, 50),\n(10952, 6, 16),\n(10952, 28, 2),\n(10953, 20, 50),\n(10953, 31, 50),\n(10954, 16, 28),\n(10954, 31, 25),\n(10954, 45, 30),\n(10954, 60, 24),\n(10955, 75, 12),\n(10956, 21, 12),\n(10956, 47, 14),\n(10956, 51, 8),\n(10957, 30, 30),\n(10957, 35, 40),\n(10957, 64, 8),\n(10958, 5, 20),\n(10958, 7, 6),\n(10958, 72, 5),\n(10959, 75, 20),\n(10960, 24, 10),\n(10960, 41, 24),\n(10961, 52, 6),\n(10961, 76, 60),\n(10962, 7, 45),\n(10962, 13, 77),\n(10962, 53, 20),\n(10962, 69, 9),\n(10962, 76, 44),\n(10963, 60, 2),\n(10964, 18, 6),\n(10964, 38, 5),\n(10964, 69, 10),\n(10965, 51, 16),\n(10966, 37, 8),\n(10966, 56, 12),\n(10966, 62, 12),\n(10967, 19, 12),\n(10967, 49, 40),\n(10968, 12, 30),\n(10968, 24, 30),\n(10968, 64, 4),\n(10969, 46, 9),\n(10970, 52, 40),\n(10971, 29, 14),\n(10972, 17, 6),\n(10972, 33, 7),\n(10973, 26, 5),\n(10973, 41, 6),\n(10973, 75, 10),\n(10974, 63, 10),\n(10975, 8, 16),\n(10975, 75, 10),\n(10976, 28, 20),\n(10977, 39, 30),\n(10977, 47, 30),\n(10977, 51, 10),\n(10977, 63, 20),\n(10978, 8, 20),\n(10978, 21, 40),\n(10978, 40, 10),\n(10978, 44, 6),\n(10979, 7, 18),\n(10979, 12, 20),\n(10979, 24, 80),\n(10979, 27, 30),\n(10979, 31, 24),\n(10979, 63, 35),\n(10980, 75, 40),\n(10981, 38, 60),\n(10982, 7, 20),\n(10982, 43, 9),\n(10983, 13, 84),\n(10983, 57, 15),\n(10984, 16, 55),\n(10984, 24, 20),\n(10984, 36, 40),\n(10985, 16, 36),\n(10985, 18, 8),\n(10985, 32, 35),\n(10986, 11, 30),\n(10986, 20, 15),\n(10986, 76, 10),\n(10986, 77, 15),\n(10987, 7, 60),\n(10987, 43, 6),\n(10987, 72, 20),\n(10988, 7, 60),\n(10988, 62, 40),\n(10989, 6, 40),\n(10989, 11, 15),\n(10989, 41, 4),\n(10990, 21, 65),\n(10990, 34, 60),\n(10990, 55, 65),\n(10990, 61, 66),\n(10991, 2, 50),\n(10991, 70, 20),\n(10991, 76, 90),\n(10992, 72, 2),\n(10993, 29, 50),\n(10993, 41, 35),\n(10994, 59, 18),\n(10995, 51, 20),\n(10995, 60, 4),\n(10996, 42, 40),\n(10997, 32, 50),\n(10997, 46, 20),\n(10997, 52, 20),\n(10998, 24, 12),\n(10998, 61, 7),\n(10998, 74, 20),\n(10998, 75, 30),\n(10999, 41, 20),\n(10999, 51, 15),\n(10999, 77, 21),\n(11000, 4, 25),\n(11000, 24, 30),\n(11000, 77, 30),\n(11001, 7, 60),\n(11001, 22, 25),\n(11001, 46, 25),\n(11001, 55, 6),\n(11002, 13, 56),\n(11002, 35, 15),\n(11002, 42, 24),\n(11002, 55, 40),\n(11003, 1, 4),\n(11003, 40, 10),\n(11003, 52, 10),\n(11004, 26, 6),\n(11004, 76, 6),\n(11005, 1, 2),\n(11005, 59, 10),\n(11006, 1, 8),\n(11006, 29, 2),\n(11007, 8, 30),\n(11007, 29, 10),\n(11007, 42, 14),\n(11008, 28, 70),\n(11008, 34, 90),\n(11008, 71, 21),\n(11009, 24, 12),\n(11009, 36, 18),\n(11009, 60, 9),\n(11010, 7, 20),\n(11010, 24, 10),\n(11011, 58, 40),\n(11011, 71, 20),\n(11012, 19, 50),\n(11012, 60, 36),\n(11012, 71, 60),\n(11013, 23, 10),\n(11013, 42, 4),\n(11013, 45, 20),\n(11013, 68, 2),\n(11014, 41, 28),\n(11015, 30, 15),\n(11015, 77, 18),\n(11016, 31, 15),\n(11016, 36, 16),\n(11017, 3, 25),\n(11017, 59, 110),\n(11017, 70, 30),\n(11018, 12, 20),\n(11018, 18, 10),\n(11018, 56, 5),\n(11019, 46, 3),\n(11019, 49, 2),\n(11020, 10, 24),\n(11021, 2, 11),\n(11021, 20, 15),\n(11021, 26, 63),\n(11021, 51, 44),\n(11021, 72, 35),\n(11022, 19, 35),\n(11022, 69, 30),\n(11023, 7, 4),\n(11023, 43, 30),\n(11024, 26, 12),\n(11024, 33, 30),\n(11024, 65, 21),\n(11024, 71, 50),\n(11025, 1, 10),\n(11025, 13, 20),\n(11026, 18, 8),\n(11026, 51, 10),\n(11027, 24, 30),\n(11027, 62, 21),\n(11028, 55, 35),\n(11028, 59, 24),\n(11029, 56, 20),\n(11029, 63, 12),\n(11030, 2, 100),\n(11030, 5, 70),\n(11030, 29, 60),\n(11030, 59, 100),\n(11031, 1, 45),\n(11031, 13, 80),\n(11031, 24, 21),\n(11031, 64, 20),\n(11031, 71, 16),\n(11032, 36, 35),\n(11032, 38, 25),\n(11032, 59, 30),\n(11033, 53, 70),\n(11033, 69, 36),\n(11034, 21, 15),\n(11034, 44, 12),\n(11034, 61, 6),\n(11035, 1, 10),\n(11035, 35, 60),\n(11035, 42, 30),\n(11035, 54, 10),\n(11036, 13, 7),\n(11036, 59, 30),\n(11037, 70, 4),\n(11038, 40, 5),\n(11038, 52, 2),\n(11038, 71, 30),\n(11039, 28, 20),\n(11039, 35, 24),\n(11039, 49, 60),\n(11039, 57, 28),\n(11040, 21, 20),\n(11041, 2, 30),\n(11041, 63, 30),\n(11042, 44, 15),\n(11042, 61, 4),\n(11043, 11, 10),\n(11044, 62, 12),\n(11045, 33, 15),\n(11045, 51, 24),\n(11046, 12, 20),\n(11046, 32, 15),\n(11046, 35, 18),\n(11047, 1, 25),\n(11047, 5, 30),\n(11048, 68, 42),\n(11049, 2, 10),\n(11049, 12, 4),\n(11050, 76, 50),\n(11051, 24, 10),\n(11052, 43, 30),\n(11052, 61, 10),\n(11053, 18, 35),\n(11053, 32, 20),\n(11053, 64, 25),\n(11054, 33, 10),\n(11054, 67, 20),\n(11055, 24, 15),\n(11055, 25, 15),\n(11055, 51, 20),\n(11055, 57, 20),\n(11056, 7, 40),\n(11056, 55, 35),\n(11056, 60, 50),\n(11057, 70, 3),\n(11058, 21, 3),\n(11058, 60, 21),\n(11058, 61, 4),\n(11059, 13, 30),\n(11059, 17, 12),\n(11059, 60, 35),\n(11060, 60, 4),\n(11060, 77, 10),\n(11061, 60, 15),\n(11062, 53, 10),\n(11062, 70, 12),\n(11063, 34, 30),\n(11063, 40, 40),\n(11063, 41, 30),\n(11064, 17, 77),\n(11064, 41, 12),\n(11064, 53, 25),\n(11064, 55, 4),\n(11064, 68, 55),\n(11065, 30, 4),\n(11065, 54, 20),\n(11066, 16, 3),\n(11066, 19, 42),\n(11066, 34, 35),\n(11067, 41, 9),\n(11068, 28, 8),\n(11068, 43, 36),\n(11068, 77, 28),\n(11069, 39, 20),\n(11070, 1, 40),\n(11070, 2, 20),\n(11070, 16, 30),\n(11070, 31, 20),\n(11071, 7, 15),\n(11071, 13, 10),\n(11072, 2, 8),\n(11072, 41, 40),\n(11072, 50, 22),\n(11072, 64, 130),\n(11073, 11, 10),\n(11073, 24, 20),\n(11074, 16, 14),\n(11075, 2, 10),\n(11075, 46, 30),\n(11075, 76, 2),\n(11076, 6, 20),\n(11076, 14, 20),\n(11076, 19, 10),\n(11077, 2, 24),\n(11077, 3, 4),\n(11077, 4, 1),\n(11077, 6, 1),\n(11077, 7, 1),\n(11077, 8, 2),\n(11077, 10, 1),\n(11077, 12, 2),\n(11077, 13, 4),\n(11077, 14, 1),\n(11077, 16, 2),\n(11077, 20, 1),\n(11077, 23, 2),\n(11077, 32, 1),\n(11077, 39, 2),\n(11077, 41, 3),\n(11077, 46, 3),\n(11077, 52, 2),\n(11077, 55, 2),\n(11077, 60, 2),\n(11077, 64, 2),\n(11077, 66, 1),\n(11077, 73, 2),\n(11077, 75, 4),\n(11077, 77, 2);",
          "html": "INSERT INTO order_details (order_id, product_id, quantity)<br/>VALUES<br/>  \n        (10248, 11, 12),<br/>  (10248, 42, 10),<br/>  (10248, 72, 5),<br/>  (10249, 14, \n        9),<br/>  (10249, 51, 40),<br/>  (10250, 41, 10),<br/>  (10250, 51, 35),<br/> \n        (10250, 65, 15),<br/>  (10251, 22, 6),<br/>  (10251, 57, 15),<br/>  (10251, 65, \n        20),<br/>  (10252, 20, 40),<br/>  (10252, 33, 25),<br/>  (10252, 60, 40),<br/> \n        (10253, 31, 20),<br/>  (10253, 39, 42),<br/>  (10253, 49, 40),<br/>  (10254, 24, \n        15),<br/>  (10254, 55, 21),<br/>  (10254, 74, 21),<br/>  (10255, 2, 20),<br/>  \n        (10255, 16, 35),<br/>  (10255, 36, 25),<br/>  (10255, 59, 30),<br/>  (10256, 53, \n        15),<br/>  (10256, 77, 12),<br/>  (10257, 27, 25),<br/>  (10257, 39, 6),<br/>  \n        (10257, 77, 15),<br/>  (10258, 2, 50),<br/>  (10258, 5, 65),<br/>  (10258, 32, \n        6),<br/>  (10259, 21, 10),<br/>  (10259, 37, 1),<br/>  (10260, 41, 16),<br/>  \n        (10260, 57, 50),<br/>  (10260, 62, 15),<br/>  (10260, 70, 21),<br/>  (10261, 21, \n        20),<br/>  (10261, 35, 20),<br/>  (10262, 5, 12),<br/>  (10262, 7, 15),<br/>  \n        (10262, 56, 2),<br/>  (10263, 16, 60),<br/>  (10263, 24, 28),<br/>  (10263, 30, \n        60),<br/>  (10263, 74, 36),<br/>  (10264, 2, 35),<br/>  (10264, 41, 25),<br/>  \n        (10265, 17, 30),<br/>  (10265, 70, 20),<br/>  (10266, 12, 12),<br/>  (10267, 40, \n        50),<br/>  (10267, 59, 70),<br/>  (10267, 76, 15),<br/>  (10268, 29, 10),<br/>  \n        (10268, 72, 4),<br/>  (10269, 33, 60),<br/>  (10269, 72, 20),<br/>  (10270, 36, \n        30),<br/>  (10270, 43, 25),<br/>  (10271, 33, 24),<br/>  (10272, 20, 6),<br/>  \n        (10272, 31, 40),<br/>  (10272, 72, 24),<br/>  (10273, 10, 24),<br/>  (10273, 31, \n        15),<br/>  (10273, 33, 20),<br/>  (10273, 40, 60),<br/>  (10273, 76, 33),<br/>  \n        (10274, 71, 20),<br/>  (10274, 72, 7),<br/>  (10275, 24, 12),<br/>  (10275, 59, \n        6),<br/>  (10276, 10, 15),<br/>  (10276, 13, 10),<br/>  (10277, 28, 20),<br/>  \n        (10277, 62, 12),<br/>  (10278, 44, 16),<br/>  (10278, 59, 15),<br/>  (10278, 63, \n        8),<br/>  (10278, 73, 25),<br/>  (10279, 17, 15),<br/>  (10280, 24, 12),<br/>  \n        (10280, 55, 20),<br/>  (10280, 75, 30),<br/>  (10281, 19, 1),<br/>  (10281, 24, \n        6),<br/>  (10281, 35, 4),<br/>  (10282, 30, 6),<br/>  (10282, 57, 2),<br/>  (10283, \n        15, 20),<br/>  (10283, 19, 18),<br/>  (10283, 60, 35),<br/>  (10283, 72, 3),<br/>  \n        (10284, 27, 15),<br/>  (10284, 44, 21),<br/>  (10284, 60, 20),<br/>  (10284, 67, \n        5),<br/>  (10285, 1, 45),<br/>  (10285, 40, 40),<br/>  (10285, 53, 36),<br/>  \n        (10286, 35, 100),<br/>  (10286, 62, 40),<br/>  (10287, 16, 40),<br/>  (10287, 34, \n        20),<br/>  (10287, 46, 15),<br/>  (10288, 54, 10),<br/>  (10288, 68, 3),<br/>  \n        (10289, 3, 30),<br/>  (10289, 64, 9),<br/>  (10290, 5, 20),<br/>  (10290, 29, \n        15),<br/>  (10290, 49, 15),<br/>  (10290, 77, 10),<br/>  (10291, 13, 20),<br/>  \n        (10291, 44, 24),<br/>  (10291, 51, 2),<br/>  (10292, 20, 20),<br/>  (10293, 18, \n        12),<br/>  (10293, 24, 10),<br/>  (10293, 63, 5),<br/>  (10293, 75, 6),<br/>  \n        (10294, 1, 18),<br/>  (10294, 17, 15),<br/>  (10294, 43, 15),<br/>  (10294, 60, \n        21),<br/>  (10294, 75, 6),<br/>  (10295, 56, 4),<br/>  (10296, 11, 12),<br/>  \n        (10296, 16, 30),<br/>  (10296, 69, 15),<br/>  (10297, 39, 60),<br/>  (10297, 72, \n        20),<br/>  (10298, 2, 40),<br/>  (10298, 36, 40),<br/>  (10298, 59, 30),<br/>  \n        (10298, 62, 15),<br/>  (10299, 19, 15),<br/>  (10299, 70, 20),<br/>  (10300, 66, \n        30),<br/>  (10300, 68, 20),<br/>  (10301, 40, 10),<br/>  (10301, 56, 20),<br/>  \n        (10302, 17, 40),<br/>  (10302, 28, 28),<br/>  (10302, 43, 12),<br/>  (10303, 40, \n        40),<br/>  (10303, 65, 30),<br/>  (10303, 68, 15),<br/>  (10304, 49, 30),<br/>  \n        (10304, 59, 10),<br/>  (10304, 71, 2),<br/>  (10305, 18, 25),<br/>  (10305, 29, \n        25),<br/>  (10305, 39, 30),<br/>  (10306, 30, 10),<br/>  (10306, 53, 10),<br/>  \n        (10306, 54, 5),<br/>  (10307, 62, 10),<br/>  (10307, 68, 3),<br/>  (10308, 69, \n        1),<br/>  (10308, 70, 5),<br/>  (10309, 4, 20),<br/>  (10309, 6, 30),<br/>  (10309, \n        42, 2),<br/>  (10309, 43, 20),<br/>  (10309, 71, 3),<br/>  (10310, 16, 10),<br/>  \n        (10310, 62, 5),<br/>  (10311, 42, 6),<br/>  (10311, 69, 7),<br/>  (10312, 28, 4),<br/>  \n        (10312, 43, 24),<br/>  (10312, 53, 20),<br/>  (10312, 75, 10),<br/>  (10313, 36, \n        12),<br/>  (10314, 32, 40),<br/>  (10314, 58, 30),<br/>  (10314, 62, 25),<br/>  \n        (10315, 34, 14),<br/>  (10315, 70, 30),<br/>  (10316, 41, 10),<br/>  (10316, 62, \n        70),<br/>  (10317, 1, 20),<br/>  (10318, 41, 20),<br/>  (10318, 76, 6),<br/>  \n        (10319, 17, 8),<br/>  (10319, 28, 14),<br/>  (10319, 76, 30),<br/>  (10320, 71, \n        30),<br/>  (10321, 35, 10),<br/>  (10322, 52, 20),<br/>  (10323, 15, 5),<br/>  \n        (10323, 25, 4),<br/>  (10323, 39, 4),<br/>  (10324, 16, 21),<br/>  (10324, 35, \n        70),<br/>  (10324, 46, 30),<br/>  (10324, 59, 40),<br/>  (10324, 63, 80),<br/>  \n        (10325, 6, 6),<br/>  (10325, 13, 12),<br/>  (10325, 14, 9),<br/>  (10325, 31, 4),<br/>  \n        (10325, 72, 40),<br/>  (10326, 4, 24),<br/>  (10326, 57, 16),<br/>  (10326, 75, \n        50),<br/>  (10327, 2, 25),<br/>  (10327, 11, 50),<br/>  (10327, 30, 35),<br/>  \n        (10327, 58, 30),<br/>  (10328, 59, 9),<br/>  (10328, 65, 40),<br/>  (10328, 68, \n        10),<br/>  (10329, 19, 10),<br/>  (10329, 30, 8),<br/>  (10329, 38, 20),<br/>  \n        (10329, 56, 12),<br/>  (10330, 26, 50),<br/>  (10330, 72, 25),<br/>  (10331, 54, \n        15),<br/>  (10332, 18, 40),<br/>  (10332, 42, 10),<br/>  (10332, 47, 16),<br/>  \n        (10333, 14, 10),<br/>  (10333, 21, 10),<br/>  (10333, 71, 40),<br/>  (10334, 52, \n        8),<br/>  (10334, 68, 10),<br/>  (10335, 2, 7),<br/>  (10335, 31, 25),<br/>  (10335, \n        32, 6),<br/>  (10335, 51, 48),<br/>  (10336, 4, 18),<br/>  (10337, 23, 40),<br/>  \n        (10337, 26, 24),<br/>  (10337, 36, 20),<br/>  (10337, 37, 28),<br/>  (10337, 72, \n        25),<br/>  (10338, 17, 20),<br/>  (10338, 30, 15),<br/>  (10339, 4, 10),<br/>  \n        (10339, 17, 70),<br/>  (10339, 62, 28),<br/>  (10340, 18, 20),<br/>  (10340, 41, \n        12),<br/>  (10340, 43, 40),<br/>  (10341, 33, 8),<br/>  (10341, 59, 9),<br/>  \n        (10342, 2, 24),<br/>  (10342, 31, 56),<br/>  (10342, 36, 40),<br/>  (10342, 55, \n        40),<br/>  (10343, 64, 50),<br/>  (10343, 68, 4),<br/>  (10343, 76, 15),<br/>  \n        (10344, 4, 35),<br/>  (10344, 8, 70),<br/>  (10345, 8, 70),<br/>  (10345, 19, \n        80),<br/>  (10345, 42, 9),<br/>  (10346, 17, 36),<br/>  (10346, 56, 20),<br/>  \n        (10347, 25, 10),<br/>  (10347, 39, 50),<br/>  (10347, 40, 4),<br/>  (10347, 75, \n        6),<br/>  (10348, 1, 15),<br/>  (10348, 23, 25),<br/>  (10349, 54, 24),<br/>  \n        (10350, 50, 15),<br/>  (10350, 69, 18),<br/>  (10351, 38, 20),<br/>  (10351, 41, \n        13),<br/>  (10351, 44, 77),<br/>  (10351, 65, 10),<br/>  (10352, 24, 10),<br/>  \n        (10352, 54, 20),<br/>  (10353, 11, 12),<br/>  (10353, 38, 50),<br/>  (10354, 1, \n        12),<br/>  (10354, 29, 4),<br/>  (10355, 24, 25),<br/>  (10355, 57, 25),<br/>  \n        (10356, 31, 30),<br/>  (10356, 55, 12),<br/>  (10356, 69, 20),<br/>  (10357, 10, \n        30),<br/>  (10357, 26, 16),<br/>  (10357, 60, 8),<br/>  (10358, 24, 10),<br/>  \n        (10358, 34, 10),<br/>  (10358, 36, 20),<br/>  (10359, 16, 56),<br/>  (10359, 31, \n        70),<br/>  (10359, 60, 80),<br/>  (10360, 28, 30),<br/>  (10360, 29, 35),<br/>  \n        (10360, 38, 10),<br/>  (10360, 49, 35),<br/>  (10360, 54, 28),<br/>  (10361, 39, \n        54),<br/>  (10361, 60, 55),<br/>  (10362, 25, 50),<br/>  (10362, 51, 20),<br/>  \n        (10362, 54, 24),<br/>  (10363, 31, 20),<br/>  (10363, 75, 12),<br/>  (10363, 76, \n        12),<br/>  (10364, 69, 30),<br/>  (10364, 71, 5),<br/>  (10365, 11, 24),<br/>  \n        (10366, 65, 5),<br/>  (10366, 77, 5),<br/>  (10367, 34, 36),<br/>  (10367, 54, \n        18),<br/>  (10367, 65, 15),<br/>  (10367, 77, 7),<br/>  (10368, 21, 5),<br/>  \n        (10368, 28, 13),<br/>  (10368, 57, 25),<br/>  (10368, 64, 35),<br/>  (10369, 29, \n        20),<br/>  (10369, 56, 18),<br/>  (10370, 1, 15),<br/>  (10370, 64, 30),<br/>  \n        (10370, 74, 20),<br/>  (10371, 36, 6),<br/>  (10372, 20, 12),<br/>  (10372, 38, \n        40),<br/>  (10372, 60, 70),<br/>  (10372, 72, 42),<br/>  (10373, 58, 80),<br/>  \n        (10373, 71, 50),<br/>  (10374, 31, 30),<br/>  (10374, 58, 15),<br/>  (10375, 14, \n        15),<br/>  (10375, 54, 10),<br/>  (10376, 31, 42),<br/>  (10377, 28, 20),<br/>  \n        (10377, 39, 20),<br/>  (10378, 71, 6),<br/>  (10379, 41, 8),<br/>  (10379, 63, \n        16),<br/>  (10379, 65, 20),<br/>  (10380, 30, 18),<br/>  (10380, 53, 20),<br/>  \n        (10380, 60, 6),<br/>  (10380, 70, 30),<br/>  (10381, 74, 14),<br/>  (10382, 5, \n        32),<br/>  (10382, 18, 9),<br/>  (10382, 29, 14),<br/>  (10382, 33, 60),<br/>  \n        (10382, 74, 50),<br/>  (10383, 13, 20),<br/>  (10383, 50, 15),<br/>  (10383, 56, \n        20),<br/>  (10384, 20, 28),<br/>  (10384, 60, 15),<br/>  (10385, 7, 10),<br/>  \n        (10385, 60, 20),<br/>  (10385, 68, 8),<br/>  (10386, 24, 15),<br/>  (10386, 34, \n        10),<br/>  (10387, 24, 15),<br/>  (10387, 28, 6),<br/>  (10387, 59, 12),<br/>  \n        (10387, 71, 15),<br/>  (10388, 45, 15),<br/>  (10388, 52, 20),<br/>  (10388, 53, \n        40),<br/>  (10389, 10, 16),<br/>  (10389, 55, 15),<br/>  (10389, 62, 20),<br/>  \n        (10389, 70, 30),<br/>  (10390, 31, 60),<br/>  (10390, 35, 40),<br/>  (10390, 46, \n        45),<br/>  (10390, 72, 24),<br/>  (10391, 13, 18),<br/>  (10392, 69, 50),<br/>  \n        (10393, 2, 25),<br/>  (10393, 14, 42),<br/>  (10393, 25, 7),<br/>  (10393, 26, \n        70),<br/>  (10393, 31, 32),<br/>  (10394, 13, 10),<br/>  (10394, 62, 10),<br/>  \n        (10395, 46, 28),<br/>  (10395, 53, 70),<br/>  (10395, 69, 8),<br/>  (10396, 23, \n        40),<br/>  (10396, 71, 60),<br/>  (10396, 72, 21),<br/>  (10397, 21, 10),<br/>  \n        (10397, 51, 18),<br/>  (10398, 35, 30),<br/>  (10398, 55, 120),<br/>  (10399, 68, \n        60),<br/>  (10399, 71, 30),<br/>  (10399, 76, 35),<br/>  (10399, 77, 14),<br/>  \n        (10400, 29, 21),<br/>  (10400, 35, 35),<br/>  (10400, 49, 30),<br/>  (10401, 30, \n        18),<br/>  (10401, 56, 70),<br/>  (10401, 65, 20),<br/>  (10401, 71, 60),<br/>  \n        (10402, 23, 60),<br/>  (10402, 63, 65),<br/>  (10403, 16, 21),<br/>  (10403, 48, \n        70),<br/>  (10404, 26, 30),<br/>  (10404, 42, 40),<br/>  (10404, 49, 30),<br/>  \n        (10405, 3, 50),<br/>  (10406, 1, 10),<br/>  (10406, 21, 30),<br/>  (10406, 28, \n        42),<br/>  (10406, 36, 5),<br/>  (10406, 40, 2),<br/>  (10407, 11, 30),<br/>  \n        (10407, 69, 15),<br/>  (10407, 71, 15),<br/>  (10408, 37, 10),<br/>  (10408, 54, \n        6),<br/>  (10408, 62, 35),<br/>  (10409, 14, 12),<br/>  (10409, 21, 12),<br/>  \n        (10410, 33, 49),<br/>  (10410, 59, 16),<br/>  (10411, 41, 25),<br/>  (10411, 44, \n        40),<br/>  (10411, 59, 9),<br/>  (10412, 14, 20),<br/>  (10413, 1, 24),<br/>  \n        (10413, 62, 40),<br/>  (10413, 76, 14),<br/>  (10414, 19, 18),<br/>  (10414, 33, \n        50),<br/>  (10415, 17, 2),<br/>  (10415, 33, 20),<br/>  (10416, 19, 20),<br/>  \n        (10416, 53, 10),<br/>  (10416, 57, 20),<br/>  (10417, 38, 50),<br/>  (10417, 46, \n        2),<br/>  (10417, 68, 36),<br/>  (10417, 77, 35),<br/>  (10418, 2, 60),<br/>  \n        (10418, 47, 55),<br/>  (10418, 61, 16),<br/>  (10418, 74, 15),<br/>  (10419, 60, \n        60),<br/>  (10419, 69, 20),<br/>  (10420, 9, 20),<br/>  (10420, 13, 2),<br/>  \n        (10420, 70, 8),<br/>  (10420, 73, 20),<br/>  (10421, 19, 4),<br/>  (10421, 26, \n        30),<br/>  (10421, 53, 15),<br/>  (10421, 77, 10),<br/>  (10422, 26, 2),<br/>  \n        (10423, 31, 14),<br/>  (10423, 59, 20),<br/>  (10424, 35, 60),<br/>  (10424, 38, \n        49),<br/>  (10424, 68, 30),<br/>  (10425, 55, 10),<br/>  (10425, 76, 20),<br/>  \n        (10426, 56, 5),<br/>  (10426, 64, 7),<br/>  (10427, 14, 35),<br/>  (10428, 46, \n        20),<br/>  (10429, 50, 40),<br/>  (10429, 63, 35),<br/>  (10430, 17, 45),<br/>  \n        (10430, 21, 50),<br/>  (10430, 56, 30),<br/>  (10430, 59, 70),<br/>  (10431, 17, \n        50),<br/>  (10431, 40, 50),<br/>  (10431, 47, 30),<br/>  (10432, 26, 10),<br/>  \n        (10432, 54, 40),<br/>  (10433, 56, 28),<br/>  (10434, 11, 6),<br/>  (10434, 76, \n        18),<br/>  (10435, 2, 10),<br/>  (10435, 22, 12),<br/>  (10435, 72, 10),<br/>  \n        (10436, 46, 5),<br/>  (10436, 56, 40),<br/>  (10436, 64, 30),<br/>  (10436, 75, \n        24),<br/>  (10437, 53, 15),<br/>  (10438, 19, 15),<br/>  (10438, 34, 20),<br/>  \n        (10438, 57, 15),<br/>  (10439, 12, 15),<br/>  (10439, 16, 16),<br/>  (10439, 64, \n        6),<br/>  (10439, 74, 30),<br/>  (10440, 2, 45),<br/>  (10440, 16, 49),<br/>  \n        (10440, 29, 24),<br/>  (10440, 61, 90),<br/>  (10441, 27, 50),<br/>  (10442, 11, \n        30),<br/>  (10442, 54, 80),<br/>  (10442, 66, 60),<br/>  (10443, 11, 6),<br/>  \n        (10443, 28, 12),<br/>  (10444, 17, 10),<br/>  (10444, 26, 15),<br/>  (10444, 35, \n        8),<br/>  (10444, 41, 30),<br/>  (10445, 39, 6),<br/>  (10445, 54, 15),<br/>  \n        (10446, 19, 12),<br/>  (10446, 24, 20),<br/>  (10446, 31, 3),<br/>  (10446, 52, \n        15),<br/>  (10447, 19, 40),<br/>  (10447, 65, 35),<br/>  (10447, 71, 2),<br/>  \n        (10448, 26, 6),<br/>  (10448, 40, 20),<br/>  (10449, 10, 14),<br/>  (10449, 52, \n        20),<br/>  (10449, 62, 35),<br/>  (10450, 10, 20),<br/>  (10450, 54, 6),<br/>  \n        (10451, 55, 120),<br/>  (10451, 64, 35),<br/>  (10451, 65, 28),<br/>  (10451, 77, \n        55),<br/>  (10452, 28, 15),<br/>  (10452, 44, 100),<br/>  (10453, 48, 15),<br/>  \n        (10453, 70, 25),<br/>  (10454, 16, 20),<br/>  (10454, 33, 20),<br/>  (10454, 46, \n        10),<br/>  (10455, 39, 20),<br/>  (10455, 53, 50),<br/>  (10455, 61, 25),<br/>  \n        (10455, 71, 30),<br/>  (10456, 21, 40),<br/>  (10456, 49, 21),\n        \n        \n        \n        \n        \n<br/>  (10457, 59, \n        36),<br/>  (10458, 26, 30),<br/>  (10458, 28, 30),<br/>  (10458, 43, 20),<br/>  \n        (10458, 56, 15),<br/>  (10458, 71, 50),<br/>  (10459, 7, 16),<br/>  (10459, 46, \n        20),<br/>  (10459, 72, 40),<br/>  (10460, 68, 21),<br/>  (10460, 75, 4),<br/>  \n        (10461, 21, 40),<br/>  (10461, 30, 28),<br/>  (10461, 55, 60),<br/>  (10462, 13, \n        1),<br/>  (10462, 23, 21),<br/>  (10463, 19, 21),<br/>  (10463, 42, 50),<br/>  \n        (10464, 4, 16),<br/>  (10464, 43, 3),<br/>  (10464, 56, 30),<br/>  (10464, 60, \n        20),<br/>  (10465, 24, 25),<br/>  (10465, 29, 18),<br/>  (10465, 40, 20),<br/>  \n        (10465, 45, 30),<br/>  (10465, 50, 25),<br/>  (10466, 11, 10),<br/>  (10466, 46, \n        5),<br/>  (10467, 24, 28),<br/>  (10467, 25, 12),<br/>  (10468, 30, 8),<br/>  \n        (10468, 43, 15),<br/>  (10469, 2, 40),<br/>  (10469, 16, 35),<br/>  (10469, 44, \n        2),<br/>  (10470, 18, 30),<br/>  (10470, 23, 15),<br/>  (10470, 64, 8),<br/>  \n        (10471, 7, 30),<br/>  (10471, 56, 20),<br/>  (10472, 24, 80),<br/>  (10472, 51, \n        18),<br/>  (10473, 33, 12),<br/>  (10473, 71, 12),<br/>  (10474, 14, 12),<br/>  \n        (10474, 28, 18),<br/>  (10474, 40, 21),<br/>  (10474, 75, 10),<br/>  (10475, 31, \n        35),<br/>  (10475, 66, 60),<br/>  (10475, 76, 42),<br/>  (10476, 55, 2),<br/>  \n        (10476, 70, 12),<br/>  (10477, 1, 15),<br/>  (10477, 21, 21),<br/>  (10477, 39, \n        20),<br/>  (10478, 10, 20),<br/>  (10479, 38, 30),<br/>  (10479, 53, 28),<br/>  \n        (10479, 59, 60),<br/>  (10479, 64, 30),<br/>  (10480, 47, 30),<br/>  (10480, 59, \n        12),<br/>  (10481, 49, 24),<br/>  (10481, 60, 40),<br/>  (10482, 40, 10),<br/>  \n        (10483, 34, 35),<br/>  (10483, 77, 30),<br/>  (10484, 21, 14),<br/>  (10484, 40, \n        10),<br/>  (10484, 51, 3),<br/>  (10485, 2, 20),<br/>  (10485, 3, 20),<br/>  (10485, \n        55, 30),<br/>  (10485, 70, 60),<br/>  (10486, 11, 5),<br/>  (10486, 51, 25),<br/>  \n        (10486, 74, 16),<br/>  (10487, 19, 5),<br/>  (10487, 26, 30),<br/>  (10487, 54, \n        24),<br/>  (10488, 59, 30),<br/>  (10488, 73, 20),<br/>  (10489, 11, 15),<br/>  \n        (10489, 16, 18),<br/>  (10490, 59, 60),<br/>  (10490, 68, 30),<br/>  (10490, 75, \n        36),<br/>  (10491, 44, 15),<br/>  (10491, 77, 7),<br/>  (10492, 25, 60),<br/>  \n        (10492, 42, 20),<br/>  (10493, 65, 15),<br/>  (10493, 66, 10),<br/>  (10493, 69, \n        10),<br/>  (10494, 56, 30),<br/>  (10495, 23, 10),<br/>  (10495, 41, 20),<br/>  \n        (10495, 77, 5),<br/>  (10496, 31, 20),<br/>  (10497, 56, 14),<br/>  (10497, 72, \n        25),<br/>  (10497, 77, 25),<br/>  (10498, 24, 14),<br/>  (10498, 40, 5),<br/>  \n        (10498, 42, 30),<br/>  (10499, 28, 20),<br/>  (10499, 49, 25),<br/>  (10500, 15, \n        12),<br/>  (10500, 28, 8),<br/>  (10501, 54, 20),<br/>  (10502, 45, 21),<br/>  \n        (10502, 53, 6),<br/>  (10502, 67, 30),<br/>  (10503, 14, 70),<br/>  (10503, 65, \n        20),<br/>  (10504, 2, 12),<br/>  (10504, 21, 12),<br/>  (10504, 53, 10),<br/>  \n        (10504, 61, 25),<br/>  (10505, 62, 3),<br/>  (10506, 25, 18),<br/>  (10506, 70, \n        14),<br/>  (10507, 43, 15),<br/>  (10507, 48, 15),<br/>  (10508, 13, 10),<br/>  \n        (10508, 39, 10),<br/>  (10509, 28, 3),<br/>  (10510, 29, 36),<br/>  (10510, 75, \n        36),<br/>  (10511, 4, 50),<br/>  (10511, 7, 50),<br/>  (10511, 8, 10),<br/>  (10512, \n        24, 10),<br/>  (10512, 46, 9),<br/>  (10512, 47, 6),<br/>  (10512, 60, 12),<br/>  \n        (10513, 21, 40),<br/>  (10513, 32, 50),<br/>  (10513, 61, 15),<br/>  (10514, 20, \n        39),<br/>  (10514, 28, 35),<br/>  (10514, 56, 70),<br/>  (10514, 65, 39),<br/>  \n        (10514, 75, 50),<br/>  (10515, 9, 16),<br/>  (10515, 16, 50),<br/>  (10515, 27, \n        120),<br/>  (10515, 33, 16),<br/>  (10515, 60, 84),<br/>  (10516, 18, 25),<br/>  \n        (10516, 41, 80),<br/>  (10516, 42, 20),<br/>  (10517, 52, 6),<br/>  (10517, 59, \n        4),<br/>  (10517, 70, 6),<br/>  (10518, 24, 5),<br/>  (10518, 38, 15),<br/>  (10518, \n        44, 9),<br/>  (10519, 10, 16),<br/>  (10519, 56, 40),<br/>  (10519, 60, 10),<br/>  \n        (10520, 24, 8),<br/>  (10520, 53, 5),<br/>  (10521, 35, 3),<br/>  (10521, 41, \n        10),<br/>  (10521, 68, 6),<br/>  (10522, 1, 40),<br/>  (10522, 8, 24),<br/>  (10522, \n        30, 20),<br/>  (10522, 40, 25),<br/>  (10523, 17, 25),<br/>  (10523, 20, 15),<br/>  \n        (10523, 37, 18),<br/>  (10523, 41, 6),<br/>  (10524, 10, 2),<br/>  (10524, 30, \n        10),<br/>  (10524, 43, 60),<br/>  (10524, 54, 15),<br/>  (10525, 36, 30),<br/>  \n        (10525, 40, 15),<br/>  (10526, 1, 8),<br/>  (10526, 13, 10),<br/>  (10526, 56, \n        30),<br/>  (10527, 4, 50),<br/>  (10527, 36, 30),<br/>  (10528, 11, 3),<br/>  \n        (10528, 33, 8),<br/>  (10528, 72, 9),<br/>  (10529, 55, 14),<br/>  (10529, 68, \n        20),<br/>  (10529, 69, 10),<br/>  (10530, 17, 40),<br/>  (10530, 43, 25),<br/>  \n        (10530, 61, 20),<br/>  (10530, 76, 50),<br/>  (10531, 59, 2),<br/>  (10532, 30, \n        15),<br/>  (10532, 66, 24),<br/>  (10533, 4, 50),<br/>  (10533, 72, 24),<br/>  \n        (10533, 73, 24),<br/>  (10534, 30, 10),<br/>  (10534, 40, 10),<br/>  (10534, 54, \n        10),<br/>  (10535, 11, 50),<br/>  (10535, 40, 10),<br/>  (10535, 57, 5),<br/>  \n        (10535, 59, 15),<br/>  (10536, 12, 15),<br/>  (10536, 31, 20),<br/>  (10536, 33, \n        30),<br/>  (10536, 60, 35),<br/>  (10537, 31, 30),<br/>  (10537, 51, 6),<br/>  \n        (10537, 58, 20),<br/>  (10537, 72, 21),<br/>  (10537, 73, 9),<br/>  (10538, 70, \n        7),<br/>  (10538, 72, 1),<br/>  (10539, 13, 8),<br/>  (10539, 21, 15),<br/>  (10539, \n        33, 15),<br/>  (10539, 49, 6),<br/>  (10540, 3, 60),<br/>  (10540, 26, 40),<br/>  \n        (10540, 38, 30),<br/>  (10540, 68, 35),<br/>  (10541, 24, 35),<br/>  (10541, 38, \n        4),<br/>  (10541, 65, 36),<br/>  (10541, 71, 9),<br/>  (10542, 11, 15),<br/>  \n        (10542, 54, 24),<br/>  (10543, 12, 30),<br/>  (10543, 23, 70),<br/>  (10544, 28, \n        7),<br/>  (10544, 67, 7),<br/>  (10545, 11, 10),<br/>  (10546, 7, 10),<br/>  (10546, \n        35, 30),<br/>  (10546, 62, 40),<br/>  (10547, 32, 24),<br/>  (10547, 36, 60),<br/>  \n        (10548, 34, 10),<br/>  (10548, 41, 14),<br/>  (10549, 31, 55),<br/>  (10549, 45, \n        100),<br/>  (10549, 51, 48),<br/>  (10550, 17, 8),<br/>  (10550, 19, 10),<br/>  \n        (10550, 21, 6),<br/>  (10550, 61, 10),<br/>  (10551, 16, 40),<br/>  (10551, 35, \n        20),<br/>  (10551, 44, 40),<br/>  (10552, 69, 18),<br/>  (10552, 75, 30),<br/>  \n        (10553, 11, 15),<br/>  (10553, 16, 14),<br/>  (10553, 22, 24),<br/>  (10553, 31, \n        30),<br/>  (10553, 35, 6),<br/>  (10554, 16, 30),<br/>  (10554, 23, 20),<br/>  \n        (10554, 62, 20),<br/>  (10554, 77, 10),<br/>  (10555, 14, 30),<br/>  (10555, 19, \n        35),<br/>  (10555, 24, 18),<br/>  (10555, 51, 20),<br/>  (10555, 56, 40),<br/>  \n        (10556, 72, 24),<br/>  (10557, 64, 30),<br/>  (10557, 75, 20),<br/>  (10558, 47, \n        25),<br/>  (10558, 51, 20),<br/>  (10558, 52, 30),<br/>  (10558, 53, 18),<br/>  \n        (10558, 73, 3),<br/>  (10559, 41, 12),<br/>  (10559, 55, 18),<br/>  (10560, 30, \n        20),<br/>  (10560, 62, 15),<br/>  (10561, 44, 10),<br/>  (10561, 51, 50),<br/>  \n        (10562, 33, 20),<br/>  (10562, 62, 10),<br/>  (10563, 36, 25),<br/>  (10563, 52, \n        70),<br/>  (10564, 17, 16),<br/>  (10564, 31, 6),<br/>  (10564, 55, 25),<br/>  \n        (10565, 24, 25),<br/>  (10565, 64, 18),<br/>  (10566, 11, 35),<br/>  (10566, 18, \n        18),<br/>  (10566, 76, 10),<br/>  (10567, 31, 60),<br/>  (10567, 51, 3),<br/>  \n        (10567, 59, 40),<br/>  (10568, 10, 5),<br/>  (10569, 31, 35),<br/>  (10569, 76, \n        30),<br/>  (10570, 11, 15),<br/>  (10570, 56, 60),<br/>  (10571, 14, 11),<br/>  \n        (10571, 42, 28),<br/>  (10572, 16, 12),<br/>  (10572, 32, 10),<br/>  (10572, 40, \n        50),<br/>  (10572, 75, 15),<br/>  (10573, 17, 18),<br/>  (10573, 34, 40),<br/>  \n        (10573, 53, 25),<br/>  (10574, 33, 14),<br/>  (10574, 40, 2),<br/>  (10574, 62, \n        10),<br/>  (10574, 64, 6),<br/>  (10575, 59, 12),<br/>  (10575, 63, 6),<br/>  \n        (10575, 72, 30),<br/>  (10575, 76, 10),<br/>  (10576, 1, 10),<br/>  (10576, 31, \n        20),<br/>  (10576, 44, 21),<br/>  (10577, 39, 10),<br/>  (10577, 75, 20),<br/>  \n        (10577, 77, 18),<br/>  (10578, 35, 20),<br/>  (10578, 57, 6),<br/>  (10579, 15, \n        10),<br/>  (10579, 75, 21),<br/>  (10580, 14, 15),<br/>  (10580, 41, 9),<br/>  \n        (10580, 65, 30),<br/>  (10581, 75, 50),<br/>  (10582, 57, 4),<br/>  (10582, 76, \n        14),<br/>  (10583, 29, 10),<br/>  (10583, 60, 24),<br/>  (10583, 69, 10),<br/>  \n        (10584, 31, 50),<br/>  (10585, 47, 15),<br/>  (10586, 52, 4),<br/>  (10587, 26, \n        6),<br/>  (10587, 35, 20),<br/>  (10587, 77, 20),<br/>  (10588, 18, 40),<br/>  \n        (10588, 42, 100),<br/>  (10589, 35, 4),<br/>  (10590, 1, 20),<br/>  (10590, 77, \n        60),<br/>  (10591, 3, 14),<br/>  (10591, 7, 10),<br/>  (10591, 54, 50),<br/>  \n        (10592, 15, 25),<br/>  (10592, 26, 5),<br/>  (10593, 20, 21),<br/>  (10593, 69, \n        20),<br/>  (10593, 76, 4),<br/>  (10594, 52, 24),<br/>  (10594, 58, 30),<br/>  \n        (10595, 35, 30),<br/>  (10595, 61, 120),<br/>  (10595, 69, 65),<br/>  (10596, 56, \n        5),<br/>  (10596, 63, 24),<br/>  (10596, 75, 30),<br/>  (10597, 24, 35),<br/>  \n        (10597, 57, 20),<br/>  (10597, 65, 12),<br/>  (10598, 27, 50),<br/>  (10598, 71, \n        9),<br/>  (10599, 62, 10),<br/>  (10600, 54, 4),<br/>  (10600, 73, 30),<br/>  \n        (10601, 13, 60),<br/>  (10601, 59, 35),<br/>  (10602, 77, 5),<br/>  (10603, 22, \n        48),<br/>  (10603, 49, 25),<br/>  (10604, 48, 6),<br/>  (10604, 76, 10),<br/>  \n        (10605, 16, 30),<br/>  (10605, 59, 20),<br/>  (10605, 60, 70),<br/>  (10605, 71, \n        15),<br/>  (10606, 4, 20),<br/>  (10606, 55, 20),<br/>  (10606, 62, 10),<br/>  \n        (10607, 7, 45),<br/>  (10607, 17, 100),<br/>  (10607, 33, 14),<br/>  (10607, 40, \n        42),<br/>  (10607, 72, 12),<br/>  (10608, 56, 28),<br/>  (10609, 1, 3),<br/>  \n        (10609, 10, 10),<br/>  (10609, 21, 6),<br/>  (10610, 36, 21),<br/>  (10611, 1, \n        6),<br/>  (10611, 2, 10),<br/>  (10611, 60, 15),<br/>  (10612, 10, 70),<br/>  \n        (10612, 36, 55),<br/>  (10612, 49, 18),<br/>  (10612, 60, 40),<br/>  (10612, 76, \n        80),<br/>  (10613, 13, 8),<br/>  (10613, 75, 40),<br/>  (10614, 11, 14),<br/>  \n        (10614, 21, 8),<br/>  (10614, 39, 5),<br/>  (10615, 55, 5),<br/>  (10616, 38, \n        15),<br/>  (10616, 56, 14),<br/>  (10616, 70, 15),<br/>  (10616, 71, 15),<br/>  \n        (10617, 59, 30),<br/>  (10618, 6, 70),<br/>  (10618, 56, 20),<br/>  (10618, 68, \n        15),<br/>  (10619, 21, 42),<br/>  (10619, 22, 40),<br/>  (10620, 24, 5),<br/>  \n        (10620, 52, 5),<br/>  (10621, 19, 5),<br/>  (10621, 23, 10),<br/>  (10621, 70, \n        20),<br/>  (10621, 71, 15),<br/>  (10622, 2, 20),<br/>  (10622, 68, 18),<br/>  \n        (10623, 14, 21),<br/>  (10623, 19, 15),<br/>  (10623, 21, 25),<br/>  (10623, 24, \n        3),<br/>  (10623, 35, 30),<br/>  (10624, 28, 10),<br/>  (10624, 29, 6),<br/>  \n        (10624, 44, 10),<br/>  (10625, 14, 3),<br/>  (10625, 42, 5),<br/>  (10625, 60, \n        10),<br/>  (10626, 53, 12),<br/>  (10626, 60, 20),<br/>  (10626, 71, 20),<br/>  \n        (10627, 62, 15),<br/>  (10627, 73, 35),<br/>  (10628, 1, 25),<br/>  (10629, 29, \n        20),<br/>  (10629, 64, 9),<br/>  (10630, 55, 12),<br/>  (10630, 76, 35),<br/>  \n        (10631, 75, 8),<br/>  (10632, 2, 30),<br/>  (10632, 33, 20),<br/>  (10633, 12, \n        36),<br/>  (10633, 13, 13),<br/>  (10633, 26, 35),<br/>  (10633, 62, 80),<br/>  \n        (10634, 7, 35),<br/>  (10634, 18, 50),<br/>  (10634, 51, 15),<br/>  (10634, 75, \n        2),<br/>  (10635, 4, 10),<br/>  (10635, 5, 15),<br/>  (10635, 22, 40),<br/>  (10636, \n        4, 25),<br/>  (10636, 58, 6),<br/>  (10637, 11, 10),<br/>  (10637, 50, 25),<br/>  \n        (10637, 56, 60),<br/>  (10638, 45, 20),<br/>  (10638, 65, 21),<br/>  (10638, 72, \n        60),<br/>  (10639, 18, 8),<br/>  (10640, 69, 20),<br/>  (10640, 70, 15),<br/>  \n        (10641, 2, 50),<br/>  (10641, 40, 60),<br/>  (10642, 21, 30),<br/>  (10642, 61, \n        20),<br/>  (10643, 28, 15),<br/>  (10643, 39, 21),<br/>  (10643, 46, 2),<br/>  \n        (10644, 18, 4),<br/>  (10644, 43, 20),<br/>  (10644, 46, 21),<br/>  (10645, 18, \n        20),<br/>  (10645, 36, 15),<br/>  (10646, 1, 15),<br/>  (10646, 10, 18),<br/>  \n        (10646, 71, 30),<br/>  (10646, 77, 35),<br/>  (10647, 19, 30),<br/>  (10647, 39, \n        20),<br/>  (10648, 22, 15),<br/>  (10648, 24, 15),<br/>  (10649, 28, 20),<br/>  \n        (10649, 72, 15),<br/>  (10650, 30, 30),<br/>  (10650, 53, 25),<br/>  (10650, 54, \n        30),<br/>  (10651, 19, 12),<br/>  (10651, 22, 20),<br/>  (10652, 30, 2),<br/>  \n        (10652, 42, 20),<br/>  (10653, 16, 30),<br/>  (10653, 60, 20),<br/>  (10654, 4, \n        12),<br/>  (10654, 39, 20),<br/>  (10654, 54, 6),<br/>  (10655, 41, 20),<br/>  \n        (10656, 14, 3),<br/>  (10656, 44, 28),<br/>  (10656, 47, 6),<br/>  (10657, 15, \n        50),<br/>  (10657, 41, 24),<br/>  (10657, 46, 45),<br/>  (10657, 47, 10),<br/>  \n        (10657, 56, 45),<br/>  (10657, 60, 30),<br/>  (10658, 21, 60),<br/>  (10658, 40, \n        70),<br/>  (10658, 60, 55),<br/>  (10658, 77, 70),<br/>  (10659, 31, 20),<br/>  \n        (10659, 40, 24),<br/>  (10659, 70, 40),<br/>  (10660, 20, 21),<br/>  (10661, 39, \n        3),<br/>  (10661, 58, 49),<br/>  (10662, 68, 10),<br/>  (10663, 40, 30),<br/>  \n        (10663, 42, 30),<br/>  (10663, 51, 20),<br/>  (10664, 10, 24),<br/>  (10664, 56, \n        12),<br/>  (10664, 65, 15),<br/>  (10665, 51, 20),<br/>  (10665, 59, 1),<br/>  \n        (10665, 76, 10),<br/>  (10666, 29, 36),<br/>  (10666, 65, 10),<br/>  (10667, 69, \n        45),<br/>  (10667, 71, 14),<br/>  (10668, 31, 8),<br/>  (10668, 55, 4),<br/>  \n        (10668, 64, 15),<br/>  (10669, 36, 30),<br/>  (10670, 23, 32),<br/>  (10670, 46, \n        60),<br/>  (10670, 67, 25),<br/>  (10670, 73, 50),<br/>  (10670, 75, 25),<br/>  \n        (10671, 16, 10),<br/>  (10671, 62, 10),<br/>  (10671, 65, 12),<br/>  (10672, 38, \n        15),<br/>  (10672, 71, 12),<br/>  (10673, 16, 3),<br/>  (10673, 42, 6),<br/>  \n        (10673, 43, 6),<br/>  (10674, 23, 5),<br/>  (10675, 14, 30),<br/>  (10675, 53, \n        10),<br/>  (10675, 58, 30),<br/>  (10676, 10, 2),<br/>  (10676, 19, 7),<br/>  \n        (10676, 44, 21),<br/>  (10677, 26, 30),<br/>  (10677, 33, 8),<br/>  (10678, 12, \n        100),<br/>  (10678, 33, 30),<br/>  (10678, 41, 120),<br/>  (10678, 54, 30),<br/>  \n        (10679, 59, 12),<br/>  (10680, 16, 50),<br/>  (10680, 31, 20),<br/>  (10680, 42, \n        40),<br/>  (10681, 19, 30),<br/>  (10681, 21, 12),<br/>  (10681, 64, 28),<br/>  \n        (10682, 33, 30),<br/>  (10682, 66, 4),<br/>  (10682, 75, 30),<br/>  (10683, 52, \n        9),<br/>  (10684, 40, 20),<br/>  (10684, 47, 40),<br/>  (10684, 60, 30),<br/>  \n        (10685, 10, 20),<br/>  (10685, 41, 4),<br/>  (10685, 47, 15),<br/>  (10686, 17, \n        30),<br/>  (10686, 26, 15),<br/>  (10687, 9, 50),<br/>  (10687, 29, 10),<br/>  \n        (10687, 36, 6),<br/>  (10688, 10, 18),<br/>  (10688, 28, 60),<br/>  (10688, 34, \n        14),<br/>  (10689, 1, 35),<br/>  (10690, 56, 20),<br/>  (10690, 77, 30),<br/>  \n        (10691, 1, 30),<br/>  (10691, 29, 40),<br/>  (10691, 43, 40),<br/>  (10691, 44, \n        24),<br/>  (10691, 62, 48),<br/>  (10692, 63, 20),<br/>  (10693, 9, 6),<br/>  \n        (10693, 54, 60),<br/>  (10693, 69, 30),<br/>  (10693, 73, 15),<br/>  (10694, 7, \n        90),<br/>  (10694, 59, 25),<br/>  (10694, 70, 50),<br/>  (10695, 8, 10),<br/>  \n        (10695, 12, 4),<br/>  (10695, 24, 20),<br/>  (10696, 17, 20),<br/>  (10696, 46, \n        18),<br/>  (10697, 19, 7),<br/>  (10697, 35, 9),<br/>  (10697, 58, 30),<br/>  \n        (10697, 70, 30),<br/>  (10698, 11, 15),<br/>  (10698, 17, 8),<br/>  (10698, 29, \n        12),<br/>  (10698, 65, 65),<br/>  (10698, 70, 8),<br/>  (10699, 47, 12),<br/>  \n        (10700, 1, 5),<br/>  (10700, 34, 12),<br/>  (10700, 68, 40),<br/>  (10700, 71, \n        60),<br/>  (10701, 59, 42),<br/>  (10701, 71, 20),<br/>  (10701, 76, 35),<br/>  \n        (10702, 3, 6),<br/>  (10702, 76, 15),<br/>  (10703, 2, 5),<br/>  (10703, 59, 35),<br/>  \n        (10703, 73, 35),<br/>  (10704, 4, 6),<br/>  (10704, 24, 35),<br/>  (10704, 48, \n        24),<br/>  (10705, 31, 20),<br/>  (10705, 32, 4),<br/>  (10706, 16, 20),<br/>  \n        (10706, 43, 24),<br/>  (10706, 59, 8),<br/>  (10707, 55, 21),<br/>  (10707, 57, \n        40),<br/>  (10707, 70, 28),<br/>  (10708, 5, 4),<br/>  (10708, 36, 5),<br/>  (10709, \n        8, 40),<br/>  (10709, 51, 28),<br/>  (10709, 60, 10),<br/>  (10710, 19, 5),<br/>  \n        (10710, 47, 5),<br/>  (10711, 19, 12),<br/>  (10711, 41, 42),<br/>  (10711, 53, \n        120),<br/>  (10712, 53, 3),<br/>  (10712, 56, 30),<br/>  (10713, 10, 18),<br/>  \n        (10713, 26, 30),<br/>  (10713, 45, 110),<br/>  (10713, 46, 24),<br/>  (10714, 2, \n        30),<br/>  (10714, 17, 27),<br/>  (10714, 47, 50),<br/>  (10714, 56, 18),<br/>  \n        (10714, 58, 12),<br/>  (10715, 10, 21),<br/>  (10715, 71, 30),<br/>  (10716, 21, \n        5),<br/>  (10716, 51, 7),<br/>  (10716, 61, 10),<br/>  (10717, 21, 32),<br/>  \n        (10717, 54, 15),<br/>  (10717, 69, 25),<br/>  (10718, 12, 36),<br/>  (10718, 16, \n        20),<br/>  (10718, 36, 40),<br/>  (10718, 62, 20),<br/>  (10719, 18, 12),<br/>  \n        (10719, 30, 3),<br/>  (10719, 54, 40),<br/>  (10720, 35, 21),<br/>  (10720, 71, \n        8),<br/>  (10721, 44, 50),<br/>  (10722, 2, 3),<br/>  (10722, 31, 50),<br/>  (10722, \n        68, 45),<br/>  (10722, 75, 42),<br/>  (10723, 26, 15),<br/>  (10724, 10, 16),<br/>  \n        (10724, 61, 5),<br/>  (10725, 41, 12),<br/>  (10725, 52, 4),<br/>  (10725, 55, \n        6),<br/>  (10726, 4, 25),<br/>  (10726, 11, 5),<br/>  (10727, 17, 20),<br/>  (10727, \n        56, 10),<br/>  (10727, 59, 10),<br/>  (10728, 30, 15),<br/>  (10728, 40, 6),<br/>  \n        (10728, 55, 12),<br/>  (10728, 60, 15),<br/>  (10729, 1, 50),<br/>  (10729, 21, \n        30),<br/>  (10729, 50, 40),<br/>  (10730, 16, 15),<br/>  (10730, 31, 3),<br/>  \n        (10730, 65, 10),<br/>  (10731, 21, 40),<br/>  (10731, 51, 30),<br/>  (10732, 76, \n        20),<br/>  (10733, 14, 16),<br/>  (10733, 28, 20),<br/>  (10733, 52, 25),<br/>  \n        (10734, 6, 30),<br/>  (10734, 30, 15),<br/>  (10734, 76, 20),<br/>  (10735, 61, \n        20),<br/>  (10735, 77, 2),<br/>  (10736, 65, 40),<br/>  (10736, 75, 20),<br/>  \n        (10737, 13, 4),<br/>  (10737, 41, 12),<br/>  (10738, 16, 3),<br/>  (10739, 36, \n        6),<br/>  (10739, 52, 18),<br/>  (10740, 28, 5),<br/>  (10740, 35, 35),<br/>  \n        (10740, 45, 40),<br/>  (10740, 56, 14),<br/>  (10741, 2, 15),<br/>  (10742, 3, \n        20),<br/>  (10742, 60, 50),<br/>  (10742, 72, 35),<br/>  (10743, 46, 28),<br/>  \n        (10744, 40, 50),<br/>  (10745, 18, 24),<br/>  (10745, 44, 16),<br/>  (10745, 59, \n        45),<br/>  (10745, 72, 7),<br/>  (10746, 13, 6),<br/>  (10746, 42, 28),<br/>  \n        (10746, 62, 9),<br/>  (10746, 69, 40),<br/>  (10747, 31, 8),<br/>  (10747, 41, \n        35),<br/>  (10747, 63, 9),<br/>  (10747, 69, 30),<br/>  (10748, 23, 44),<br/>  \n        (10748, 40, 40),<br/>  (10748, 56, 28),<br/>  (10749, 56, 15),<br/>  (10749, 59, \n        6),<br/>  (10749, 76, 10),<br/>  (10750, 14, 5),<br/>  (10750, 45, 40),<br/>  \n        (10750, 59, 25),<br/>  (10751, 26, 12),<br/>  (10751, 30, 30),<br/>  (10751, 50, \n        20),<br/>  (10751, 73, 15),<br/>  (10752, 1, 8),<br/>  (10752, 69, 3),<br/>  (10753, \n        45, 4),<br/>  (10753, 74, 5),<br/>  (10754, 40, 3),<br/>  (10755, 47, 30),<br/>  \n        (10755, 56, 30),<br/>  (10755, 57, 14),<br/>  (10755, 69, 25),<br/>  (10756, 18, \n        21),<br/>  (10756, 36, 20),<br/>  (10756, 68, 6),<br/>  (10756, 69, 20),<br/>  \n        (10757, 34, 30),<br/>  (10757, 59, 7),<br/>  (10757, 62, 30),<br/>  (10757, 64, \n        24),<br/>  (10758, 26, 20),<br/>  (10758, 52, 60),<br/>  (10758, 70, 40),<br/>  \n        (10759, 32, 10),<br/>  (10760, 25, 12),<br/>  (10760, 27, 40),<br/>  (10760, 43, \n        30),<br/>  (10761, 25, 35),<br/>  (10761, 75, 18),<br/>  (10762, 39, 16),<br/>  \n        (10762, 47, 30),<br/>  (10762, 51, 28),<br/>  (10762, 56, 60),<br/>  (10763, 21, \n        40),<br/>  (10763, 22, 6),<br/>  (10763, 24, 20),<br/>  (10764, 3, 20),<br/>  \n        (10764, 39, 130),<br/>  (10765, 65, 80),<br/>  (10766, 2, 40),<br/>  (10766, 7, \n        35),<br/>  (10766, 68, 40),<br/>  (10767, 42, 2),<br/>  (10768, 22, 4),<br/>  \n        (10768, 31, 50),<br/>  (10768, 60, 15),<br/>  (10768, 71, 12),<br/>  (10769, 41, \n        30),<br/>  (10769, 52, 15),<br/>  (10769, 61, 20),<br/>  (10769, 62, 15),<br/>  \n        (10770, 11, 15),<br/>  (10771, 71, 16),<br/>  (10772, 29, 18),<br/>  (10772, 59, \n        25),<br/>  (10773, 17, 33),<br/>  (10773, 31, 70),<br/>  (10773, 75, 7),<br/>  \n        (10774, 31, 2),<br/>  (10774, 66, 50),<br/>  (10775, 10, 6),<br/>  (10775, 67, \n        3),<br/>  (10776, 31, 16),<br/>  (10776, 42, 12),<br/>  (10776, 45, 27),<br/>  \n        (10776, 51, 120),<br/>  (10777, 42, 20),<br/>  (10778, 41, 10),<br/>  (10779, 16, \n        20),<br/>  (10779, 62, 20),<br/>  (10780, 70, 35),<br/>  (10780, 77, 15),<br/>  \n        (10781, 54, 3),<br/>  (10781, 56, 20),<br/>  (10781, 74, 35),<br/>  (10782, 31, \n        1),<br/>  (10783, 31, 10),<br/>  (10783, 38, 5),<br/>  (10784, 36, 30),<br/>  \n        (10784, 39, 2),<br/>  (10784, 72, 30),<br/>  (10785, 10, 10),<br/>  (10785, 75, \n        10),<br/>  (10786, 8, 30),<br/>  (10786, 30, 15),<br/>  (10786, 75, 42),<br/>  \n        (10787, 2, 15),<br/>  (10787, 29, 20),<br/>  (10788, 19, 50),<br/>  (10788, 75, \n        40),<br/>  (10789, 18, 30),<br/>  (10789, 35, 15),<br/>  (10789, 63, 30),<br/>  \n        (10789, 68, 18),<br/>  (10790, 7, 3),<br/>  (10790, 56, 20),<br/>  (10791, 29, \n        14),<br/>  (10791, 41, 20),<br/>  (10792, 2, 10),<br/>  (10792, 54, 3),<br/>  \n        (10792, 68, 15),<br/>  (10793, 41, 14),<br/>  (10793, 52, 8),<br/>  (10794, 14, \n        15),<br/>  (10794, 54, 6),<br/>  (10795, 16, 65),<br/>  (10795, 17, 35),<br/>  \n        (10796, 26, 21),<br/>  (10796, 44, 10),<br/>  (10796, 64, 35),<br/>  (10796, 69, \n        24),<br/>  (10797, 11, 20),<br/>  (10798, 62, 2),<br/>  (10798, 72, 10),<br/>  \n        (10799, 13, 20),<br/>  (10799, 24, 20),<br/>  (10799, 59, 25),<br/>  (10800, 11, \n        50),<br/>  (10800, 51, 10),<br/>  (10800, 54, 7),<br/>  (10801, 17, 40),<br/>  \n        (10801, 29, 20),<br/>  (10802, 30, 25),<br/>  (10802, 51, 30),<br/>  (10802, 55, \n        60),<br/>  (10802, 62, 5),<br/>  (10803, 19, 24),<br/>  (10803, 25, 15),<br/>  \n        (10803, 59, 15),<br/>  (10804, 10, 36),<br/>  (10804, 28, 24),<br/>  (10804, 49, \n        4),<br/>  (10805, 34, 10),<br/>  (10805, 38, 10),<br/>  (10806, 2, 20),<br/>  \n        (10806, 65, 2),<br/>  (10806, 74, 15),<br/>  (10807, 40, 1),<br/>  (10808, 56, \n        20),<br/>  (10808, 76, 50),<br/>  (10809, 52, 20),<br/>  (10810, 13, 7),<br/>  \n        (10810, 25, 5),<br/>  (10810, 70, 5),<br/>  (10811, 19, 15),<br/>  (10811, 23, \n        18),<br/>  (10811, 40, 30),<br/>  (10812, 31, 16),<br/>  (10812, 72, 40),<br/>  \n        (10812, 77, 20),<br/>  (10813, 2, 12),<br/>  (10813, 46, 35),<br/>  (10814, 41, \n        20),<br/>  (10814, 43, 20),<br/>  (10814, 48, 8),<br/>  (10814, 61, 30),<br/>  \n        (10815, 33, 16),<br/>  (10816, 38, 30),<br/>  (10816, 62, 20),<br/>  (10817, 26, \n        40),<br/>  (10817, 38, 30),<br/>  (10817, 40, 60),<br/>  (10817, 62, 25),<br/>  \n        (10818, 32, 20),<br/>  (10818, 41, 20),<br/>  (10819, 43, 7),<br/>  (10819, 75, \n        20),<br/>  (10820, 56, 30),<br/>  (10821, 35, 20),<br/>  (10821, 51, 6),<br/>  \n        (10822, 62, 3),<br/>  (10822, 70, 6),<br/>  (10823, 11, 20),<br/>  (10823, 57, \n        15),<br/>  (10823, 59, 40),<br/>  (10823, 77, 15),<br/>  (10824, 41, 12),<br/>  \n        (10824, 70, 9),<br/>  (10825, 26, 12),<br/>  (10825, 53, 20),<br/>  (10826, 31, \n        35),<br/>  (10826, 57, 15),<br/>  (10827, 10, 15),<br/>  (10827, 39, 21),<br/>  \n        (10828, 20, 5),<br/>  (10828, 38, 2),<br/>  (10829, 2, 10),<br/>  (10829, 8, 20),<br/>  \n        (10829, 13, 10),<br/>  (10829, 60, 21),<br/>  (10830, 6, 6),<br/>  (10830, 39, \n        28),<br/>  (10830, 60, 30),<br/>  (10830, 68, 24),<br/>  (10831, 19, 2),<br/>  \n        (10831, 35, 8),<br/>  (10831, 38, 8),<br/>  (10831, 43, 9),<br/>  (10832, 13, 3),<br/>  \n        (10832, 25, 10),<br/>  (10832, 44, 16),<br/>  (10832, 64, 3),<br/>  (10833, 7, \n        20),<br/>  (10833, 31, 9),<br/>  (10833, 53, 9),<br/>  (10834, 29, 8),<br/>  (10834, \n        30, 20),<br/>  (10835, 59, 15),<br/>  (10835, 77, 2),<br/>  (10836, 22, 52),<br/>  \n        (10836, 35, 6),<br/>  (10836, 57, 24),<br/>  (10836, 60, 60),<br/>  (10836, 64, \n        30),<br/>  (10837, 13, 6),<br/>  (10837, 40, 25),<br/>  (10837, 47, 40),<br/>  \n        (10837, 76, 21),<br/>  (10838, 1, 4),<br/>  (10838, 18, 25),<br/>  (10838, 36, \n        50),<br/>  (10839, 58, 30),<br/>  (10839, 72, 15),<br/>  (10840, 25, 6),<br/>  \n        (10840, 39, 10),<br/>  (10841, 10, 16),<br/>  (10841, 56, 30),<br/>  (10841, 59, \n        50),<br/>  (10841, 77, 15),<br/>  (10842, 11, 15),<br/>  (10842, 43, 5),<br/>  \n        (10842, 68, 20),<br/>  (10842, 70, 12),<br/>  (10843, 51, 4),<br/>  (10844, 22, \n        35),<br/>  (10845, 23, 70),<br/>  (10845, 35, 25),<br/>  (10845, 42, 42),<br/>  \n        (10845, 58, 60),<br/>  (10845, 64, 48),<br/>  (10846, 4, 21),<br/>  (10846, 70, \n        30),<br/>  (10846, 74, 20),<br/>  (10847, 1, 80),<br/>  (10847, 19, 12),<br/>  \n        (10847, 37, 60),<br/>  (10847, 45, 36),<br/>  (10847, 60, 45),<br/>  (10847, 71, \n        55),<br/>  (10848, 5, 30),<br/>  (10848, 9, 3),<br/>  (10849, 3, 49),<br/>  (10849, \n        26, 18),<br/>  (10850, 25, 20),<br/>  (10850, 33, 4),<br/>  (10850, 70, 30),<br/>  \n        (10851, 2, 5),<br/>  (10851, 25, 10),<br/>  (10851, 57, 10),<br/>  (10851, 59, \n        42),<br/>  (10852, 2, 15),<br/>  (10852, 17, 6),<br/>  (10852, 62, 50),<br/>  \n        (10853, 18, 10),<br/>  (10854, 10, 100),<br/>  (10854, 13, 65),<br/>  (10855, 16, \n        50),<br/>  (10855, 31, 14),<br/>  (10855, 56, 24),<br/>  (10855, 65, 15),<br/>  \n        (10856, 2, 20),<br/>  (10856, 42, 20),<br/>  (10857, 3, 30),<br/>  (10857, 26, \n        35),<br/>  (10857, 29, 10),<br/>  (10858, 7, 5),<br/>  (10858, 27, 10),<br/>  \n        (10858, 70, 4),<br/>  (10859, 24, 40),<br/>  (10859, 54, 35),<br/>  (10859, 64, \n        30),<br/>  (10860, 51, 3),<br/>  (10860, 76, 20),<br/>  (10861, 17, 42),<br/>  \n        (10861, 18, 20),<br/>  (10861, 21, 40),<br/>  (10861, 33, 35),<br/>  (10861, 62, \n        3),<br/>  (10862, 11, 25),<br/>  (10862, 52, 8),<br/>  (10863, 1, 20),<br/>  (10863, \n        58, 12),<br/>  (10864, 35, 4),<br/>  (10864, 67, 15),<br/>  (10865, 38, 60),<br/>  \n        (10865, 39, 80),<br/>  (10866, 2, 21),<br/>  (10866, 24, 6),<br/>  (10866, 30, \n        40),<br/>  (10867, 53, 3),<br/>  (10868, 26, 20),<br/>  (10868, 35, 30),<br/>  \n        (10868, 49, 42),<br/>  (10869, 1, 40),<br/>  (10869, 11, 10),<br/>  (10869, 23, \n        50),<br/>  (10869, 68, 20),<br/>  (10870, 35, 3),<br/>  (10870, 51, 2),<br/>  \n        (10871, 6, 50),<br/>  (10871, 16, 12),<br/>  (10871, 17, 16),<br/>  (10872, 55, \n        10),<br/>  (10872, 62, 20),<br/>  (10872, 64, 15),<br/>  (10872, 65, 21),<br/>  \n        (10873, 21, 20),<br/>  (10873, 28, 3),<br/>  (10874, 10, 10),<br/>  (10875, 19, \n        25),<br/>  (10875, 47, 21),<br/>  (10875, 49, 15),<br/>  (10876, 46, 21),<br/>  \n        (10876, 64, 20),<br/>  (10877, 16, 30),<br/>  (10877, 18, 25),<br/>  (10878, 20, \n        20),<br/>  (10879, 40, 12),<br/>  (10879, 65, 10),<br/>  (10879, 76, 10),<br/>  \n        (10880, 23, 30),<br/>  (10880, 61, 30),<br/>  (10880, 70, 50),<br/>  (10881, 73, \n        10),<br/>  (10882, 42, 25),<br/>  (10882, 49, 20),<br/>  (10882, 54, 32),<br/>  \n        (10883, 24, 8),<br/>  (10884, 21, 40),<br/>  (10884, 56, 21),<br/>  (10884, 65, \n        12),<br/>  (10885, 2, 20),<br/>  (10885, 24, 12),<br/>  (10885, 70, 30),<br/>  \n        (10885, 77, 25),<br/>  (10886, 10, 70),<br/>  (10886, 31, 35),<br/>  (10886, 77, \n        40),<br/>  (10887, 25, 5),<br/>  (10888, 2, 20),<br/>  (10888, 68, 18),<br/>  \n        (10889, 11, 40),<br/>  (10889, 38, 40),<br/>  (10890, 17, 15),<br/>  (10890, 34, \n        10),<br/>  (10890, 41, 14),<br/>  (10891, 30, 15),<br/>  (10892, 59, 40),<br/>  \n        (10893, 8, 30),<br/>  (10893, 24, 10),<br/>  (10893, 29, 24),<br/>  (10893, 30, \n        35),<br/>  (10893, 36, 20),<br/>  (10894, 13, 28),<br/>  (10894, 69, 50),<br/>  \n        (10894, 75, 120),<br/>  (10895, 24, 110),<br/>  (10895, 39, 45),<br/>  (10895, \n        40, 91),<br/>  (10895, 60, 100),<br/>  (10896, 45, 15),<br/>  (10896, 56, 16),<br/>  \n        (10897, 29, 80),<br/>  (10897, 30, 36),<br/>  (10898, 13, 5),<br/>  (10899, 39, \n        8),<br/>  (10900, 70, 3),<br/>  (10901, 41, 30),<br/>  (10901, 71, 30),<br/>  \n        (10902, 55, 30),<br/>  (10902, 62, 6),<br/>  (10903, 13, 40),<br/>  (10903, 65, \n        21),<br/>  (10903, 68, 20),<br/>  (10904, 58, 15),<br/>  (10904, 62, 35),<br/>  \n        (10905, 1, 20),<br/>  (10906, 61, 15),<br/>  (10907, 75, 14),<br/>  (10908, 7, \n        20),<br/>  (10908, 52, 14),<br/>  (10909, 7, 12),<br/>  (10909, 16, 15),<br/>  \n        (10909, 41, 5),<br/>  (10910, 19, 12),<br/>  (10910, 49, 10),<br/>  (10910, 61, \n        5),<br/>  (10911, 1, 10),<br/>  (10911, 17, 12),<br/>  (10911, 67, 15),<br/>  \n        (10912, 11, 40),<br/>  (10912, 29, 60),<br/>  (10913, 4, 30),<br/>  (10913, 33, \n        40),<br/>  (10913, 58, 15),<br/>  (10914, 71, 25),<br/>  (10915, 17, 10),<br/>  \n        (10915, 33, 30),<br/>  (10915, 54, 10),<br/>  (10916, 16, 6),<br/>  (10916, 32, \n        6),<br/>  (10916, 57, 20),<br/>  (10917, 30, 1),<br/>  (10917, 60, 10),<br/>  \n        (10918, 1, 60),<br/>  (10918, 60, 25),<br/>  (10919, 16, 24),<br/>  (10919, 25, \n        24),<br/>  (10919, 40, 20),<br/>  (10920, 50, 24),<br/>  (10921, 35, 10),<br/>  \n        (10921, 63, 40),<br/>  (10922, 17, 15),<br/>  (10922, 24, 35),<br/>  (10923, 42, \n        10),<br/>  (10923, 43, 10),<br/>  (10923, 67, 24),<br/>  (10924, 10, 20),<br/>  \n        (10924, 28, 30),<br/>  (10924, 75, 6),<br/>  (10925, 36, 25),<br/>  (10925, 52, \n        12),<br/>  (10926, 11, 2),<br/>  (10926, 13, 10),<br/>  (10926, 19, 7),<br/>  \n        (10926, 72, 10),<br/>  (10927, 20, 5),<br/>  (10927, 52, 5),<br/>  (10927, 76, \n        20),<br/>  (10928, 47, 5),<br/>  (10928, 76, 5),<br/>  (10929, 21, 60),<br/>  \n        (10929, 75, 49),<br/>  (10929, 77, 15),<br/>  (10930, 21, 36),<br/>  (10930, 27, \n        25),<br/>  (10930, 55, 25),<br/>  (10930, 58, 30),<br/>  (10931, 13, 42),<br/>  \n        (10931, 57, 30),<br/>  (10932, 16, 30),<br/>  (10932, 62, 14),<br/>  (10932, 72, \n        16),<br/>  (10932, 75, 20),<br/>  (10933, 53, 2),<br/>  (10933, 61, 30),<br/>  \n        (10934, 6, 20),<br/>  (10935, 1, 21),<br/>  (10935, 18, 4),<br/>  (10935, 23, 8),<br/>  \n        (10936, 36, 30),<br/>  (10937, 28, 8),<br/>  (10937, 34, 20),<br/>  (10938, 13, \n        20),<br/>  (10938, 43, 24),<br/>  (10938, 60, 49),<br/>  (10938, 71, 35),<br/>  \n        (10939, 2, 10),<br/>  (10939, 67, 40),<br/>  (10940, 7, 8),<br/>  (10940, 13, \n        20),<br/>  (10941, 31, 44),<br/>  (10941, 62, 30),<br/>  (10941, 68, 80),<br/>  \n        (10941, 72, 50),<br/>  (10942, 49, 28),<br/>  (10943, 13, 15),<br/>  (10943, 22, \n        21),<br/>  (10943, 46, 15),<br/>  (10944, 11, 5),<br/>  (10944, 44, 18),<br/>  \n        (10944, 56, 18),<br/>  (10945, 13, 20),<br/>  (10945, 31, 10),<br/>  (10946, 10, \n        25),<br/>  (10946, 24, 25),<br/>  (10946, 77, 40),<br/>  (10947, 59, 4),<br/>  \n        (10948, 50, 9),<br/>  (10948, 51, 40),<br/>  (10948, 55, 4),<br/>  (10949, 6, \n        12),<br/>  (10949, 10, 30),<br/>  (10949, 17, 6),<br/>  (10949, 62, 60),<br/>  \n        (10950, 4, 5),<br/>  (10951, 33, 15),<br/>  (10951, 41, 6),<br/>  (10951, 75, \n        50),<br/>  (10952, 6, 16),<br/>  (10952, 28, 2),<br/>  (10953, 20, 50),<br/>  \n        (10953, 31, 50),<br/>  (10954, 16, 28),<br/>  (10954, 31, 25),<br/>  (10954, 45, \n        30),<br/>  (10954, 60, 24),<br/>  (10955, 75, 12),<br/>  (10956, 21, 12),<br/>  \n        (10956, 47, 14),<br/>  (10956, 51, 8),<br/>  (10957, 30, 30),<br/>  (10957, 35, \n        40),<br/>  (10957, 64, 8),<br/>  (10958, 5, 20),<br/>  (10958, 7, 6),<br/>  (10958, \n        72, 5),<br/>  (10959, 75, 20),<br/>  (10960, 24, 10),<br/>  (10960, 41, 24),<br/>  \n        (10961, 52, 6),<br/>  (10961, 76, 60),<br/>  (10962, 7, 45),<br/>  (10962, 13, \n        77),<br/>  (10962, 53, 20),<br/>  (10962, 69, 9),<br/>  (10962, 76, 44),<br/>  \n        (10963, 60, 2),<br/>  (10964, 18, 6),<br/>  (10964, 38, 5),<br/>  (10964, 69, \n        10),<br/>  (10965, 51, 16),<br/>  (10966, 37, 8),<br/>  (10966, 56, 12),<br/>  \n        (10966, 62, 12),<br/>  (10967, 19, 12),<br/>  (10967, 49, 40),<br/>  (10968, 12, \n        30),<br/>  (10968, 24, 30),<br/>  (10968, 64, 4),<br/>  (10969, 46, 9),<br/>  \n        (10970, 52, 40),<br/>  (10971, 29, 14),<br/>  (10972, 17, 6),<br/>  (10972, 33, \n        7),<br/>  (10973, 26, 5),<br/>  (10973, 41, 6),<br/>  (10973, 75, 10),<br/>  (10974, \n        63, 10),<br/>  (10975, 8, 16),<br/>  (10975, 75, 10),<br/>  (10976, 28, 20),<br/>  \n        (10977, 39, 30),<br/>  (10977, 47, 30),<br/>  (10977, 51, 10),<br/>  (10977, 63, \n        20),<br/>  (10978, 8, 20),<br/>  (10978, 21, 40),<br/>  (10978, 40, 10),<br/>  \n        (10978, 44, 6),<br/>  (10979, 7, 18),<br/>  (10979, 12, 20),<br/>  (10979, 24, \n        80),<br/>  (10979, 27, 30),<br/>  (10979, 31, 24),<br/>  (10979, 63, 35),<br/>  \n        (10980, 75, 40),<br/>  (10981, 38, 60),<br/>  (10982, 7, 20),<br/>  (10982, 43, \n        9),<br/>  (10983, 13, 84),<br/>  (10983, 57, 15),<br/>  (10984, 16, 55),<br/>  \n        (10984, 24, 20),<br/>  (10984, 36, 40),<br/>  (10985, 16, 36),<br/>  (10985, 18, \n        8),<br/>  (10985, 32, 35),<br/>  (10986, 11, 30),<br/>  (10986, 20, 15),<br/>  \n        (10986, 76, 10),<br/>  (10986, 77, 15),<br/>  (10987, 7, 60),<br/>  (10987, 43, \n        6),<br/>  (10987, 72, 20),<br/>  (10988, 7, 60),<br/>  (10988, 62, 40),<br/>  \n        (10989, 6, 40),<br/>  (10989, 11, 15),<br/>  (10989, 41, 4),<br/>  (10990, 21, \n        65),<br/>  (10990, 34, 60),<br/>  (10990, 55, 65),<br/>  (10990, 61, 66),<br/>  \n        (10991, 2, 50),<br/>  (10991, 70, 20),<br/>  (10991, 76, 90),<br/>  (10992, 72, \n        2),<br/>  (10993, 29, 50),<br/>  (10993, 41, 35),<br/>  (10994, 59, 18),<br/>  \n        (10995, 51, 20),<br/>  (10995, 60, 4),<br/>  (10996, 42, 40),<br/>  (10997, 32, \n        50),<br/>  (10997, 46, 20),<br/>  (10997, 52, 20),<br/>  (10998, 24, 12),<br/>  \n        (10998, 61, 7),<br/>  (10998, 74, 20),<br/>  (10998, 75, 30),<br/>  (10999, 41, \n        20),<br/>  (10999, 51, 15),<br/>  (10999, 77, 21),<br/>  (11000, 4, 25),<br/>  \n        (11000, 24, 30),<br/>  (11000, 77, 30),<br/>  (11001, 7, 60),<br/>  (11001, 22, \n        25),<br/>  (11001, 46, 25),<br/>  (11001, 55, 6),<br/>  (11002, 13, 56),<br/>  \n        (11002, 35, 15),<br/>  (11002, 42, 24),<br/>  (11002, 55, 40),<br/>  (11003, 1, \n        4),<br/>  (11003, 40, 10),<br/>  (11003, 52, 10),<br/>  (11004, 26, 6),<br/>  \n        (11004, 76, 6),<br/>  (11005, 1, 2),<br/>  (11005, 59, 10),<br/>  (11006, 1, 8),<br/>  \n        (11006, 29, 2),<br/>  (11007, 8, 30),<br/>  (11007, 29, 10),<br/>  (11007, 42, \n        14),<br/>  (11008, 28, 70),<br/>  (11008, 34, 90),<br/>  (11008, 71, 21),<br/>  \n        (11009, 24, 12),<br/>  (11009, 36, 18),<br/>  (11009, 60, 9),<br/>  (11010, 7, \n        20),<br/>  (11010, 24, 10),<br/>  (11011, 58, 40),<br/>  (11011, 71, 20),<br/>  \n        (11012, 19, 50),<br/>  (11012, 60, 36),<br/>  (11012, 71, 60),<br/>  (11013, 23, \n        10),<br/>  (11013, 42, 4),<br/>  (11013, 45, 20),<br/>  (11013, 68, 2),<br/>  \n        (11014, 41, 28),<br/>  (11015, 30, 15),<br/>  (11015, 77, 18),<br/>  (11016, 31, \n        15),<br/>  (11016, 36, 16),<br/>  (11017, 3, 25),<br/>  (11017, 59, 110),<br/>  \n        (11017, 70, 30),<br/>  (11018, 12, 20),<br/>  (11018, 18, 10),<br/>  (11018, 56, \n        5),<br/>  (11019, 46, 3),<br/>  (11019, 49, 2),<br/>  (11020, 10, 24),<br/>  (11021, \n        2, 11),<br/>  (11021, 20, 15),<br/>  (11021, 26, 63),<br/>  (11021, 51, 44),<br/>  \n        (11021, 72, 35),<br/>  (11022, 19, 35),<br/>  (11022, 69, 30),<br/>  (11023, 7, \n        4),<br/>  (11023, 43, 30),<br/>  (11024, 26, 12),<br/>  (11024, 33, 30),<br/>  \n        (11024, 65, 21),<br/>  (11024, 71, 50),<br/>  (11025, 1, 10),<br/>  (11025, 13, \n        20),<br/>  (11026, 18, 8),<br/>  (11026, 51, 10),<br/>  (11027, 24, 30),<br/>  \n        (11027, 62, 21),<br/>  (11028, 55, 35),<br/>  (11028, 59, 24),<br/>  (11029, 56, \n        20),<br/>  (11029, 63, 12),<br/>  (11030, 2, 100),<br/>  (11030, 5, 70),<br/>  \n        (11030, 29, 60),<br/>  (11030, 59, 100),<br/>  (11031, 1, 45),<br/>  (11031, 13, \n        80),<br/>  (11031, 24, 21),<br/>  (11031, 64, 20),<br/>  (11031, 71, 16),<br/>  \n        (11032, 36, 35),<br/>  (11032, 38, 25),<br/>  (11032, 59, 30),<br/>  (11033, 53, \n        70),<br/>  (11033, 69, 36),<br/>  (11034, 21, 15),<br/>  (11034, 44, 12),<br/>  \n        (11034, 61, 6),<br/>  (11035, 1, 10),<br/>  (11035, 35, 60),<br/>  (11035, 42, \n        30),<br/>  (11035, 54, 10),<br/>  (11036, 13, 7),<br/>  (11036, 59, 30),<br/>  \n        (11037, 70, 4),<br/>  (11038, 40, 5),<br/>  (11038, 52, 2),<br/>  (11038, 71, \n        30),<br/>  (11039, 28, 20),<br/>  (11039, 35, 24),<br/>  (11039, 49, 60),<br/>  \n        (11039, 57, 28),<br/>  (11040, 21, 20),<br/>  (11041, 2, 30),<br/>  (11041, 63, \n        30),<br/>  (11042, 44, 15),<br/>  (11042, 61, 4),<br/>  (11043, 11, 10),<br/>  \n        (11044, 62, 12),<br/>  (11045, 33, 15),<br/>  (11045, 51, 24),<br/>  (11046, 12, \n        20),<br/>  (11046, 32, 15),<br/>  (11046, 35, 18),<br/>  (11047, 1, 25),<br/>  \n        (11047, 5, 30),<br/>  (11048, 68, 42),<br/>  (11049, 2, 10),<br/>  (11049, 12, \n        4),<br/>  (11050, 76, 50),<br/>  (11051, 24, 10),<br/>  (11052, 43, 30),<br/>  \n        (11052, 61, 10),<br/>  (11053, 18, 35),<br/>  (11053, 32, 20),<br/>  (11053, 64, \n        25),<br/>  (11054, 33, 10),<br/>  (11054, 67, 20),<br/>  (11055, 24, 15),<br/>  \n        (11055, 25, 15),<br/>  (11055, 51, 20),<br/>  (11055, 57, 20),<br/>  (11056, 7, \n        40),<br/>  (11056, 55, 35),<br/>  (11056, 60, 50),<br/>  (11057, 70, 3),<br/>  \n        (11058, 21, 3),<br/>  (11058, 60, 21),<br/>  (11058, 61, 4),<br/>  (11059, 13, \n        30),<br/>  (11059, 17, 12),<br/>  (11059, 60, 35),<br/>  (11060, 60, 4),<br/>  \n        (11060, 77, 10),<br/>  (11061, 60, 15),<br/>  (11062, 53, 10),<br/>  (11062, 70, \n        12),<br/>  (11063, 34, 30),<br/>  (11063, 40, 40),<br/>  (11063, 41, 30),<br/>  \n        (11064, 17, 77),<br/>  (11064, 41, 12),<br/>  (11064, 53, 25),<br/>  (11064, 55, \n        4),<br/>  (11064, 68, 55),<br/>  (11065, 30, 4),<br/>  (11065, 54, 20),<br/>  \n        (11066, 16, 3),<br/>  (11066, 19, 42),<br/>  (11066, 34, 35),<br/>  (11067, 41, \n        9),<br/>  (11068, 28, 8),<br/>  (11068, 43, 36),<br/>  (11068, 77, 28),<br/>  \n        (11069, 39, 20),<br/>  (11070, 1, 40),<br/>  (11070, 2, 20),<br/>  (11070, 16, \n        30),<br/>  (11070, 31, 20),<br/>  (11071, 7, 15),<br/>  (11071, 13, 10),<br/>  \n        (11072, 2, 8),<br/>  (11072, 41, 40),<br/>  (11072, 50, 22),<br/>  (11072, 64, \n        130),<br/>  (11073, 11, 10),<br/>  (11073, 24, 20),<br/>  (11074, 16, 14),<br/>  \n        (11075, 2, 10),<br/>  (11075, 46, 30),<br/>  (11075, 76, 2),<br/>  (11076, 6, \n        20),<br/>  (11076, 14, 20),<br/>  (11076, 19, 10),<br/>  (11077, 2, 24),<br/>  \n        (11077, 3, 4),<br/>  (11077, 4, 1),<br/>  (11077, 6, 1),<br/>  (11077, 7, 1),<br/>  \n        (11077, 8, 2),<br/>  (11077, 10, 1),<br/>  (11077, 12, 2),<br/>  (11077, 13, 4),<br/>  \n        (11077, 14, 1),<br/>  (11077, 16, 2),<br/>  (11077, 20, 1),<br/>  (11077, 23, 2),<br/>  \n        (11077, 32, 1),<br/>  (11077, 39, 2),<br/>  (11077, 41, 3),<br/>  (11077, 46, 3),<br/>  \n        (11077, 52, 2),<br/>  (11077, 55, 2),<br/>  (11077, 60, 2),<br/>  (11077, 64, 2),<br/>  \n        (11077, 66, 1),<br/>  (11077, 73, 2),<br/>  (11077, 75, 4),<br/>  (11077, 77, 2);"
        },
        {
          "text": "INSERT 0 2155",
          "html": "INSERT 0 2155"
        },
        {
          "text": "CREATE TABLE testproducts (\ntestproduct_id SERIAL NOT NULL PRIMARY KEY,\nproduct_name VARCHAR(255),\ncategory_id INT\n);",
          "html": "CREATE TABLE testproducts (<br/>  testproduct_id SERIAL NOT NULL \n        PRIMARY KEY,<br/>  product_name VARCHAR(255),<br/>  category_id \n        INT<br/>);"
        },
        {
          "text": "INSERT INTO testproducts (product_name, category_id)\nVALUES\n('Johns Fruit Cake', 3),\n('Marys Healthy Mix', 9),\n('Peters Scary Stuff', 10),\n('Jims Secret Recipe', 11),\n('Elisabeths Best Apples', 12),\n('Janes Favorite Cheese', 4),\n('Billys Home Made Pizza', 13),\n('Ellas Special Salmon', 8),\n('Roberts Rich Spaghetti', 5),\n('Mias Popular Ice', 14);",
          "html": "INSERT INTO testproducts (product_name, category_id)<br/>VALUES<br/>\n  ('Johns Fruit Cake', 3),<br/>\n  ('Marys Healthy Mix', 9),<br/>\n  ('Peters Scary Stuff', 10),<br/>\n  ('Jims Secret Recipe', 11),<br/>\n  ('Elisabeths Best Apples', 12),<br/>\n  ('Janes Favorite Cheese', 4),<br/>\n  ('Billys Home Made Pizza', 13),<br/>\n  ('Ellas Special Salmon', 8),<br/>\n  ('Roberts Rich Spaghetti', 5),<br/>\n  ('Mias Popular Ice', 14);"
        },
        {
          "text": "INSERT 0 10",
          "html": "INSERT 0 10"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_create_demodatabase.php"
      }
    },
    {
      "title": "PostgreSQL Operators",
      "code": [
        {
          "text": "SELECT * FROM cars\nWHERE brand = 'Volvo';",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand = 'Volvo';"
        },
        {
          "text": "SELECT * FROM cars\nWHERE year < 1975;",
          "html": "SELECT * FROM cars<br/>\n          WHERE year &lt; 1975;"
        },
        {
          "text": "SELECT * FROM cars\nWHERE year <= 1975;",
          "html": "SELECT * FROM cars<br/>\n          WHERE year &lt;= 1975;"
        },
        {
          "text": "SELECT * FROM cars\nWHERE brand <> 'Volvo';",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand &lt;&gt; 'Volvo';"
        },
        {
          "text": "SELECT * FROM cars\nWHERE brand = 'Volvo' AND year = 1968;",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand = 'Volvo' AND year = 1968;"
        },
        {
          "text": "SELECT * FROM cars\nWHERE brand = 'Volvo' OR year = 1975;",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand = 'Volvo' OR year = 1975;"
        },
        {
          "text": "SELECT * FROM cars\nWHERE brand IN ('Volvo', 'Mercedes', 'Ford');",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand IN ('Volvo', 'Mercedes', 'Ford');"
        },
        {
          "text": "SELECT * FROM cars\nWHERE year BETWEEN 1970 AND 1980;",
          "html": "SELECT * FROM cars<br/>\n          WHERE year BETWEEN 1970 AND 1980;"
        },
        {
          "text": "SELECT * FROM cars\nWHERE model IS NULL;",
          "html": "SELECT * FROM cars<br/>\n          WHERE model IS NULL;"
        },
        {
          "text": "SELECT * FROM cars\nWHERE brand NOT LIKE 'B%';",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand \n          NOT LIKE 'B%';"
        },
        {
          "text": "SELECT * FROM cars\nWHERE brand NOT ILIKE 'b%';",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand \n          NOT ILIKE 'b%';"
        },
        {
          "text": "SELECT * FROM cars\nWHERE brand NOT IN ('Volvo', 'Mercedes', 'Ford');",
          "html": "SELECT * FROM cars<br/>\n          WHERE brand NOT IN ('Volvo', 'Mercedes', 'Ford');"
        },
        {
          "text": "SELECT * FROM cars\nWHERE model IS NOT NULL;",
          "html": "SELECT * FROM cars<br/>\n          WHERE model IS NOT NULL;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_operators.php"
      }
    },
    {
      "title": "PostgreSQL Select Data",
      "code": [
        {
          "text": "SELECT customer_name, country FROM customers;",
          "html": "SELECT \n          customer_name, country FROM customers;"
        },
        {
          "text": "SELECT * FROM customers;",
          "html": "SELECT * FROM customers;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_select.php"
      }
    },
    {
      "title": "PostgreSQL SELECT DISTINCT",
      "code": [
        {
          "text": "SELECT DISTINCT country FROM customers;",
          "html": "SELECT DISTINCT country FROM customers;"
        },
        {
          "text": "SELECT COUNT(DISTINCT country) FROM customers;",
          "html": "SELECT COUNT(DISTINCT country) FROM customers;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_select_distinct.php"
      }
    },
    {
      "title": "PostgreSQL WHERE - Filter Data",
      "code": [
        {
          "text": "SELECT * FROM customers\nWHERE city = 'London';",
          "html": "SELECT * FROM customers<br/>\n          WHERE \n          city = 'London';"
        },
        {
          "text": "SELECT * FROM customers\nWHERE customer_id = 19;",
          "html": "SELECT * FROM customers<br/>\n          WHERE \n          customer_id = 19;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_where.php"
      }
    },
    {
      "title": "PostgreSQL ORDER BY",
      "code": [
        {
          "text": "SELECT * FROM products\nORDER BY price;",
          "html": "SELECT * FROM products<br/>\n          ORDER BY price;"
        },
        {
          "text": "SELECT * FROM products\nORDER BY price DESC;",
          "html": "SELECT * FROM products<br/>\n          ORDER BY price DESC;"
        },
        {
          "text": "SELECT * FROM products\nORDER BY product_name;",
          "html": "SELECT * FROM products<br/>\n          ORDER BY product_name;"
        },
        {
          "text": "SELECT * FROM products\nORDER BY product_name DESC;",
          "html": "SELECT * FROM products<br/>\n          ORDER BY product_name DESC;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_orderby.php"
      }
    },
    {
      "title": "PostgreSQL LIMIT",
      "code": [
        {
          "text": "SELECT * FROM customers\nLIMIT 20;",
          "html": "SELECT * FROM customers<br/>\n          LIMIT 20;"
        },
        {
          "text": "SELECT * FROM customers\nLIMIT 20 OFFSET 40;",
          "html": "SELECT * FROM customers<br/>\n          LIMIT 20 OFFSET 40;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_limit.php"
      }
    },
    {
      "title": "PostgreSQL MIN and MAX Functions",
      "code": [
        {
          "text": "SELECT MIN(price)\nFROM products;",
          "html": "SELECT MIN(price)<br/>\n          FROM products;"
        },
        {
          "text": "SELECT MAX(price)\nFROM products;",
          "html": "SELECT MAX(price)<br/>\n          FROM products;"
        },
        {
          "text": "SELECT MIN(price) AS lowest_price\nFROM products;",
          "html": "SELECT MIN(price) AS lowest_price<br/>\n          FROM products;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_min_max.php"
      }
    },
    {
      "title": "PostgreSQL COUNT Function",
      "code": [
        {
          "text": "SELECT COUNT(customer_id)\nFROM customers;",
          "html": "SELECT COUNT(customer_id)<br/>\n          FROM customers;"
        },
        {
          "text": "SELECT COUNT(customer_id)\nFROM customers\nWHERE city = 'London';",
          "html": "SELECT COUNT(customer_id)<br/>\n          FROM customers<br/>\n          WHERE city = 'London';"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_count.php"
      }
    },
    {
      "title": "PostgreSQL SUM Function",
      "code": [
        {
          "text": "SELECT SUM(quantity)\nFROM order_details;",
          "html": "SELECT SUM(quantity)<br/>\n          FROM order_details;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_sum.php"
      }
    },
    {
      "title": "PostgreSQL AVG Function",
      "code": [
        {
          "text": "SELECT AVG(price)\nFROM products;",
          "html": "SELECT AVG(price)<br/>\n          FROM products;"
        },
        {
          "text": "SELECT AVG(price)::NUMERIC(10,2)\nFROM products;",
          "html": "SELECT AVG(price)::NUMERIC(10,2)<br/>\n          FROM products;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_avg.php"
      }
    },
    {
      "title": "PostgreSQL LIKE Operator",
      "code": [
        {
          "text": "SELECT * FROM customers\nWHERE customer_name LIKE 'A%';",
          "html": "SELECT * FROM customers<br/>\n          WHERE customer_name LIKE 'A%';"
        },
        {
          "text": "SELECT * FROM customers\nWHERE customer_name LIKE '%A%';",
          "html": "SELECT * FROM customers<br/>\n          WHERE customer_name LIKE '%A%';"
        },
        {
          "text": "SELECT * FROM customers\nWHERE customer_name ILIKE '%A%';",
          "html": "SELECT * FROM customers<br/>\n          WHERE customer_name ILIKE '%A%';"
        },
        {
          "text": "SELECT * FROM customers\nWHERE city LIKE 'L_nd__';",
          "html": "SELECT * FROM customers<br/>\n          WHERE city LIKE 'L_nd__';"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_like.php"
      }
    },
    {
      "title": "PostgreSQL IN Operator",
      "code": [
        {
          "text": "SELECT * FROM customers\nWHERE country IN ('Germany', 'France', 'UK');",
          "html": "SELECT * FROM customers<br/>\n          WHERE country IN ('Germany', 'France', 'UK');"
        },
        {
          "text": "SELECT * FROM customers\nWHERE country NOT IN ('Germany', 'France', 'UK');",
          "html": "SELECT * FROM customers<br/>\n          WHERE country NOT IN ('Germany', 'France', 'UK');"
        },
        {
          "text": "SELECT * FROM customers\nWHERE customer_id IN (SELECT customer_id FROM orders);",
          "html": "SELECT * FROM customers<br/>\n          WHERE customer_id IN (SELECT customer_id FROM orders);"
        },
        {
          "text": "SELECT * FROM customers\nWHERE customer_id NOT IN (SELECT customer_id FROM orders);",
          "html": "SELECT * FROM customers<br/>\n          WHERE customer_id NOT IN (SELECT customer_id FROM orders);"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_in.php"
      }
    },
    {
      "title": "PostgreSQL BETWEEN Operator",
      "code": [
        {
          "text": "SELECT * FROM Products\nWHERE Price BETWEEN 10 AND 15;",
          "html": "SELECT * FROM Products<br/>\n        WHERE Price BETWEEN 10 AND 15;"
        },
        {
          "text": "SELECT * FROM Products\nWHERE product_name BETWEEN 'Pavlova' AND 'Tofu';",
          "html": "SELECT * FROM Products<br/>\n        WHERE product_name BETWEEN 'Pavlova' AND 'Tofu';"
        },
        {
          "text": "SELECT * FROM Products\nWHERE product_name BETWEEN 'Pavlova' AND 'Tofu'\nORDER BY product_name;",
          "html": "SELECT * FROM Products<br/>\n        WHERE product_name BETWEEN 'Pavlova' AND 'Tofu'<br/>\n        ORDER BY product_name;"
        },
        {
          "text": "SELECT * FROM orders\nWHERE order_date BETWEEN '2023-04-12' AND '2023-05-05';",
          "html": "SELECT * FROM orders<br/>\n        WHERE order_date BETWEEN '2023-04-12' AND '2023-05-05';"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_between.php"
      }
    },
    {
      "title": "PostgreSQL AS",
      "code": [
        {
          "text": "SELECT customer_id AS id\nFROM customers;",
          "html": "SELECT customer_id AS id<br/>\n        FROM customers;"
        },
        {
          "text": "SELECT customer_id id\nFROM customers;",
          "html": "SELECT customer_id id<br/>\n        FROM customers;"
        },
        {
          "text": "SELECT product_name || unit AS product\nFROM products;",
          "html": "SELECT product_name \n        || unit AS product<br/>\n        FROM products;"
        },
        {
          "text": "SELECT product_name || ' ' || unit AS product\nFROM products;",
          "html": "SELECT product_name || ' ' || unit AS product<br/>\n        FROM products;"
        },
        {
          "text": "SELECT product_name AS \"My Great Products\"\nFROM products;",
          "html": "SELECT product_name AS \"My Great Products\"<br/>\n        FROM products;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_as.php"
      }
    },
    {
      "title": "PostgreSQL JOINS",
      "code": [
        {
          "text": "product_id |  product_name  | category_id\n------------+----------------+-------------\n33 | Geitost        |           4\n34 | Sasquatch Ale  |           1\n35 | Steeleye Stout |           1\n36 | Inlagd Sill    |           8",
          "html": "product_id |  product_name  | category_id<br/>\n    ------------+----------------+-------------<br/>         \n    33 | Geitost        \n    |           4<br/>         \n    34 | Sasquatch \n    Ale  |           1<br/>         \n    35 | Steeleye \n    Stout |           1<br/>         \n    36 | Inlagd \n    Sill    |           \n    8"
        },
        {
          "text": "category_id | category_name\n-------------+----------------\n1 | Beverages\n2 | Condiments\n3 | Confections\n4 | Dairy Products",
          "html": "category_id | category_name<br/>-------------+----------------<br/>           \n    1 | Beverages<br/>           \n    2 | Condiments<br/>           \n    3 | Confections<br/>           \n    4 | Dairy Products"
        },
        {
          "text": "SELECT product_id, product_name, category_name\nFROM products\nINNER JOIN categories ON products.category_id = categories.category_id;",
          "html": "SELECT product_id, product_name, category_name<br/>\n        FROM products<br/>\n        INNER JOIN categories ON products.category_id = categories.category_id;"
        },
        {
          "text": "product_id |  product_name  | category_name\n------------+----------------+----------------\n33 | Geitost        | Dairy Products\n34 | Sasquatch Ale  | Beverages\n35 | Steeleye Stout | Beverages\n36 | Inlagd Sill    | Seafood",
          "html": "product_id \n    |  product_name  | category_name<br/>\n    ------------+----------------+----------------<br/>         \n    33 | Geitost        | Dairy Products<br/>         \n    34 | Sasquatch Ale  | Beverages<br/>         \n    35 | Steeleye Stout | Beverages<br/>         \n    36 | Inlagd Sill    | Seafood"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_joins.php"
      }
    },
    {
      "title": "PostgreSQL INNER JOIN",
      "code": [
        {
          "text": "testproduct_id |      product_name      | category_id\n----------------+------------------------+-------------\n1 | Johns Fruit Cake       |           3\n2 | Marys Healthy Mix      |           9\n3 | Peters Scary Stuff     |          10\n4 | Jims Secret Recipe     |          11\n5 | Elisabeths Best Apples |          12\n6 | Janes Favorite Cheese  |           4\n7 | Billys Home Made Pizza |          13\n8 | Ellas Special Salmon   |           8\n9 | Roberts Rich Spaghetti |           5\n10 | Mias Popular Ice        |          14\n(10 rows)",
          "html": "testproduct_id |      product_name      \n    | category_id<br/>----------------+------------------------+-------------<br/>              \n    1 | Johns Fruit Cake       |           \n    3<br/>              \n    2 | Marys Healthy Mix      |           \n    9<br/>              \n    3 | Peters Scary Stuff     |          \n    10<br/>              \n    4 | Jims Secret Recipe     |          \n    11<br/>              \n    5 | Elisabeths Best Apples |          \n    12<br/>              \n    6 | Janes Favorite Cheese  |           \n    4<br/>              \n    7 | Billys Home Made Pizza |          \n    13<br/>              \n    8 | Ellas Special Salmon   |           \n    8<br/>              \n    9 | Roberts Rich Spaghetti |           \n    5<br/>            10 | \n    Mias Popular Ice        |          \n    14<br/>(10 rows)"
        },
        {
          "text": "category_id | category_name  |                       description\n-------------+----------------+------------------------------------------------------------\n1 | Beverages      | Soft drinks, coffees, teas, beers, and ales\n2 | Condiments     | Sweet and savory sauces, relishes, spreads, and seasonings\n3 | Confections    | Desserts, candies, and sweet breads\n4 | Dairy Products | Cheeses\n5 | Grains/Cereals | Breads, crackers, pasta, and cereal\n6 | Meat/Poultry   | Prepared meats\n7 | Produce        | Dried fruit and bean curd\n8 | Seafood        | Seaweed and fish\n(8 rows)",
          "html": "category_id | category_name  |                       \n    description<br/>\n    -------------+----------------+------------------------------------------------------------<br/>           \n    1 | Beverages      | Soft drinks, coffees, teas, \n    beers, and ales<br/>           \n    2 | Condiments     | Sweet and savory sauces, relishes, \n    spreads, and seasonings<br/>           \n    3 | Confections    | Desserts, candies, and sweet breads<br/>           \n    4 | Dairy Products | Cheeses<br/>           \n    5 | Grains/Cereals | Breads, crackers, pasta, and cereal<br/>           \n    6 | Meat/Poultry   | Prepared meats<br/>           \n    7 | Produce        | Dried fruit and bean \n    curd<br/>           8 | \n    Seafood        | Seaweed and fish<br/>(8 \n    rows)"
        },
        {
          "text": "SELECT testproduct_id, product_name, category_name\nFROM testproducts\nINNER JOIN categories ON testproducts.category_id = categories.category_id;",
          "html": "SELECT \n        testproduct_id, product_name, category_name<br/>\n        FROM testproducts<br/>\n        INNER JOIN categories ON \n        testproducts.category_id = categories.category_id;"
        },
        {
          "text": "testproduct_id |      product_name      | category_name\n----------------+------------------------+----------------\n1 | Johns Fruit Cake       | Confections\n6 | Janes Favorite Cheese  | Dairy Products\n8 | Ellas Special Salmon   | Seafood\n9 | Roberts Rich Spaghetti | Grains/Cereals\n(4 rows)",
          "html": "testproduct_id |      product_name      \n    | category_name<br/>\n    ----------------+------------------------+----------------<br/>              \n    1 | Johns Fruit Cake       | Confections<br/>              \n    6 | Janes Favorite Cheese  | Dairy Products<br/>              \n    8 | Ellas Special Salmon   | Seafood<br/>              \n    9 | Roberts Rich Spaghetti | Grains/Cereals<br/>(4 rows)"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_inner_join.php"
      }
    },
    {
      "title": "PostgreSQL LEFT JOIN",
      "code": [
        {
          "text": "testproduct_id |      product_name      | category_id\n----------------+------------------------+-------------\n1 | Johns Fruit Cake       |           3\n2 | Marys Healthy Mix      |           9\n3 | Peters Scary Stuff     |          10\n4 | Jims Secret Recipe     |          11\n5 | Elisabeths Best Apples |          12\n6 | Janes Favorite Cheese  |           4\n7 | Billys Home Made Pizza |          13\n8 | Ellas Special Salmon   |           8\n9 | Roberts Rich Spaghetti |           5\n10 | Mias Popular Ice        |          14\n(10 rows)",
          "html": "testproduct_id |      product_name      \n    | category_id<br/>----------------+------------------------+-------------<br/>              \n    1 | Johns Fruit Cake       |           \n    3<br/>              \n    2 | Marys Healthy Mix      |           \n    9<br/>              \n    3 | Peters Scary Stuff     |          \n    10<br/>              \n    4 | Jims Secret Recipe     |          \n    11<br/>              \n    5 | Elisabeths Best Apples |          \n    12<br/>              \n    6 | Janes Favorite Cheese  |           \n    4<br/>              \n    7 | Billys Home Made Pizza |          \n    13<br/>              \n    8 | Ellas Special Salmon   |           \n    8<br/>              \n    9 | Roberts Rich Spaghetti |           \n    5<br/>            10 | \n    Mias Popular Ice        |          \n    14<br/>(10 rows)"
        },
        {
          "text": "category_id | category_name  |                       description\n-------------+----------------+------------------------------------------------------------\n1 | Beverages      | Soft drinks, coffees, teas, beers, and ales\n2 | Condiments     | Sweet and savory sauces, relishes, spreads, and seasonings\n3 | Confections    | Desserts, candies, and sweet breads\n4 | Dairy Products | Cheeses\n5 | Grains/Cereals | Breads, crackers, pasta, and cereal\n6 | Meat/Poultry   | Prepared meats\n7 | Produce        | Dried fruit and bean curd\n8 | Seafood        | Seaweed and fish\n(8 rows)",
          "html": "category_id | category_name  |                       \n    description<br/>\n    -------------+----------------+------------------------------------------------------------<br/>           \n    1 | Beverages      | Soft drinks, coffees, teas, \n    beers, and ales<br/>           \n    2 | Condiments     | Sweet and savory sauces, relishes, \n    spreads, and seasonings<br/>           \n    3 | Confections    | Desserts, candies, and sweet breads<br/>           \n    4 | Dairy Products | Cheeses<br/>           \n    5 | Grains/Cereals | Breads, crackers, pasta, and cereal<br/>           \n    6 | Meat/Poultry   | Prepared meats<br/>           \n    7 | Produce        | Dried fruit and bean \n    curd<br/>           8 | \n    Seafood        | Seaweed and fish<br/>(8 \n    rows)"
        },
        {
          "text": "SELECT testproduct_id, product_name, category_name\nFROM testproducts\nLEFT JOIN categories ON testproducts.category_id = categories.category_id;",
          "html": "SELECT \n        testproduct_id, product_name, category_name<br/>\n        FROM testproducts<br/>\n        LEFT JOIN categories ON testproducts.category_id = categories.category_id;"
        },
        {
          "text": "testproduct_id |      product_name      | category_name\n----------------+------------------------+----------------\n1 | Johns Fruit Cake       | Confections\n2 | Marys Healthy Mix      |\n3 | Peters Scary Stuff     |\n4 | Jims Secret Recipe     |\n5 | Elisabeths Best Apples |\n6 | Janes Favorite Cheese  | Dairy Products\n7 | Billys Home Made Pizza |\n8 | Ellas Special Salmon   | Seafood\n9 | Roberts Rich Spaghetti | Grains/Cereals\n10 | Mias Popular Ice       |\n(10 rows)",
          "html": "testproduct_id |      product_name      \n    | category_name<br/>\n    ----------------+------------------------+----------------<br/>              \n    1 | Johns Fruit Cake       | Confections<br/>              \n    2 | Marys Healthy Mix      |<br/>              \n    3 | Peters Scary Stuff     |<br/>              \n    4 | Jims Secret Recipe     |<br/>              \n    5 | Elisabeths Best Apples |<br/>              \n    6 | Janes Favorite Cheese  | Dairy Products<br/>              \n    7 | Billys Home Made Pizza |<br/>              \n    8 | Ellas Special Salmon   | Seafood<br/>              \n    9 | Roberts Rich Spaghetti | Grains/Cereals<br/>             \n    10 | Mias Popular Ice       |<br/>(10 rows)<br/>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_left_join.php"
      }
    },
    {
      "title": "PostgreSQL RIGHT JOIN",
      "code": [
        {
          "text": "testproduct_id |      product_name      | category_id\n----------------+------------------------+-------------\n1 | Johns Fruit Cake       |           3\n2 | Marys Healthy Mix      |           9\n3 | Peters Scary Stuff     |          10\n4 | Jims Secret Recipe     |          11\n5 | Elisabeths Best Apples |          12\n6 | Janes Favorite Cheese  |           4\n7 | Billys Home Made Pizza |          13\n8 | Ellas Special Salmon   |           8\n9 | Roberts Rich Spaghetti |           5\n10 | Mias Popular Ice       |          14\n(10 rows)",
          "html": "testproduct_id |      product_name      \n    | category_id<br/>----------------+------------------------+-------------<br/>              \n    1 | Johns Fruit Cake       |           \n    3<br/>              \n    2 | Marys Healthy Mix      |           \n    9<br/>              \n    3 | Peters Scary Stuff     |          \n    10<br/>              \n    4 | Jims Secret Recipe     |          \n    11<br/>              \n    5 | Elisabeths Best Apples |          \n    12<br/>              \n    6 | Janes Favorite Cheese  |           \n    4<br/>              \n    7 | Billys Home Made Pizza |          \n    13<br/>              \n    8 | Ellas Special Salmon   |           \n    8<br/>              \n    9 | Roberts Rich Spaghetti |           \n    5<br/>             10 | Mias Popular Ice       |          \n    14<br/>(10 rows)"
        },
        {
          "text": "category_id | category_name  |                       description\n-------------+----------------+------------------------------------------------------------\n1 | Beverages      | Soft drinks, coffees, teas, beers, and ales\n2 | Condiments     | Sweet and savory sauces, relishes, spreads, and seasonings\n3 | Confections    | Desserts, candies, and sweet breads\n4 | Dairy Products | Cheeses\n5 | Grains/Cereals | Breads, crackers, pasta, and cereal\n6 | Meat/Poultry   | Prepared meats\n7 | Produce        | Dried fruit and bean curd\n8 | Seafood        | Seaweed and fish\n(8 rows)",
          "html": "category_id | category_name  |                       \n    description<br/>\n    -------------+----------------+------------------------------------------------------------<br/>           \n    1 | Beverages      | Soft drinks, coffees, teas, \n    beers, and ales<br/>           \n    2 | Condiments     | Sweet and savory sauces, relishes, \n    spreads, and seasonings<br/>           \n    3 | Confections    | Desserts, candies, and sweet breads<br/>           \n    4 | Dairy Products | Cheeses<br/>           \n    5 | Grains/Cereals | Breads, crackers, pasta, and cereal<br/>           \n    6 | Meat/Poultry   | Prepared meats<br/>           \n    7 | Produce        | Dried fruit and bean \n    curd<br/>           8 | \n    Seafood        | Seaweed and fish<br/>(8 \n    rows)"
        },
        {
          "text": "SELECT testproduct_id, product_name, category_name\nFROM testproducts\nRIGHT JOIN categories ON testproducts.category_id = categories.category_id;",
          "html": "SELECT \n        testproduct_id, product_name, category_name<br/>\n        FROM testproducts<br/>\n        RIGHT JOIN categories ON testproducts.category_id = categories.category_id;"
        },
        {
          "text": "testproduct_id |      product_name      | category_name\n----------------+------------------------+----------------\n1 | Johns Fruit Cake       | Confections\n6 | Janes Favorite Cheese  | Dairy Products\n8 | Ellas Special Salmon   | Seafood\n9 | Roberts Rich Spaghetti | Grains/Cereals\n|                        | Condiments\n|                        | Meat/Poultry\n|                        | Beverages\n|                        | Produce\n(8 rows)",
          "html": "testproduct_id |      product_name      \n    | category_name<br/>\n    ----------------+------------------------+----------------<br/>              \n    1 | Johns Fruit Cake       | Confections<br/>              \n    6 | Janes Favorite Cheese  | Dairy Products<br/>              \n    8 | Ellas Special Salmon   | Seafood<br/>              \n    9 | Roberts Rich Spaghetti | Grains/Cereals<br/>                \n    |                        \n    | Condiments<br/>                \n    |                        \n    | Meat/Poultry<br/>                \n    |                        \n    | Beverages<br/>                \n    |                        \n    | Produce<br/>(8 rows)<br/>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_right_join.php"
      }
    },
    {
      "title": "PostgreSQL FULL JOIN",
      "code": [
        {
          "text": "testproduct_id |      product_name      | category_id\n----------------+------------------------+-------------\n1 | Johns Fruit Cake       |           3\n2 | Marys Healthy Mix      |           9\n3 | Peters Scary Stuff     |          10\n4 | Jims Secret Recipe     |          11\n5 | Elisabeths Best Apples |          12\n6 | Janes Favorite Cheese  |           4\n7 | Billys Home Made Pizza |          13\n8 | Ellas Special Salmon   |           8\n9 | Roberts Rich Spaghetti |           5\n10 | Mias Popular Ice       |          14\n(10 rows)",
          "html": "testproduct_id |      product_name      \n    | category_id<br/>----------------+------------------------+-------------<br/>              \n    1 | Johns Fruit Cake       |           \n    3<br/>              \n    2 | Marys Healthy Mix      |           \n    9<br/>              \n    3 | Peters Scary Stuff     |          \n    10<br/>              \n    4 | Jims Secret Recipe     |          \n    11<br/>              \n    5 | Elisabeths Best Apples |          \n    12<br/>              \n    6 | Janes Favorite Cheese  |           \n    4<br/>              \n    7 | Billys Home Made Pizza |          \n    13<br/>              \n    8 | Ellas Special Salmon   |           \n    8<br/>              \n    9 | Roberts Rich Spaghetti |           \n    5<br/>             10 | Mias Popular Ice       |          \n    14<br/>(10 rows)"
        },
        {
          "text": "category_id | category_name  |                       description\n-------------+----------------+------------------------------------------------------------\n1 | Beverages      | Soft drinks, coffees, teas, beers, and ales\n2 | Condiments     | Sweet and savory sauces, relishes, spreads, and seasonings\n3 | Confections    | Desserts, candies, and sweet breads\n4 | Dairy Products | Cheeses\n5 | Grains/Cereals | Breads, crackers, pasta, and cereal\n6 | Meat/Poultry   | Prepared meats\n7 | Produce        | Dried fruit and bean curd\n8 | Seafood        | Seaweed and fish\n(8 rows)",
          "html": "category_id | category_name  |                       \n    description<br/>\n    -------------+----------------+------------------------------------------------------------<br/>           \n    1 | Beverages      | Soft drinks, coffees, teas, \n    beers, and ales<br/>           \n    2 | Condiments     | Sweet and savory sauces, relishes, \n    spreads, and seasonings<br/>           \n    3 | Confections    | Desserts, candies, and sweet breads<br/>           \n    4 | Dairy Products | Cheeses<br/>           \n    5 | Grains/Cereals | Breads, crackers, pasta, and cereal<br/>           \n    6 | Meat/Poultry   | Prepared meats<br/>           \n    7 | Produce        | Dried fruit and bean \n    curd<br/>           8 | \n    Seafood        | Seaweed and fish<br/>(8 \n    rows)"
        },
        {
          "text": "SELECT testproduct_id, product_name, category_name\nFROM testproducts\nFULL JOIN categories ON testproducts.category_id = categories.category_id;",
          "html": "SELECT \n        testproduct_id, product_name, category_name<br/>\n        FROM testproducts<br/>\n        FULL JOIN categories ON testproducts.category_id = categories.category_id;"
        },
        {
          "text": "testproduct_id |      product_name       | category_name\n----------------+-------------------------+----------------\n1 | Johns Fruit Cake        | Confections\n2 | Marys Healthy Mix       |\n3 | Peters Scary Stuff      |\n4 | Jims Secret Recipe      |\n5 | Elisabeths Best Apples  |\n6 | Janes Favorite Cheese   | Dairy Products\n7 | Billys Home Made Pizza  |\n8 | Ellas Special Salmon    | Seafood\n9 | Roberts Rich Spaghetti  | Grains/Cereals\n10 | Mias Popular Ice        |\n|                         | Condiments\n|                         | Meat/Poultry\n|                         | Beverages\n|                         | Produce\n(14 rows)",
          "html": "testproduct_id |      product_name       \n    | category_name<br/>\n    ----------------+-------------------------+----------------<br/>              \n    1 | Johns Fruit Cake        | Confections<br/>              \n    2 | Marys Healthy Mix       |<br/>              \n    3 | Peters Scary Stuff      |<br/>              \n    4 | Jims Secret Recipe      |<br/>              \n    5 | Elisabeths Best Apples  |<br/>              \n    6 | Janes Favorite Cheese   | Dairy Products<br/>              \n    7 | Billys Home Made Pizza  |<br/>              \n    8 | Ellas Special Salmon    | Seafood<br/>              \n    9 | Roberts Rich Spaghetti  | Grains/Cereals<br/>             \n    10 | Mias Popular Ice        |<br/>                \n    |                         \n    | Condiments<br/>                \n    |                         \n    | Meat/Poultry<br/>                \n    |                         \n    | Beverages<br/>                \n    |                         \n    | Produce<br/>(14 rows)<br/>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_full_join.php"
      }
    },
    {
      "title": "PostgreSQL CROSS JOIN",
      "code": [
        {
          "text": "testproduct_id |      product_name      | category_id\n----------------+------------------------+-------------\n1 | Johns Fruit Cake       |           3\n2 | Marys Healthy Mix      |           9\n3 | Peters Scary Stuff     |          10\n4 | Jims Secret Recipe     |          11\n5 | Elisabeths Best Apples |          12\n6 | Janes Favorite Cheese  |           4\n7 | Billys Home Made Pizza |          13\n8 | Ellas Special Salmon   |           8\n9 | Roberts Rich Spaghetti |           5\n10 | Mias Popular Ice       |          14\n(10 rows)",
          "html": "testproduct_id |      product_name      \n    | category_id<br/>----------------+------------------------+-------------<br/>              \n    1 | Johns Fruit Cake       |           \n    3<br/>              \n    2 | Marys Healthy Mix      |           \n    9<br/>              \n    3 | Peters Scary Stuff     |          \n    10<br/>              \n    4 | Jims Secret Recipe     |          \n    11<br/>              \n    5 | Elisabeths Best Apples |          \n    12<br/>              \n    6 | Janes Favorite Cheese  |           \n    4<br/>              \n    7 | Billys Home Made Pizza |          \n    13<br/>              \n    8 | Ellas Special Salmon   |           \n    8<br/>              \n    9 | Roberts Rich Spaghetti |           \n    5<br/>             10 | Mias Popular Ice       |          \n    14<br/>(10 rows)"
        },
        {
          "text": "category_id | category_name  |                       description\n-------------+----------------+------------------------------------------------------------\n1 | Beverages      | Soft drinks, coffees, teas, beers, and ales\n2 | Condiments     | Sweet and savory sauces, relishes, spreads, and seasonings\n3 | Confections    | Desserts, candies, and sweet breads\n4 | Dairy Products | Cheeses\n5 | Grains/Cereals | Breads, crackers, pasta, and cereal\n6 | Meat/Poultry   | Prepared meats\n7 | Produce        | Dried fruit and bean curd\n8 | Seafood        | Seaweed and fish\n(8 rows)",
          "html": "category_id | category_name  |                       \n    description<br/>\n    -------------+----------------+------------------------------------------------------------<br/>           \n    1 | Beverages      | Soft drinks, coffees, teas, \n    beers, and ales<br/>           \n    2 | Condiments     | Sweet and savory sauces, relishes, \n    spreads, and seasonings<br/>           \n    3 | Confections    | Desserts, candies, and sweet breads<br/>           \n    4 | Dairy Products | Cheeses<br/>           \n    5 | Grains/Cereals | Breads, crackers, pasta, and cereal<br/>           \n    6 | Meat/Poultry   | Prepared meats<br/>           \n    7 | Produce        | Dried fruit and bean \n    curd<br/>           8 | \n    Seafood        | Seaweed and fish<br/>(8 \n    rows)"
        },
        {
          "text": "SELECT testproduct_id, product_name, category_name\nFROM testproducts\nCROSS JOIN categories;",
          "html": "SELECT \n        testproduct_id, product_name, category_name<br/>\n        FROM testproducts<br/>\n        CROSS JOIN categories;"
        },
        {
          "text": "testproduct_id |      product_name      | category_name\n----------------+------------------------+----------------\n1 | Johns Fruit Cake       | Beverages\n1 | Johns Fruit Cake       | Condiments\n1 | Johns Fruit Cake       | Confections\n1 | Johns Fruit Cake       | Dairy Products\n1 | Johns Fruit Cake       | Grains/Cereals\n1 | Johns Fruit Cake       | Meat/Poultry\n1 | Johns Fruit Cake       | Produce\n1 | Johns Fruit Cake       | Seafood\n2 | Marys Healthy Mix      | Beverages\n2 | Marys Healthy Mix      | Condiments\n2 | Marys Healthy Mix      | Confections\n2 | Marys Healthy Mix      | Dairy Products\n2 | Marys Healthy Mix      | Grains/Cereals\n2 | Marys Healthy Mix      | Meat/Poultry\n2 | Marys Healthy Mix      | Produce\n2 | Marys Healthy Mix      | Seafood\n3 | Peters Scary Stuff     | Beverages\n3 | Peters Scary Stuff     | Condiments\n3 | Peters Scary Stuff     | Confections\n3 | Peters Scary Stuff     | Dairy Products\n3 | Peters Scary Stuff     | Grains/Cereals\n3 | Peters Scary Stuff     | Meat/Poultry\n3 | Peters Scary Stuff     | Produce\n3 | Peters Scary Stuff     | Seafood\n4 | Jims Secret Recipe     | Beverages\n4 | Jims Secret Recipe     | Condiments\n4 | Jims Secret Recipe     | Confections\n4 | Jims Secret Recipe     | Dairy Products\n4 | Jims Secret Recipe     | Grains/Cereals\n4 | Jims Secret Recipe     | Meat/Poultry\n4 | Jims Secret Recipe     | Produce\n4 | Jims Secret Recipe     | Seafood\n5 | Elisabeths Best Apples | Beverages\n5 | Elisabeths Best Apples | Condiments\n5 | Elisabeths Best Apples | Confections\n5 | Elisabeths Best Apples | Dairy Products\n5 | Elisabeths Best Apples | Grains/Cereals\n5 | Elisabeths Best Apples | Meat/Poultry\n5 | Elisabeths Best Apples | Produce\n5 | Elisabeths Best Apples | Seafood\n6 | Janes Favorite Cheese  | Beverages\n6 | Janes Favorite Cheese  | Condiments\n6 | Janes Favorite Cheese  | Confections\n6 | Janes Favorite Cheese  | Dairy Products\n6 | Janes Favorite Cheese  | Grains/Cereals\n6 | Janes Favorite Cheese  | Meat/Poultry\n6 | Janes Favorite Cheese  | Produce\n6 | Janes Favorite Cheese  | Seafood\n7 | Billys Home Made Pizza | Beverages\n7 | Billys Home Made Pizza | Condiments\n7 | Billys Home Made Pizza | Confections\n7 | Billys Home Made Pizza | Dairy Products\n7 | Billys Home Made Pizza | Grains/Cereals\n7 | Billys Home Made Pizza | Meat/Poultry\n7 | Billys Home Made Pizza | Produce\n7 | Billys Home Made Pizza | Seafood\n8 | Ellas Special Salmon   | Beverages\n8 | Ellas Special Salmon   | Condiments\n8 | Ellas Special Salmon   | Confections\n8 | Ellas Special Salmon   | Dairy Products\n8 | Ellas Special Salmon   | Grains/Cereals\n8 | Ellas Special Salmon   | Meat/Poultry\n8 | Ellas Special Salmon   | Produce\n8 | Ellas Special Salmon   | Seafood\n9 | Roberts Rich Spaghetti | Beverages\n9 | Roberts Rich Spaghetti | Condiments\n9 | Roberts Rich Spaghetti | Confections\n9 | Roberts Rich Spaghetti | Dairy Products\n9 | Roberts Rich Spaghetti | Grains/Cereals\n9 | Roberts Rich Spaghetti | Meat/Poultry\n9 | Roberts Rich Spaghetti | Produce\n9 | Roberts Rich Spaghetti | Seafood\n10 | Mias Popular Ice       | Beverages\n10 | Mias Popular Ice       | Condiments\n10 | Mias Popular Ice       | Confections\n10 | Mias Popular Ice       | Dairy Products\n10 | Mias Popular Ice       | Grains/Cereals\n10 | Mias Popular Ice       | Meat/Poultry\n10 | Mias Popular Ice       | Produce\n10 | Mias Popular Ice       | Seafood\n(80 rows)",
          "html": "testproduct_id \n    |      product_name      | \n    category_name<br/>----------------+------------------------+----------------<br/>              \n    1 | Johns Fruit Cake       | Beverages<br/>              \n    1 | Johns Fruit Cake       | Condiments<br/>              \n    1 | Johns Fruit Cake       | Confections<br/>              \n    1 | Johns Fruit Cake       | Dairy Products<br/>              \n    1 | Johns Fruit Cake       | Grains/Cereals<br/>              \n    1 | Johns Fruit Cake       | Meat/Poultry<br/>              \n    1 | Johns Fruit Cake       | Produce<br/>              \n    1 | Johns Fruit Cake       | Seafood<br/>              \n    2 | Marys Healthy Mix      | Beverages<br/>              \n    2 | Marys Healthy Mix      | Condiments<br/>              \n    2 | Marys Healthy Mix      | Confections<br/>              \n    2 | Marys Healthy Mix      | Dairy Products<br/>              \n    2 | Marys Healthy Mix      | Grains/Cereals<br/>              \n    2 | Marys Healthy Mix      | Meat/Poultry<br/>              \n    2 | Marys Healthy Mix      | Produce<br/>              \n    2 | Marys Healthy Mix      | Seafood<br/>              \n    3 | Peters Scary Stuff     | Beverages<br/>              \n    3 | Peters Scary Stuff     | Condiments<br/>              \n    3 | Peters Scary Stuff     | Confections<br/>              \n    3 | Peters Scary Stuff     | Dairy Products<br/>              \n    3 | Peters Scary Stuff     | Grains/Cereals<br/>              \n    3 | Peters Scary Stuff     | Meat/Poultry<br/>              \n    3 | Peters Scary Stuff     | Produce<br/>              \n    3 | Peters Scary Stuff     | Seafood<br/>              \n    4 | Jims Secret Recipe     | Beverages<br/>              \n    4 | Jims Secret Recipe     | Condiments<br/>              \n    4 | Jims Secret Recipe     | Confections<br/>              \n    4 | Jims Secret Recipe     | Dairy Products<br/>              \n    4 | Jims Secret Recipe     | Grains/Cereals<br/>              \n    4 | Jims Secret Recipe     | Meat/Poultry<br/>              \n    4 | Jims Secret Recipe     | Produce<br/>              \n    4 | Jims Secret Recipe     | Seafood<br/>              \n    5 | Elisabeths Best Apples | Beverages<br/>              \n    5 | Elisabeths Best Apples | Condiments<br/>              \n    5 | Elisabeths Best Apples | Confections<br/>              \n    5 | Elisabeths Best Apples | Dairy Products<br/>              \n    5 | Elisabeths Best Apples | Grains/Cereals<br/>              \n    5 | Elisabeths Best Apples | Meat/Poultry<br/>              \n    5 | Elisabeths Best Apples | Produce<br/>              \n    5 | Elisabeths Best Apples | Seafood<br/>              \n    6 | Janes Favorite Cheese  | Beverages<br/>              \n    6 | Janes Favorite Cheese  | Condiments<br/>              \n    6 | Janes Favorite Cheese  | Confections<br/>              \n    6 | Janes Favorite Cheese  | Dairy Products<br/>              \n    6 | Janes Favorite Cheese  | Grains/Cereals<br/>              \n    6 | Janes Favorite Cheese  | Meat/Poultry<br/>              \n    6 | Janes Favorite Cheese  | Produce<br/>              \n    6 | Janes Favorite Cheese  | Seafood<br/>              \n    7 | Billys Home Made Pizza | Beverages<br/>              \n    7 | Billys Home Made Pizza | Condiments<br/>              \n    7 | Billys Home Made Pizza | Confections<br/>              \n    7 | Billys Home Made Pizza | Dairy Products<br/>              \n    7 | Billys Home Made Pizza | Grains/Cereals<br/>              \n    7 | Billys Home Made Pizza | Meat/Poultry<br/>              \n    7 | Billys Home Made Pizza | Produce<br/>              \n    7 | Billys Home Made Pizza | Seafood<br/>              \n    8 | Ellas Special Salmon   | Beverages<br/>              \n    8 | Ellas Special Salmon   | Condiments<br/>              \n    8 | Ellas Special Salmon   | Confections<br/>              \n    8 | Ellas Special Salmon   | Dairy Products<br/>              \n    8 | Ellas Special Salmon   | Grains/Cereals<br/>              \n    8 | Ellas Special Salmon   | Meat/Poultry<br/>              \n    8 | Ellas Special Salmon   | Produce<br/>              \n    8 | Ellas Special Salmon   | Seafood<br/>              \n    9 | Roberts Rich Spaghetti | Beverages<br/>              \n    9 | Roberts Rich Spaghetti | Condiments<br/>              \n    9 | Roberts Rich Spaghetti | Confections<br/>              \n    9 | Roberts Rich Spaghetti | Dairy Products<br/>              \n    9 | Roberts Rich Spaghetti | Grains/Cereals<br/>              \n    9 | Roberts Rich Spaghetti | Meat/Poultry<br/>              \n    9 | Roberts Rich Spaghetti | Produce<br/>              \n    9 | Roberts Rich Spaghetti | Seafood<br/>             \n    10 | Mias Popular Ice       | Beverages<br/>             \n    10 | Mias Popular Ice       | Condiments<br/>             \n    10 | Mias Popular Ice       | Confections<br/>             \n    10 | Mias Popular Ice       | Dairy Products<br/>             \n    10 | Mias Popular Ice       | Grains/Cereals<br/>             \n    10 | Mias Popular Ice       | Meat/Poultry<br/>             \n    10 | Mias Popular Ice       | Produce<br/>             \n    10 | Mias Popular Ice       | Seafood<br/>(80 \n    rows)<br/>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_cross_join.php"
      }
    },
    {
      "title": "PostgreSQL UNION Operator",
      "code": [
        {
          "text": "SELECT product_id, product_name\nFROM products\nUNION\nSELECT testproduct_id, product_name\nFROM testproducts\nORDER BY product_id;",
          "html": "SELECT \n        product_id, product_name<br/>FROM products<br/>UNION<br/>SELECT \n        testproduct_id, product_name<br/>FROM testproducts<br/>ORDER BY product_id;"
        },
        {
          "text": "SELECT product_id\nFROM products\nUNION\nSELECT testproduct_id\nFROM testproducts\nORDER BY product_id;",
          "html": "SELECT \n        product_id<br/>FROM products<br/>UNION<br/>SELECT \n        testproduct_id<br/>FROM testproducts<br/>ORDER BY product_id;"
        },
        {
          "text": "SELECT product_id\nFROM products\nUNION ALL\nSELECT testproduct_id\nFROM testproducts\nORDER BY product_id;",
          "html": "SELECT \n        product_id<br/>FROM products<br/>UNION ALL<br/>SELECT \n        testproduct_id<br/>FROM testproducts<br/>ORDER BY product_id;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_union.php"
      }
    },
    {
      "title": "PostgreSQL GROUP BY Clause",
      "code": [
        {
          "text": "SELECT COUNT(customer_id), country\nFROM customers\nGROUP BY country;",
          "html": "SELECT COUNT(customer_id), country<br/>\n        FROM customers<br/>\n        GROUP BY country;"
        },
        {
          "text": "SELECT customers.customer_name, COUNT(orders.order_id)\nFROM orders\nLEFT JOIN customers ON orders.customer_id = customers.customer_id\nGROUP BY customer_name;",
          "html": "SELECT customers.customer_name, COUNT(orders.order_id)<br/>\nFROM orders<br/>\nLEFT JOIN customers ON orders.customer_id = customers.customer_id<br/>\nGROUP BY customer_name;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_groupby.php"
      }
    },
    {
      "title": "PostgreSQL HAVING Clause",
      "code": [
        {
          "text": "SELECT COUNT(customer_id), country\nFROM customers\nGROUP BY country\nHAVING COUNT(customer_id) > 5;",
          "html": "SELECT COUNT(customer_id), country<br/>\n        FROM customers<br/>\n        GROUP BY country<br/>\n        HAVING COUNT(customer_id) &gt; 5;"
        },
        {
          "text": "SELECT order_details.order_id, SUM(products.price)\nFROM order_details\nLEFT JOIN products ON order_details.product_id = products.product_id\nGROUP BY order_id\nHAVING SUM(products.price) > 400.00;",
          "html": "SELECT order_details.order_id, SUM(products.price)<br/>\nFROM order_details<br/>\nLEFT JOIN products ON order_details.product_id = products.product_id<br/>\nGROUP BY order_id<br/>\nHAVING SUM(products.price) &gt; 400.00;"
        },
        {
          "text": "SELECT customers.customer_name, SUM(products.price)\nFROM order_details\nLEFT JOIN products ON order_details.product_id = products.product_id\nLEFT JOIN orders ON order_details.order_id = orders.order_id\nLEFT JOIN customers ON orders.customer_id = customers.customer_id\nGROUP BY customer_name\nHAVING SUM(products.price) > 1000.00;",
          "html": "SELECT customers.customer_name, SUM(products.price)<br/>\nFROM order_details<br/>\nLEFT JOIN products ON order_details.product_id = products.product_id<br/>\nLEFT JOIN orders ON order_details.order_id = orders.order_id<br/>\nLEFT JOIN customers ON orders.customer_id = customers.customer_id<br/>\nGROUP BY customer_name<br/>\nHAVING SUM(products.price) &gt; 1000.00;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_having.php"
      }
    },
    {
      "title": "PostgreSQL EXISTS Operator",
      "code": [
        {
          "text": "SELECT customers.customer_name\nFROM customers\nWHERE EXISTS (\nSELECT order_id\nFROM orders\nWHERE customer_id = customers.customer_id\n);",
          "html": "SELECT customers.customer_name<br/>\nFROM customers<br/>\nWHERE EXISTS (<br/>\n \nSELECT order_id<br/> \nFROM orders<br/>  WHERE customer_id = customers.customer_id<br/>);"
        },
        {
          "text": "SELECT customers.customer_name\nFROM customers\nWHERE NOT EXISTS (\nSELECT order_id\nFROM orders\nWHERE customer_id = customers.customer_id\n);",
          "html": "SELECT customers.customer_name<br/>\nFROM customers<br/>\nWHERE NOT EXISTS (<br/>\n \nSELECT order_id<br/> \nFROM orders<br/>  WHERE customer_id = customers.customer_id<br/>);"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_exists.php"
      }
    },
    {
      "title": "PostgreSQL ANY Operator",
      "code": [
        {
          "text": "SELECT product_name\nFROM products\nWHERE product_id = ANY (\nSELECT product_id\nFROM order_details\nWHERE quantity > 120\n);",
          "html": "SELECT product_name<br/>FROM products<br/>WHERE product_id = ANY (<br/>  SELECT \n        product_id<br/>  FROM order_details<br/>  WHERE quantity &gt; 120\n        <br/>);"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_any.php"
      }
    },
    {
      "title": "PostgreSQL ALL Operator",
      "code": [
        {
          "text": "SELECT product_name\nFROM products\nWHERE product_id = ALL (\nSELECT product_id\nFROM order_details\nWHERE quantity > 10\n);",
          "html": "SELECT product_name<br/>FROM products<br/>WHERE product_id = ALL (<br/>  SELECT \n        product_id<br/>  FROM order_details<br/>  WHERE quantity &gt; 10\n        <br/>);"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_all.php"
      }
    },
    {
      "title": "PostgreSQL CASE Expression",
      "code": [
        {
          "text": "SELECT product_name,\nCASE\nWHEN price < 10 THEN 'Low price product'\nWHEN price > 50 THEN 'High price product'\nELSE\n'Normal product'\nEND\nFROM products;",
          "html": "SELECT product_name,<br/>\nCASE<br/> \n  WHEN price &lt; 10 THEN 'Low price product'<br/>  WHEN price &gt; 50 THEN 'High \n        price product'<br/>ELSE<br/>  'Normal product'<br/>END<br/>FROM \n        products;"
        },
        {
          "text": "SELECT product_name,\nCASE\nWHEN price < 10 THEN 'Low price product'\nWHEN price > 50 THEN 'High price product'\nELSE\n'Normal product'\nEND AS \"price category\"\nFROM products;",
          "html": "SELECT product_name,<br/>\nCASE<br/> \n  WHEN price &lt; 10 THEN 'Low price product'<br/>  WHEN price &gt; 50 THEN 'High \n        price product'<br/>ELSE<br/>  'Normal product'<br/>END AS \"price category\"<br/>FROM \n        products;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_case.php"
      }
    },
    {
      "title": "PostgreSQL Syllabus",
      "code": [
        {
          "text": "SELECT * FROM cars\nORDER BY year;",
          "html": "SELECT * FROM cars<br/>\n          ORDER BY year;"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/postgresql/postgresql_syllabus.php"
      }
    }
  ]
}