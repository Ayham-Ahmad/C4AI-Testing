{
  "course_name": "Css",
  "description": "CSS is the language we use to style an HTML document. CSS describes how HTML elements should be displayed. This tutorial will teach you CSS from basic to advanced. Tip: Sign in to track your progress - it's free. This CSS tutorial contains hundreds of CSS examples. With our online editor, you can edit the CSS, and click on a button to view the result. Click on the \"Try it Yourself\" button to see how it works. Learn from over 300 examples! With our editor, you can edit the CSS, and click on a button to view the result. Go to CSS Examples! We recommend reading this tutorial, in the sequence listed in the menu. If you have a large screen, the menu will always be present on the left. If you have a small screen, open the menu by clicking the top menu sign ☰. We have created some responsive W3.CSS templates for you to use. You are free to modify, save, share, and use them in all your projects. Free CSS Templates!",
  "course_summary": [
    {
      "title": "CSS Introduction",
      "summary": "What is CSS?\nCSS is the language we use to style a Web page.\nCSS stands for Cascading Style Sheets\nCSS describes how HTML elements are to be displayed on screen, paper, or in other media\nCSS saves a lot of work. It can control the layout of multiple web pages all at once\nExternal stylesheets are stored in CSS files\nCSS Demo - One HTML Page - Multiple Styles!\nHere we will show one HTML page displayed with four different stylesheets. Click on the \"Stylesheet 1\", \"Stylesheet 2\", \"Stylesheet 3\", \"Stylesheet 4\" links below to see the different styles:\nREMOVE ADS\nWhy Use CSS?\nCSS is used to define styles for your web pages, including the design, layout and variations in display for different devices and screen sizes.\nCSS Example\nCSS Saves a Lot of Work!\nThe CSS definitions are normally saved in an external .css file.\nWith an external stylesheet file, you can change the look of an entire website by changing just one file!\nVideo: CSS Introduction",
      "examples": [
        "body {\nbackground-color: lightblue;\n}\n\nh1 {\ncolor: white;\ntext-align: center;\n}\n\np {\nfont-family: verdana;\nfont-size: 20px;\n}"
      ]
    },
    {
      "title": "CSS Syntax",
      "summary": "CSS Syntax\nA CSS rule consists of a selector and a declaration block:\nThe selector points to the HTML element you want to style.\nThe declaration block contains one or more declarations separated by semicolons.\nEach declaration includes a CSS property name and a value, separated by a colon.\nMultiple CSS declarations are separated with semicolons, and declaration blocks are surrounded by curly braces.\nExample\nIn this example all <p> elements will be center-aligned, with a red text color:\np is a selector in CSS (it points to the HTML element you want to style: <p>).\ncolor is a property, and red is the property value\ntext-align is a property, and center is the property value\nYou will learn much more about CSS selectors and CSS properties in the next chapters!\nVideo: CSS Syntax",
      "examples": [
        "p {\ncolor: red;\ntext-align: center;\n}",
        "p",
        "color",
        "red",
        "text-align",
        "center"
      ]
    },
    {
      "title": "CSS Selectors",
      "summary": "CSS Selectors\nCSS selectors are used to \"find\" (or select) the HTML elements you want to style.\nWe can divide CSS selectors into five categories:\nSimple selectors (select elements based on name, id, class)\nCombinator selectors (select elements based on a specific relationship between them)\nPseudo-class selectors (select elements based on a certain state)\nPseudo-elements selectors (select and style a part of an element)\nAttribute selectors (select elements based on an attribute or attribute value)\nThis page will explain the most basic CSS selectors.\nThe CSS element Selector\nThe element selector selects HTML elements based on the element name.\nExample\nHere, all <p> elements on the page will be center-aligned, with a red text color:\nThe CSS id Selector\nThe id selector uses the id attribute of an HTML element to select a specific element.\nThe id of an element is unique within a page, so the id selector is used to select one unique element!\nTo select an element with a specific id, write a hash (#) character, followed by the id of the element.\nExample\nThe CSS rule below will be applied to the HTML element with id=\"para1\":\nNote: An id name cannot start with a number!\nREMOVE ADS\nThe CSS class Selector\nThe class selector selects HTML elements with a specific class attribute.\nTo select elements with a specific class, write a period (.) character, followed by the class name.\nExample\nIn this example all HTML elements with class=\"center\" will be red and center-aligned:\nYou can also specify that only specific HTML elements should be affected by a class.\nExample\nIn this example only <p> elements with class=\"center\" will be red and center-aligned:\nHTML elements can also refer to more than one class.\nExample\nIn this example the <p> element will be styled according to class=\"center\" and to class=\"large\":\nNote: A class name cannot start with a number!\nThe CSS Universal Selector\nThe universal selector (*) selects all HTML elements on the page.\nExample\nThe CSS rule below will affect every HTML element on the page:\nThe CSS Grouping Selector\nThe grouping selector selects all the HTML elements with the same style definitions.\nLook at the following CSS code (the h1, h2, and p elements have the same style definitions):\nIt will be better to group the selectors, to minimize the code.\nTo group selectors, separate each selector with a comma.\nExample\nIn this example we have grouped the selectors from the code above:\nAll CSS Simple Selectors\nVideo: CSS Simple Selectors",
      "examples": [
        "p {\ntext-align: center;\ncolor: red;\n}",
        "#para1 {\ntext-align: center;\ncolor: red;\n}",
        ".center {\ntext-align: center;\ncolor: red;\n}",
        "p.center {\ntext-align: center;\ncolor: red;\n}",
        "<p class=\"center large\">This paragraph refers to two classes.</p>",
        "* {\ntext-align: center;\ncolor: blue;\n}",
        "h1 {\ntext-align: center;\ncolor: red;\n}\n\nh2 {\ntext-align: center;\ncolor: red;\n}\n\np {\ntext-align: center;\ncolor: red;\n}",
        "h1, h2, p {\ntext-align: center;\ncolor: red;\n}",
        "element",
        "id",
        "class",
        "universal selector (*)",
        "grouping selector"
      ]
    },
    {
      "title": "How To Add CSS",
      "summary": "How to Add CSS\nWhen a browser reads a style sheet, it will format the HTML document according to the information in the style sheet.\nThere are three ways of inserting a style sheet:\nExternal CSS\nInternal CSS\nInline CSS\nExternal CSS\nWith an external style sheet, you can change the look of an entire website by changing just one file!\nEach HTML page must include a reference to the external style sheet file inside the <link> element, inside the head section.\nExample\nExternal styles are defined within the <link> element, inside the <head> section of an HTML page:\nAn external style sheet can be written in any text editor, and must be saved with a .css extension.\nThe external .css file should not contain any HTML tags.\nHere is how the \"mystyle.css\" file looks:\n\"mystyle.css\"\nNote: Do not add a space between the property value (20) and the unit (px):\nIncorrect (space): margin-left: 20 px;\nCorrect (no space): margin-left: 20px;\nREMOVE ADS\nInternal CSS\nAn internal style sheet may be used if one single HTML page has a unique style.\nThe internal style is defined inside the <style> element, inside the head section.\nExample\nInternal styles are defined within the <style> element, inside the <head> section of an HTML page:\nInline CSS\nAn inline style may be used to apply a unique style for a single element.\nTo use inline styles, add the style attribute to the relevant element. The style attribute can contain any CSS property.\nExample\nInline styles are defined within the \"style\" attribute of the relevant element:\nTip: An inline style loses many of the advantages of a style sheet (by mixing content with presentation). Use this method sparingly.\nMultiple Style Sheets\nIf some properties have been defined for the same selector (element) in different style sheets, the value from the last read style sheet will be used.\nAssume that an external style sheet has the following style for the <h1> element:\nThen, assume that an internal style sheet also has the following style for the <h1> element:\nExample\nIf the internal style is defined after the link to the external style sheet, the <h1> elements will be \"orange\":\nExample\nHowever, if the internal style is defined before the link to the external style sheet, the <h1> elements will be \"navy\":\nCascading Order\nWhat style will be used when there is more than one style specified for an HTML element?\nAll the styles in a page will \"cascade\" into a new \"virtual\" style sheet by the following rules, where number one has the highest priority:\nInline style (inside an HTML element)\nExternal and internal style sheets (in the head section)\nBrowser default\nSo, an inline style has the highest priority, and will override external and internal styles and browser defaults.\nTry it Yourself »\nEver heard about W3Schools Spaces? Here you can create your own website, or save code snippets for later use, for free.\n* no credit card required\nVideo: How to add CSS to HTML",
      "examples": [
        "<!DOCTYPE html>\n<html>\n<head>\n<link rel=\"stylesheet\" href=\"mystyle.css\">\n</head>\n<body>\n\n<h1>This is a heading</h1>\n<p>This is a paragraph.</p>\n\n</body>\n</html>",
        "body {\nbackground-color: lightblue;\n}\n\nh1 {\ncolor: navy;\nmargin-left: 20px;\n}",
        "<!DOCTYPE html>\n<html>\n<head>\n<style>\nbody {\nbackground-color: linen;\n}\n\nh1 {\ncolor: maroon;\nmargin-left: 40px;\n}\n</style>\n</head>\n<body>\n\n<h1>This is a heading</h1>\n<p>This is a paragraph.</p>\n\n</body>\n</html>",
        "<!DOCTYPE html>\n<html>\n<body>\n\n<h1 style=\"color:blue;text-align:center;\">This is a heading</h1>\n<p style=\"color:red;\">This is a paragraph.</p>\n\n</body>\n</html>",
        "h1 {\ncolor: navy;\n}",
        "h1 {\ncolor: orange;\n}",
        "<head>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\">\n<style>\nh1 {\ncolor: orange;\n}\n</style>\n</head>",
        "<head>\n<style>\nh1 {\ncolor: orange;\n}\n</style>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\">\n</head>",
        "margin-left: 20 px;",
        "margin-left: 20px;"
      ]
    }
  ],
  "glossary": []
}