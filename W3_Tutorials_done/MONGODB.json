{
  "language": "MONGODB",
  "tutorials": [
    {
      "title": "MongoDB Tutorial",
      "code": [
        {
          "text": "{ title: \"Post Title 1\", body: \"Body of post.\", category: \"News\", likes: 1, tags: [\"news\", \"events\"], date: Date() }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\ttitle<span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 1\"</span><span class=\"token punctuation\">,</span>\n\tbody<span class=\"token operator\">:</span> <span class=\"token string\">\"Body of post.\"</span><span class=\"token punctuation\">,</span>\n\tcategory<span class=\"token operator\">:</span> <span class=\"token string\">\"News\"</span><span class=\"token punctuation\">,</span>\n\tlikes<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\ttags<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"news\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"events\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\tdate<span class=\"token operator\">:</span> Date()\n<span class=\"token punctuation\">}</span>\n</code>"
        },
        {
          "text": "db.posts.find( {category: \"News\"} )",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"News\"</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/index.php"
      }
    },
    {
      "title": "MongoDB Getting Started",
      "code": [
        {
          "text": "mongosh --version",
          "html": "mongosh --version"
        },
        {
          "text": "mongosh \"mongodb+srv://cluster0.ex4ht.mongodb.net/myFirstDatabase\" --apiVersion 1 --username YOUR_USER_NAME",
          "html": "mongosh \"mongodb+srv://cluster0.ex4ht.mongodb.net/myFirstDatabase\" --apiVersion 1 --username YOUR_USER_NAME"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_get_started.php"
      }
    },
    {
      "title": "MongoDB mongosh Create Database",
      "code": [
        {
          "text": "use blog",
          "html": "use blog"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_mongosh_create_database.php"
      }
    },
    {
      "title": "MongoDB mongosh Create Collection",
      "code": [
        {
          "text": "db.createCollection(\"posts\")",
          "html": "db.createCollection(\"posts\")"
        },
        {
          "text": "db.posts.insertOne(object)",
          "html": "db.posts.insertOne(object)"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_mongosh_create_collection.php"
      }
    },
    {
      "title": "MongoDB mongosh Insert",
      "code": [
        {
          "text": "db.posts.insertOne({ title: \"Post Title 1\", body: \"Body of post.\", category: \"News\", likes: 1, tags: [\"news\", \"events\"], date: Date() })",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">insertOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Body of post.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"News\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"news\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"events\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.insertMany([ { title: \"Post Title 2\", body: \"Body of post.\", category: \"Event\", likes: 2, tags: [\"news\", \"events\"], date: Date() }, { title: \"Post Title 3\", body: \"Body of post.\", category: \"Technology\", likes: 3, tags: [\"news\", \"events\"], date: Date() }, { title: \"Post Title 4\", body: \"Body of post.\", category: \"Event\", likes: 4, tags: [\"news\", \"events\"], date: Date() } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">insertMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>  \n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Body of post.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Event\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"news\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"events\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Body of post.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Technology\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"news\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"events\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 4\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Body of post.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Event\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"news\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"events\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_mongosh_insert.php"
      }
    },
    {
      "title": "MongoDB mongosh Find",
      "code": [
        {
          "text": "db.posts.find()",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.findOne()",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.find( {category: \"News\"} )",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"News\"</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.find({}, {title: 1, date: 1})",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.find({}, {_id: 0, title: 1, date: 1})",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">_id</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.find({}, {category: 0})",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_mongosh_find.php"
      }
    },
    {
      "title": "MongoDB mongosh Update",
      "code": [
        {
          "text": "db.posts.find( { title: \"Post Title 1\" } )",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 1\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span> \n</code>"
        },
        {
          "text": "db.posts.updateOne( { title: \"Post Title 1\" }, { $set: { likes: 2 } } )",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">updateOne</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 1\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$set</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span> \n</code>"
        },
        {
          "text": "db.posts.updateOne( { title: \"Post Title 5\" }, { $set: { title: \"Post Title 5\", body: \"Body of post.\", category: \"Event\", likes: 5, tags: [\"news\", \"events\"], date: Date() } }, { upsert: true } )",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">updateOne</span><span class=\"token punctuation\">(</span> \n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 5\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$set</span><span class=\"token operator\">:</span> \n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 5\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Body of post.\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Event\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"news\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"events\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">upsert</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.updateMany({}, { $inc: { likes: 1 } })",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">updateMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$inc</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_mongosh_update.php"
      }
    },
    {
      "title": "MongoDB mongosh Delete",
      "code": [
        {
          "text": "db.posts.deleteOne({ title: \"Post Title 5\" })",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">deleteOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post Title 5\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        },
        {
          "text": "db.posts.deleteMany({ category: \"Technology\" })",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">deleteMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Technology\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_mongosh_delete.php"
      }
    },
    {
      "title": "MongoDB Aggregation Pipelines",
      "code": [
        {
          "text": "db.posts.aggregate([ // Stage 1: Only find documents that have more than 1 like { $match: { likes: { $gt: 1 } } }, // Stage 2: Group documents by category and sum each categories likes { $group: { _id: \"$category\", totalLikes: { $sum: \"$likes\" } } } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// Stage 1: Only find documents that have more than 1 like</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$match</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$gt</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Stage 2: Group documents by category and sum each categories likes</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$group</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">_id</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$category\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">totalLikes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$sum</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$likes\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_intro.php"
      }
    },
    {
      "title": "MongoDB Aggregation $group",
      "code": [
        {
          "text": "db.listingsAndReviews.aggregate( [ { $group : { _id : \"$property_type\" } } ] )",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>listingsAndReviews<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$group</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">_id</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"$property_type\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_group.php"
      }
    },
    {
      "title": "MongoDB Aggregation $limit",
      "code": [
        {
          "text": "db.movies.aggregate([ { $limit: 1 } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>movies<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$limit</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_limit.php"
      }
    },
    {
      "title": "MongoDB Aggregation $project",
      "code": [
        {
          "text": "db.restaurants.aggregate([ { $project: { \"name\": 1, \"cuisine\": 1, \"address\": 1 } }, { $limit: 5 } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>restaurants<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$project</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"cuisine\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"address\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$limit</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_project.php"
      }
    },
    {
      "title": "MongoDB Aggregation $sort",
      "code": [
        {
          "text": "db.listingsAndReviews.aggregate([ { $sort: { \"accommodates\": -1 } }, { $project: { \"name\": 1, \"accommodates\": 1 } }, { $limit: 5 } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>listingsAndReviews<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> \n  <span class=\"token punctuation\">{</span> \n    <span class=\"token literal-property property\">$sort</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"accommodates\"</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$project</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"accommodates\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$limit</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_sort.php"
      }
    },
    {
      "title": "MongoDB Aggregation $match",
      "code": [
        {
          "text": "db.listingsAndReviews.aggregate([ { $match : { property_type : \"House\" } }, { $limit: 2 }, { $project: { \"name\": 1, \"bedrooms\": 1, \"price\": 1 }} ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>listingsAndReviews<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> \n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$match</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">property_type</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"House\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$limit</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$project</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"bedrooms\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_match.php"
      }
    },
    {
      "title": "MongoDB Aggregation $addFields",
      "code": [
        {
          "text": "db.restaurants.aggregate([ { $addFields: { avgGrade: { $avg: \"$grades.score\" } } }, { $project: { \"name\": 1, \"avgGrade\": 1 } }, { $limit: 5 } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>restaurants<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$addFields</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">avgGrade</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$avg</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$grades.score\"</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$project</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"avgGrade\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$limit</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_addFields.php"
      }
    },
    {
      "title": "MongoDB Aggregation $count",
      "code": [
        {
          "text": "db.restaurants.aggregate([ { $match: { \"cuisine\": \"Chinese\" } }, { $count: \"totalChinese\" } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>restaurants<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$match</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"cuisine\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Chinese\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$count</span><span class=\"token operator\">:</span> <span class=\"token string\">\"totalChinese\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_count.php"
      }
    },
    {
      "title": "MongoDB Aggregation $lookup",
      "code": [
        {
          "text": "db.comments.aggregate([ { $lookup: { from: \"movies\", localField: \"movie_id\", foreignField: \"_id\", as: \"movie_details\", }, }, { $limit: 1 } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$lookup</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-from\">from</span><span class=\"token operator\">:</span> <span class=\"token string\">\"movies\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">localField</span><span class=\"token operator\">:</span> <span class=\"token string\">\"movie_id\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">foreignField</span><span class=\"token operator\">:</span> <span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword keyword-as\">as</span><span class=\"token operator\">:</span> <span class=\"token string\">\"movie_details\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$limit</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_lookup.php"
      }
    },
    {
      "title": "MongoDB Aggregation $out",
      "code": [
        {
          "text": "db.listingsAndReviews.aggregate([ { $group: { _id: \"$property_type\", properties: { $push: { name: \"$name\", accommodates: \"$accommodates\", price: \"$price\", }, }, }, }, { $out: \"properties_by_type\" }, ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>listingsAndReviews<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$group</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">_id</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$property_type\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">properties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">$push</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$name\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">accommodates</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$accommodates\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$price\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">$out</span><span class=\"token operator\">:</span> <span class=\"token string\">\"properties_by_type\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_aggregations_out.php"
      }
    },
    {
      "title": "Indexing & Search",
      "code": [
        {
          "text": "db.movies.aggregate([ { $search: { index: \"default\", // optional unless you named your index something other than \"default\" text: { query: \"star wars\", path: \"title\" }, }, }, { $project: { title: 1, year: 1, } } ])",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>movies<span class=\"token punctuation\">.</span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$search</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">index</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional unless you named your index something other than \"default\"</span>\n      <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">query</span><span class=\"token operator\">:</span> <span class=\"token string\">\"star wars\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"title\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$project</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_indexing_search.php"
      }
    },
    {
      "title": "MongoDB Schema Validation",
      "code": [
        {
          "text": "db.createCollection(\"posts\", { validator: { $jsonSchema: { bsonType: \"object\", required: [ \"title\", \"body\" ], properties: { title: { bsonType: \"string\", description: \"Title of post - Required.\" }, body: { bsonType: \"string\", description: \"Body of post - Required.\" }, category: { bsonType: \"string\", description: \"Category of post - Optional.\" }, likes: { bsonType: \"int\", description: \"Post like count. Must be an integer - Optional.\" }, tags: { bsonType: [\"string\"], description: \"Must be an array of strings - Optional.\" }, date: { bsonType: \"date\", description: \"Must be a date - Optional.\" } } } } })",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span><span class=\"token function\">createCollection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"posts\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">validator</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">$jsonSchema</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">bsonType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">required</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"body\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">properties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">bsonType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Title of post - Required.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">bsonType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Body of post - Required.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">bsonType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Category of post - Optional.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">bsonType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"int\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Post like count. Must be an integer - Optional.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">tags</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">bsonType</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"string\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Must be an array of strings - Optional.\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">bsonType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"date\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Must be a date - Optional.\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_schema_validation.php"
      }
    },
    {
      "title": "MongoDB Data API",
      "code": [
        {
          "text": "curl --location --request POST 'https://data.mongodb-api.com/app/<DATA API APP ID>/endpoint/data/v1/action/findOne' \\ --header 'Content-Type: application/json' \\ --header 'Access-Control-Request-Headers: *' \\ --header 'api-key: <DATA API KEY>' \\ --data-raw '{ \"dataSource\":\"<CLUSTER NAME>\", \"database\":\"sample_mflix\", \"collection\":\"movies\", \"projection\": {\"title\": 1} }'",
          "html": "<code class=\"language-jsx\">curl <span class=\"token operator\">--</span>location <span class=\"token operator\">--</span>request <span class=\"token constant\">POST</span> <span class=\"token string\">'https://data.mongodb-api.com/app/&lt;DATA API APP ID&gt;/endpoint/data/v1/action/findOne'</span> \\\n<span class=\"token operator\">--</span>header <span class=\"token string\">'Content-Type: application/json'</span> \\\n<span class=\"token operator\">--</span>header <span class=\"token string\">'Access-Control-Request-Headers: *'</span> \\\n<span class=\"token operator\">--</span>header <span class=\"token string\">'api-key: &lt;DATA API KEY&gt;'</span> \\\n<span class=\"token operator\">--</span>data<span class=\"token operator\">-</span>raw '<span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"dataSource\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"&lt;CLUSTER NAME&gt;\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"database\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"sample_mflix\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"collection\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"movies\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"projection\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>'\n</code>"
        },
        {
          "text": "{ \"dataSource\": \"<data source name>\", \"database\": \"<database name>\", \"collection\": \"<collection name>\", \"filter\": <query filter>, \"projection\": <projection> }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dataSource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;data source name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;database name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;collection name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> &lt;query filter&gt;<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"projection\"</span><span class=\"token operator\">:</span> &lt;projection&gt;\n<span class=\"token punctuation\">}</span>\n</code>"
        },
        {
          "text": "{ \"dataSource\": \"<data source name>\", \"database\": \"<database name>\", \"collection\": \"<collection name>\", \"filter\": <query filter>, \"projection\": <projection>, \"sort\": <sort expression>, \"limit\": <number>, \"skip\": <number> }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dataSource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;data source name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;database name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;collection name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> &lt;query filter&gt;<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"projection\"</span><span class=\"token operator\">:</span> &lt;projection&gt;<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sort\"</span><span class=\"token operator\">:</span> &lt;sort expression&gt;<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"limit\"</span><span class=\"token operator\">:</span> &lt;number&gt;<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"skip\"</span><span class=\"token operator\">:</span> &lt;number&gt;\n<span class=\"token punctuation\">}</span>\n</code>"
        },
        {
          "text": "{ \"dataSource\": \"<data source name>\", \"database\": \"<database name>\", \"collection\": \"<collection name>\", \"document\": <document> }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dataSource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;data source name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;database name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;collection name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"document\"</span><span class=\"token operator\">:</span> &lt;document&gt;\n<span class=\"token punctuation\">}</span>\n</code>"
        },
        {
          "text": "{ \"dataSource\": \"<data source name>\", \"database\": \"<database name>\", \"collection\": \"<collection name>\", \"documents\": [<document>, <document>, ...] }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dataSource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;data source name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;database name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;collection name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"documents\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>&lt;document&gt;<span class=\"token punctuation\">,</span> &lt;document&gt;<span class=\"token punctuation\">,</span> ...<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code>"
        },
        {
          "text": "{ \"dataSource\": \"<data source name>\", \"database\": \"<database name>\", \"collection\": \"<collection name>\", \"filter\": <query filter>, \"update\": <update expression>, \"upsert\": true|false }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dataSource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;data source name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;database name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;collection name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> &lt;query filter&gt;<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"update\"</span><span class=\"token operator\">:</span> &lt;update expression&gt;<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"upsert\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>|<span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>\n</code>"
        },
        {
          "text": "{ \"dataSource\": \"<data source name>\", \"database\": \"<database name>\", \"collection\": \"<collection name>\", \"filter\": <query filter> }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dataSource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;data source name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;database name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;collection name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"filter\"</span><span class=\"token operator\">:</span> &lt;query filter&gt;\n<span class=\"token punctuation\">}</span>\n</code>"
        },
        {
          "text": "{ \"dataSource\": \"<data source name>\", \"database\": \"<database name>\", \"collection\": \"<collection name>\", \"pipeline\": [<pipeline expression>, ...] }",
          "html": "<code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dataSource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;data source name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;database name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;collection name&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"pipeline\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>&lt;pipeline expression&gt;<span class=\"token punctuation\">,</span> ...<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_data_api.php"
      }
    },
    {
      "title": "MongoDB Node.js Database Interaction",
      "code": [
        {
          "text": "const { MongoClient } = require('mongodb');",
          "html": "<code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> <span class=\"token punctuation\">{</span> MongoClient <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code>"
        },
        {
          "text": "const { MongoClient } = require('mongodb'); const uri = \"<Your Connection String>\"; const client = new MongoClient(uri); async function run() { try { await client.connect(); const db = client.db('sample_mflix'); const collection = db.collection('movies'); // Find the first document in the collection const first = await collection.findOne(); console.log(first); } finally { // Close the database connection when finished or an error occurs await client.close(); } } run().catch(console.error);",
          "html": "<code class=\"language-jsx\"><span class=\"token keyword keyword-const\">const</span> <span class=\"token punctuation\">{</span> MongoClient <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> uri <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;Your Connection String&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword keyword-const\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">MongoClient</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-async\">async</span> <span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-try\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-await\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-const\">const</span> db <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">db</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sample_mflix'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-const\">const</span> collection <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'movies'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Find the first document in the collection</span>\n    <span class=\"token keyword keyword-const\">const</span> first <span class=\"token operator\">=</span> <span class=\"token keyword keyword-await\">await</span> collection<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-finally\">finally</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Close the database connection when finished or an error occurs</span>\n    <span class=\"token keyword keyword-await\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code>"
        },
        {
          "text": "npm install mongodb",
          "html": "npm install mongodb"
        },
        {
          "text": "node index.js",
          "html": "node index.js"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_nodejs_connect_database.php"
      }
    },
    {
      "title": "MongoDB Syllabus",
      "code": [
        {
          "text": "db.posts.find( {category: \"News\"} )",
          "html": "<code class=\"language-jsx\">db<span class=\"token punctuation\">.</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token string\">\"News\"</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n</code>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/mongodb/mongodb_syllabus.php"
      }
    }
  ]
}