{
  "language": "STATISTICS",
  "tutorials": [
    {
      "title": "Statistics Tutorial",
      "code": [
        {
          "text": "import numpy\n\nvalues = [4,11,7,14]\n\nx = numpy.mean(values)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">14</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.mean(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/index.php"
      }
    },
    {
      "title": "Statistics - Average",
      "code": [
        {
          "text": "40, 21, 55, 21, 48, 13, 72",
          "html": "<p>40, 21, 55, 21, 48, 13, 72</p>"
        },
        {
          "text": "(40 + 21 + 55 + 31 + 48 + 13 + 72)/7 =\n38.57",
          "html": "<p>(40 + 21 + 55 + 31 + 48 + 13 + 72)/7 = <u>38.57</u></p>"
        },
        {
          "text": "13, 21, 21,\n40\n, 48, 55, 72",
          "html": "<p>13, 21, 21, <u>40</u>, 48, 55, 72</p>"
        },
        {
          "text": "13, 21, 21,\n40\n, 48, 55, 356",
          "html": "<p>13, 21, 21, <u>40</u>, 48, 55, <strong>356</strong></p>"
        },
        {
          "text": "(13 + 21 + 21 + 40 + 48 + 55 + 72)/7 =\n38.57\n(13 + 21 + 21 + 40 + 48 + 55 + 356)/7 =\n79.14",
          "html": "<p>(13 + 21 + 21 + 40 + 48 + 55 + 72)/7 = <u>38.57</u></p>\n  <p>(13 + 21 + 21 + 40 + 48 + 55 + <strong>356</strong>)/7 = <u>79.14</u></p>"
        },
        {
          "text": "40,\n21\n, 55,\n21\n, 48, 13, 72",
          "html": "<p>40, <u>21</u>, 55, <u>21</u>, 48, 13, 72</p>"
        },
        {
          "text": "Alice,\nJohn\n, Bob, Maria,\nJohn\n, Julia, Carol",
          "html": "<p>Alice, <u>John</u>, Bob, Maria, <u>John</u>, Julia, Carol</p>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_average.php"
      }
    },
    {
      "title": "Statistics - Mean",
      "code": [
        {
          "text": "import numpy\n\nvalues = [4,11,7,14]\n\nx = numpy.mean(values)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">14</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.mean(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(4,7,11,14)\n\nmean(values)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">14</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      mean(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_mean.php"
      }
    },
    {
      "title": "Statistics - Median",
      "code": [
        {
          "text": "13, 21, 21,\n40\n, 48, 55, 72",
          "html": "<p>13, 21, 21, <u>40</u>, 48, 55, 72</p>"
        },
        {
          "text": "13, 21, 21,\n40, 42\n, 48, 55, 72",
          "html": "<p>13, 21, 21, <u>40, 42</u>, 48, 55, 72</p>"
        },
        {
          "text": "import numpy\n\nvalues = [13,21,21,40,42,48,55,72]\n\nx = numpy.median(values)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.median(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(13,21,21,40,42,48,55,72)\n\nmedian(values)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      median(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_median.php"
      }
    },
    {
      "title": "Statistics - Mode",
      "code": [
        {
          "text": "4,\n7\n, 3, 8, 11,\n7\n, 10, 19, 6, 9,\n12\n,\n12",
          "html": "<p>4, <u>7</u>, 3, 8, 11, <u>7</u>, 10, 19, 6, 9, <u>12</u>, <u>12</u></p>"
        },
        {
          "text": "Alice,\nJohn\n, Bob, Maria,\nJohn\n, Julia, Carol",
          "html": "<p>Alice, <u>John</u>, Bob, Maria, <u>John</u>, Julia, Carol</p>"
        },
        {
          "text": "from statistics import multimode\n\nvalues = [4,7,3,8,11,7,10,19,6,9,12,12]\n\nx = multimode(values)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">from</span> statistics <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> multimode\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">3</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">8</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">10</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">19</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">6</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">9</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">12</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">12</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = multimode(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "mode <- function(x) {\nunique_values <- unique(x)\ntable <- tabulate(match(x, unique_values))\nunique_values[table == max(table)]\n}\n\nvalues <- c(4,7,3,8,11,7,10,19,6,9,12,12)\n\nmode(values)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      mode &lt;- function(x) {<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>        unique_values &lt;- unique(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>        table &lt;- tabulate(match(x, unique_values))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>        unique_values[table == <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">max</span>(table)]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      }<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">3</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">8</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">10</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">19</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">6</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">9</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">12</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">12</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      mode(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_mode.php"
      }
    },
    {
      "title": "Statistics - Range",
      "code": [
        {
          "text": "13\n, 21, 21, 40, 48, 55,\n72",
          "html": "<p><u>13</u>, 21, 21, 40, 48, 55, <u>72</u></p>"
        },
        {
          "text": "import numpy\n\nvalues = [13,21,21,40,48,55,72]\n\nx = numpy.ptp(values)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.ptp(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(13,21,21,40,48,55,72)\n\nmax(values) - min(values)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">max</span>(values) - <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">min</span>(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_range.php"
      }
    },
    {
      "title": "Statistics - Quartiles and Percentiles",
      "code": [
        {
          "text": "import numpy\n\nvalues = [13,21,21,40,42,48,55,72]\n\nx = numpy.quantile(values, [0,0.25,0.5,0.75,1])\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.quantile(values, [<span class=\"pythonnumbercolor\" style=\"color:#905\">0</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">0.25</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">0.5</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">0.75</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>])<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(13,21,21,40,42,48,55,72)\n\nquantile(values)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      quantile(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "import numpy\n\nvalues = [13,21,21,40,42,48,55,72]\n\nx = numpy.percentile(values, 65)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.percentile(values, <span class=\"pythonnumbercolor\" style=\"color:#905\">65</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(13,21,21,40,42,48,55,72)\n\nquantile(values, 0.65)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      quantile(values, <span class=\"pythonnumbercolor\" style=\"color:#905\">0.65</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_quartiles_and_percentiles.php"
      }
    },
    {
      "title": "Statistics - Interquartile Range",
      "code": [
        {
          "text": "from scipy import stats\n\nvalues = [13,21,21,40,42,48,55,72]\n\nx = stats.iqr(values)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">from</span> scipy <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> stats\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = stats.iqr(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/> <span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(13,21,21,40,42,48,55,72)\n\nIQR(values)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">13</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">21</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">40</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">42</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">48</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">55</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">72</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      IQR(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_interquartile_range.php"
      }
    },
    {
      "title": "Statistics - Standard Deviation",
      "code": [
        {
          "text": "4, 11, 7, 14",
          "html": "<p>4, 11, 7, 14</p>"
        },
        {
          "text": "import numpy\n\nvalues = [4,11,7,14]\n\nx = numpy.std(values)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">14</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.std(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(4,7,11,14)\n\nsqrt(mean((values-mean(values))^2))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">14</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sqrt(mean((values-mean(values))^2))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "import numpy\n\nvalues = [4,11,7,14]\n\nx = numpy.std(values, ddof=1)\n\nprint(x)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> numpy\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values = [<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">14</span>]<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x = numpy.std(values, ddof=<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(x)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "values <- c(4,7,11,14)\n\nsd(values)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      values &lt;- c(<span class=\"pythonnumbercolor\" style=\"color:#905\">4</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">7</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">11</span>,<span class=\"pythonnumbercolor\" style=\"color:#905\">14</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sd(values)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_standard_deviation.php"
      }
    },
    {
      "title": "Statistics - Statistical Inference",
      "code": [
        {
          "text": "\"The average number of bikes a Dutch person owns is between 3.5 and 6.\"",
          "html": "<p>\"The average number of bikes a Dutch person owns is between 3.5 and 6.\"</p>"
        },
        {
          "text": "90% of Australians are left handed\nIs the average weight of dogs more than 40kg?\nDo doctors make more money than lawyers?",
          "html": "<ul>\n  <li>90% of Australians are left handed</li>\n  <li>Is the average weight of dogs more than 40kg?</li>\n  <li>Do doctors make more money than lawyers?</li>\n</ul>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_statistical_inference.php"
      }
    },
    {
      "title": "Statistics - Standard Normal Distribution",
      "code": [
        {
          "text": "The mean height of people in Germany is 170 cm (\nμ\n)\nThe standard deviation of the height of people in Germany is 10 cm (\nσ\n)\nBob is 200 cm tall (\nx\n)",
          "html": "<p>The mean height of people in Germany is 170 cm (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"4\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi></math></mjx-assistive-mml></mjx-container>)</p>\n  <p>The standard deviation of the height of people in Germany is 10 cm (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D70E TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>σ</mi></math></mjx-assistive-mml></mjx-container>)</p>\n  <p>Bob is 200 cm tall (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D465 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>x</mi></math></mjx-assistive-mml></mjx-container>)</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.norm.cdf(3))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.cdf(<span class=\"pythonnumbercolor\" style=\"color:#905\">3</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "pnorm(3)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    pnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">3</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The mean height of people in Germany is 170 cm (\nμ\n)\nThe standard deviation of the height of people in Germany is 10 cm (\nσ\n)",
          "html": "<p>The mean height of people in Germany is 170 cm (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"10\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi></math></mjx-assistive-mml></mjx-container>)</p>\n  <p>The standard deviation of the height of people in Germany is 10 cm (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"11\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D70E TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>σ</mi></math></mjx-assistive-mml></mjx-container>)</p>"
        },
        {
          "text": "\"How tall are you if you are taller than 90% of Germans?\"",
          "html": "<p>\"How tall are you if you are taller than 90% of Germans?\"</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.norm.ppf(0.9))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.9</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qnorm(0.9)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.9</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "\"You have to be at least 182.81 cm tall to be taller than 90% of Germans\"",
          "html": "<p>\"You have to be at <strong>least</strong> 182.81 cm tall to be taller than 90% of Germans\"</p>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_standard_normal_distribution.php"
      }
    },
    {
      "title": "Statistics - Student's T Distribution",
      "code": [
        {
          "text": "import scipy.stats as stats\nprint(stats.t.cdf(2.1, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.cdf(<span class=\"pythonnumbercolor\" style=\"color:#905\">2.1</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "pt(2.1, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    pt(<span class=\"pythonnumbercolor\" style=\"color:#905\">2.1</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.t.ppf(0.75, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.75</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qt(0.75, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qt(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.75</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_students_t_distribution.php"
      }
    },
    {
      "title": "Statistics - Estimation",
      "code": [
        {
          "text": "The point estimate for the average height of people in Denmark is 180 cm.",
          "html": "<p>The point estimate for the average height of people in Denmark is 180 cm.</p>"
        },
        {
          "text": "The average height of people in Denmark is between 170 cm and 190 cm.",
          "html": "<p>The average height of people in Denmark is between 170 cm and 190 cm.</p>"
        },
        {
          "text": "90% confidence level: between 175 cm and 185 cm.\n95% confidence level: between 170 cm and 190 cm.\n99% confidence level: between 160 cm and 200 cm.",
          "html": "<p>90% confidence level: between 175 cm and 185 cm.</p>\n  <p>95% confidence level: between 170 cm and 190 cm.</p>\n  <p>99% confidence level: between 160 cm and 200 cm.</p>"
        },
        {
          "text": "5 cm margin of error: between 175 cm and 185 cm.\n10 cm margin of error: between 170 cm and 190 cm.\n20 cm margin of error: between 160 cm and 200 cm.",
          "html": "<p>5 cm margin of error: between 175 cm and 185 cm.</p>\n  <p>10 cm margin of error: between 170 cm and 190 cm.</p>\n  <p>20 cm margin of error: between 160 cm and 200 cm.</p>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_estimation.php"
      }
    },
    {
      "title": "Statistics - Estimating Population Proportions",
      "code": [
        {
          "text": "6 out of 30 Nobel Prize winners in the sample were born in the US",
          "html": "<p>6 out of 30 Nobel Prize winners in the sample were born in the US</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.norm.ppf(1-0.025))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.025</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qnorm(1-0.025)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.025</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The 95% confidence interval for the proportion of Nobel Prize winners born in the US is between 5.7% and 34.4%",
          "html": "<p>The <strong>95%</strong> confidence interval for the proportion of Nobel Prize winners born in the US is between <strong>5.7% and 34.4%</strong></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify sample occurrences (x), sample size (n) and confidence level\nx = 6\nn = 30\nconfidence_level = 0.95\n\n# Calculate the point estimate, alpha, the critical z-value, the standard error, and the margin of error\npoint_estimate = x/n\nalpha = (1-confidence_level)\ncritical_z = stats.norm.ppf(1-alpha/2)\nstandard_error = math.sqrt((point_estimate*(1-point_estimate)/n))\nmargin_of_error = critical_z * standard_error\n\n# Calculate the lower and upper bound of the confidence interval\nlower_bound = point_estimate - margin_of_error\nupper_bound = point_estimate + margin_of_error\n\n# Print the results\nprint(\"Point Estimate: {:.3f}\".format(point_estimate))\nprint(\"Critical Z-value: {:.3f}\".format(critical_z))\nprint(\"Margin of Error: {:.3f}\".format(margin_of_error))\nprint(\"Confidence Interval: [{:.3f},{:.3f}]\".format(lower_bound,upper_bound))\nprint(\"The {:.1%} confidence interval for the population proportion is:\".format(confidence_level))\nprint(\"between {:.3f} and {:.3f}\".format(lower_bound,upper_bound))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify sample occurrences (x), sample size (n) and confidence level\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">6\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    confidence_level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.95\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the point estimate, alpha, the critical z-value, the \n    standard error, and the margin of error\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    point_estimate = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    alpha = (<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-confidence_level)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    critical_z = stats.norm.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-alpha/<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    standard_error = math.sqrt((point_estimate*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-point_estimate)/n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    margin_of_error = critical_z * standard_error\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the lower and upper bound of the confidence interval\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    lower_bound = point_estimate - margin_of_error\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    upper_bound = point_estimate + margin_of_error\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Print the results\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"Point Estimate: {:.3f}\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(point_estimate))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"Critical Z-value: {:.3f}\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(critical_z))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"Margin of Error: {:.3f}\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(margin_of_error))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"Confidence Interval: [{:.3f},{:.3f}]\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(lower_bound,upper_bound))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"The {:.1%} confidence interval for the population proportion is:\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(confidence_level))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"between {:.3f} and {:.3f}\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(lower_bound,upper_bound))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify sample occurrences (x), sample size (n) and confidence level\nx = 6\nn = 30\nconfidence_level = 0.95\n\n# Calculate the point estimate, alpha, the critical z-value, the standard error, and the margin of error\npoint_estimate = x/n\nalpha = (1-confidence_level)\ncritical_z = qnorm(1-alpha/2)\nstandard_error = sqrt(point_estimate*(1-point_estimate)/n)\nmargin_of_error = critical_z * standard_error\n\n# Calculate the lower and upper bound of the confidence interval\nlower_bound = point_estimate - margin_of_error\nupper_bound = point_estimate + margin_of_error\n\n# Print the results\nsprintf(\"Point Estimate: %0.3f\", point_estimate)\nsprintf(\"Critical Z-value: %0.3f\", critical_z)\nsprintf(\"Margin of Error: %0.3f\", margin_of_error)\nsprintf(\"Confidence Interval: [%0.3f,%0.3f]\", lower_bound, upper_bound)\nsprintf(\"The %0.1f%% confidence interval for the population proportion is:\", confidence_level*100)\nsprintf(\"between %0.4f and %0.4f\", lower_bound, upper_bound)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify sample occurrences (x), sample size (n) and confidence level\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">6\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    confidence_level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.95\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the point estimate, alpha, the critical z-value, the standard error, and the margin of error\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    point_estimate = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    alpha = (<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-confidence_level)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    critical_z = qnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-alpha/<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    standard_error = sqrt(point_estimate*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-point_estimate)/n)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    margin_of_error = critical_z * standard_error\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the lower and upper bound of the confidence interval\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    lower_bound = point_estimate - margin_of_error\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    upper_bound = point_estimate + margin_of_error\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Print the results\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"Point Estimate: %0.3f\"</span>, point_estimate)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"Critical Z-value: %0.3f\"</span>, critical_z)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"Margin of Error: %0.3f\"</span>, margin_of_error)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"Confidence Interval: [%0.3f,%0.3f]\"</span>, lower_bound, upper_bound)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"The %0.1f%% confidence interval for the population proportion is:\"</span>, confidence_level*<span class=\"pythonnumbercolor\" style=\"color:#905\">100</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"between %0.4f and %0.4f\"</span>, lower_bound, upper_bound)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_estimation_proportion.php"
      }
    },
    {
      "title": "Statistics - Estimating Population Means",
      "code": [
        {
          "text": "The mean age in the sample is 62.1\nThe standard deviation of age in the sample is 13.46",
          "html": "<p>The mean age in the sample is 62.1</p>\n  <p>The standard deviation of age in the sample is 13.46</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.t.ppf(1-0.025, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.025</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qt(1-0.025, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qt(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.025</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The 95% confidence interval for the mean age of Nobel Prize winners is between 57.06 and 67.14 years",
          "html": "<p>The <strong>95%</strong> confidence interval for the mean age of Nobel Prize winners is between <strong>57.06 and 67.14 years</strong></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify sample mean (x_bar), sample standard deviation (s), sample size (n) and confidence level\nx_bar = 62.1\ns = 13.46\nn = 30\nconfidence_level = 0.95\n\n# Calculate alpha, degrees of freedom (df), the critical t-value, and the margin of error\nalpha = (1-confidence_level)\ndf = n - 1\nstandard_error = s/math.sqrt(n)\ncritical_t = stats.t.ppf(1-alpha/2, df)\nmargin_of_error = critical_t * standard_error\n\n# Calculate the lower and upper bound of the confidence interval\nlower_bound = x_bar - margin_of_error\nupper_bound = x_bar + margin_of_error\n\n# Print the results\nprint(\"Critical t-value: {:.3f}\".format(critical_t))\nprint(\"Margin of Error: {:.3f}\".format(margin_of_error))\nprint(\"Confidence Interval: [{:.3f},{:.3f}]\".format(lower_bound,upper_bound))\nprint(\"The {:.1%} confidence interval for the population mean is:\".format(confidence_level))\nprint(\"between {:.3f} and {:.3f}\".format(lower_bound,upper_bound))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Specify sample mean (x_bar), sample standard deviation (s), sample size (n) and confidence level\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      confidence_level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.95\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Calculate alpha, degrees of freedom (df), the critical t-value, and the margin of error\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      alpha = (<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-confidence_level)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      df = n - <span class=\"pythonnumbercolor\" style=\"color:#905\">1\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      standard_error = s/math.sqrt(n)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      critical_t = stats.t.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-alpha/<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>, df)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      margin_of_error = critical_t * standard_error\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the lower and upper bound of the confidence interval\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      lower_bound = x_bar - margin_of_error\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      upper_bound = x_bar + margin_of_error\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Print the results\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"Critical t-value: {:.3f}\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(critical_t))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"Margin of Error: {:.3f}\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(margin_of_error))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"Confidence Interval: [{:.3f},{:.3f}]\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(lower_bound,upper_bound))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"The {:.1%} confidence interval for the population mean is:\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(confidence_level))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonstringcolor\" style=\"color:green\">\"between {:.3f} and {:.3f}\"</span>.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">format</span>(lower_bound,upper_bound))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "# Specify sample mean (x_bar), sample standard deviation (s), sample size (n) and confidence level\nx_bar = 62.1\ns = 13.46\nn = 30\nconfidence_level = 0.95\n\n# Calculate alpha, degrees of freedom (df), the critical t-value, and the margin of error\nalpha = (1-confidence_level)\ndf = n - 1\nstandard_error = s/sqrt(n)\ncritical_t = qt(1-alpha/2, 29)\nmargin_of_error = critical_t * standard_error\n\n# Calculate the lower and upper bound of the confidence interval\nlower_bound = x_bar - margin_of_error\nupper_bound = x_bar + margin_of_error\n\n# Print the results\nsprintf(\"Critical t-value: %0.3f\", critical_t)\nsprintf(\"Margin of Error: %0.3f\", margin_of_error)\nsprintf(\"Confidence Interval: [%0.3f,%0.3f]\", lower_bound, upper_bound)\nsprintf(\"The %0.1f%% confidence interval for the population mean is:\", confidence_level*100)\nsprintf(\"between %0.4f and %0.4f\", lower_bound, upper_bound)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Specify sample mean (x_bar), sample standard deviation (s), sample size (n) and confidence level\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      confidence_level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.95\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Calculate alpha, degrees of freedom (df), the critical t-value, and the margin of error\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      alpha = (<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-confidence_level)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      df = n - <span class=\"pythonnumbercolor\" style=\"color:#905\">1\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      standard_error = s/sqrt(n)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      critical_t = qt(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-alpha/<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      margin_of_error = critical_t * standard_error\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the lower and upper bound of the confidence interval\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      lower_bound = x_bar - margin_of_error\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      upper_bound = x_bar + margin_of_error\n      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Print the results\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"Critical t-value: %0.3f\"</span>, critical_t)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"Margin of Error: %0.3f\"</span>, margin_of_error)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"Confidence Interval: [%0.3f,%0.3f]\"</span>, lower_bound, upper_bound)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"The %0.1f%% confidence interval for the population mean is:\"</span>, confidence_level*<span class=\"pythonnumbercolor\" style=\"color:#905\">100</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sprintf(<span class=\"pythonstringcolor\" style=\"color:green\">\"between %0.4f and %0.4f\"</span>, lower_bound, upper_bound)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        },
        {
          "text": "# Specify sample size (n) and confidence level\nn = 30\nconfidence_level = 0.95\n\n# Set random seed and generate sample data with mean of 60 and standard deviation of 12.5\nset.seed(3)\nsample <- rnorm(n, 60, 12.5)\n\n# t.test function for sample data, confidence level, and selecting the $conf.int option\nt.test(sample, conf.level = confidence_level)$conf.int",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Specify sample size (n) and confidence level\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      confidence_level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.95\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># Set random seed and generate sample data with mean of 60 and standard deviation of 12.5\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">set</span>.seed(<span class=\"pythonnumbercolor\" style=\"color:#905\">3</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      sample &lt;- rnorm(n, <span class=\"pythonnumbercolor\" style=\"color:#905\">60</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">12.5</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      <span class=\"commentcolor\" style=\"color:slategray\"># t.test function for sample data, confidence level, and selecting the $conf.int option\n      <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>      t.test(sample, conf.level = confidence_level)$conf.<span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">int</span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>     </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_estimation_mean.php"
      }
    },
    {
      "title": "Statistics - Hypothesis Testing",
      "code": [
        {
          "text": "The average height of people in Denmark is more than 170 cm.\nThe share of left handed people in Australia is not 10%.\nThe average income of dentists is less the average income of lawyers.",
          "html": "<p>The average height of people in Denmark is <strong>more</strong> than 170 cm.</p>\n  <p>The share of left handed people in Australia is <strong>not</strong> 10%.</p>\n  <p>The average income of dentists is <strong>less</strong> the average income of lawyers.</p>"
        },
        {
          "text": "\"The average height of people in Denmark is more than 170 cm.\"",
          "html": "<p>\"The average height of people in Denmark is more than 170 cm.\"</p>"
        },
        {
          "text": "Null hypothesis: The average height of people in Denmark is 170 cm.\nAlternative hypothesis: The average height of people in Denmark is more than 170 cm.",
          "html": "<p><strong>Null hypothesis</strong>: The average height of people in Denmark <strong>is</strong> 170 cm.</p>\n  <p><strong>Alternative hypothesis</strong>: The average height of people in Denmark is <strong>more</strong> than 170 cm.</p>"
        },
        {
          "text": "H\n0\n:\nμ\n=\n170\nc\nm\nH\n1\n:\nμ\n>\n170\nc\nm",
          "html": "<p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"3\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"4\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c37\"/><mjx-c class=\"mjx-c30\"/></mjx-mn><mjx-mstyle><mjx-mspace style=\"width: 0.222em;\"/></mjx-mstyle><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D450 TEX-I\"/></mjx-mi><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45A TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>=</mo><mn>170</mn><mstyle scriptlevel=\"0\"><mspace width=\"0.222em\"/></mstyle><mi>c</mi><mi>m</mi></math></mjx-assistive-mml></mjx-container></p>\n  <p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3E\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c37\"/><mjx-c class=\"mjx-c30\"/></mjx-mn><mjx-mstyle><mjx-mspace style=\"width: 0.222em;\"/></mjx-mstyle><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D450 TEX-I\"/></mjx-mi><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45A TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>&gt;</mo><mn>170</mn><mstyle scriptlevel=\"0\"><mspace width=\"0.222em\"/></mstyle><mi>c</mi><mi>m</mi></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "We reject the null hypothesis (\nH\n0\n) at 0.05 significance level (\nα\n)",
          "html": "<p>We reject the null hypothesis (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"14\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) at 0.05 significance level (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"15\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D6FC TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>α</mi></math></mjx-assistive-mml></mjx-container>)</p>"
        },
        {
          "text": "We reject the null hypothesis (\nH\n0\n) at a 0.05 significance level (\nα\n)\nWe keep the null hypothesis (\nH\n0\n) at a 0.01 significance level (\nα\n)",
          "html": "<p>We reject the null hypothesis (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"17\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) at a 0.05 significance level (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"18\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D6FC TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>α</mi></math></mjx-assistive-mml></mjx-container>)</p>\n  <p>We keep the null hypothesis (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"19\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) at a 0.01 significance level (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"20\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D6FC TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>α</mi></math></mjx-assistive-mml></mjx-container>)</p>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_hypothesis_testing.php"
      }
    },
    {
      "title": "Statistics - Hypothesis Testing a Proportion",
      "code": [
        {
          "text": "\"More than 20% of Nobel Prize winners were born in the US\"",
          "html": "<p>\"<strong>More</strong> than 20% of Nobel Prize winners were born in the US\"</p>"
        },
        {
          "text": "10 out of 40 Nobel Prize winners in the sample were born in the US",
          "html": "<p>10 out of 40 Nobel Prize winners in the sample were born in the US</p>"
        },
        {
          "text": "Null hypothesis: 20% of Nobel Prize winners were born in the US.\nAlternative hypothesis: More than 20% of Nobel Prize winners were born in the US.",
          "html": "<p><strong>Null hypothesis</strong>: 20% of Nobel Prize winners were born in the US.</p>\n  <p><strong>Alternative hypothesis</strong>: <strong>More</strong> than 20% of Nobel Prize winners were born in the US.</p>"
        },
        {
          "text": "H\n0\n:\np\n=\n0.20\nH\n1\n:\np\n>\n0.20",
          "html": "<p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"4\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi><mo>=</mo><mn>0.20</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"7\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3E\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi><mo>&gt;</mo><mn>0.20</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "The claimed (\nH\n0\n) population proportion (\np\n) was\n0.20\nThe sample proportion (\np\n^\n) was 10 out of 40, or:\n10\n40\n=\n0.25\nThe sample size (\nn\n) was\n40",
          "html": "<p>The claimed (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"17\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) population proportion (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"18\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"19\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>0.20</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample proportion (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"20\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.335em; margin-bottom: -0.531em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-c5E\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>p</mi><mo stretchy=\"false\">^</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) was 10 out of 40, or: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"21\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mstyle><mjx-mfrac><mjx-frac type=\"d\"><mjx-num><mjx-nstrut type=\"d\"/><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type=\"d\"/><mjx-row><mjx-den><mjx-dstrut type=\"d\"/><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-mstyle></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>10</mn><mn>40</mn></mfrac><mo>=</mo><mn>0.25</mn></mstyle></math></mjx-assistive-mml></mjx-container>\n  </p><p>The sample size (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"22\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45B TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"23\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>40</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\nx = 10\nn = 40\np = 0.2\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate and print the test statistic\nprint((p_hat-p)/(math.sqrt((p*(1-p))/(n))))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.2\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and print the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>((p_hat-p)/(math.sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n))))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\nx <- 10\nn <- 40\np <- 0.20\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate and print the test statistic\n(p_hat-p)/(sqrt((p*(1-p))/(n)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">0.20\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and print the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    (p_hat-p)/(sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.norm.ppf(1-0.05))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.05</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qnorm(1-0.05)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.05</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data does not support the claim that \"more than 20% of Nobel Prize winners were born in the US\" at a 5% significance level.",
          "html": "<p>The sample data does <strong>not</strong> support the claim that \"more than 20% of Nobel Prize winners were born in the US\" at a <strong>5% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(1-stats.norm.cdf(0.791))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-stats.norm.cdf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.791</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "1-pnorm(0.791)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-pnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.791</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data does not support the claim that \"more than 20% of Nobel Prize winners were born in the US\" at a 10%, 5%, or 1% significance level.",
          "html": "<p>The sample data does <strong>not</strong> support the claim that \"more than 20% of Nobel Prize winners were born in the US\" at a <strong>10%, 5%, or 1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\nx = 10\nn = 40\np = 0.2\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate the test statistic\ntest_stat = (p_hat-p)/(math.sqrt((p*(1-p))/(n)))\n\n# Output the p-value of the test statistic (right tailed test)\nprint(1-stats.norm.cdf(test_stat))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.2\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (p_hat-p)/(math.sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the p-value of the test statistic (right tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-stats.norm.cdf(test_stat))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\nx <- 10\nn <- 40\np <- 0.20\n\n# P-value from right-tail proportion test at 0.05 significance level\nprop.test(x, n, p, alternative = c(\"greater\"), conf.level = 0.95, correct = FALSE)$p.value",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">0.20\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># P-value from right-tail proportion test at 0.05 significance level\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    prop.test(x, n, p, alternative = c(<span class=\"pythonstringcolor\" style=\"color:green\">\"greater\"</span>), conf.level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.95</span>, correct = FALSE)$p.value\n   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_hypothesis_testing_proportion.php"
      }
    },
    {
      "title": "Statistics - Hypothesis Testing a Mean",
      "code": [
        {
          "text": "\"The average age of Nobel Prize winners when they received the prize is more than 55\"",
          "html": "<p>\"The average age of Nobel Prize winners when they received the prize is <strong>more</strong> than 55\"</p>"
        },
        {
          "text": "The mean age in the sample (\nx\n¯\n) is 62.1\nThe standard deviation of age in the sample (\ns\n) is 13.46",
          "html": "<p>The mean age in the sample (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"0\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.314em; margin-bottom: -0.544em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-cAF\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D465 TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>x</mi><mo stretchy=\"false\">¯</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) is 62.1</p>\n  <p>The standard deviation of age in the sample (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"1\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D460 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>s</mi></math></mjx-assistive-mml></mjx-container>) is 13.46</p>"
        },
        {
          "text": "Null hypothesis: The average age was 55.\nAlternative hypothesis: The average age was more than 55.",
          "html": "<p><strong>Null hypothesis</strong>: The average age was 55.</p>\n  <p><strong>Alternative hypothesis</strong>: The average age was <strong>more</strong> than 55.</p>"
        },
        {
          "text": "H\n0\n:\nμ\n=\n55\nH\n1\n:\nμ\n>\n55",
          "html": "<p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c35\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>=</mo><mn>55</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"7\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"8\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3E\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c35\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>&gt;</mo><mn>55</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "The claimed (\nH\n0\n) population mean (\nμ\n) was\n55\nThe sample mean (\nx\n¯\n) was\n62.1\nThe sample standard deviation (\ns\n) was\n13.46\nThe sample size (\nn\n) was\n30",
          "html": "<p>The claimed (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"19\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) population mean (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"20\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"21\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c35\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>55</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample mean (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"22\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.314em; margin-bottom: -0.544em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-cAF\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D465 TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>x</mi><mo stretchy=\"false\">¯</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"23\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>62.1</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample standard deviation (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"24\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D460 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>s</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"25\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c33\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c36\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>13.46</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample size (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"26\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45B TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"27\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c33\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>30</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar = 62.1\ns = 13.46\nmu_null = 55\nn = 30\n\n# Calculate and print the test statistic\nprint((x_bar - mu_null)/(s/math.sqrt(n)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null = <span class=\"pythonnumbercolor\" style=\"color:#905\">55\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and print the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>((x_bar - mu_null)/(s/math.sqrt(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar <- 62.1\ns <- 13.46\nmu_null <- 55\nn <- 30\n\n# Output the test statistic\n(x_bar - mu_null)/(s/sqrt(n))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">55\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    (x_bar - mu_null)/(s/sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.t.ppf(1-0.01, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.01</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qt(1-0.01, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qt(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-<span class=\"pythonnumbercolor\" style=\"color:#905\">0.01</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data supports the claim that \"The average age of Nobel Prize winners when they received the prize is more than 55\" at a 1% significance level.",
          "html": "<p>The sample data <strong>supports</strong> the claim that \"The average age of Nobel Prize winners when they received the prize is more than 55\" at a <strong>1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(1-stats.t.cdf(2.889, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-stats.t.cdf(<span class=\"pythonnumbercolor\" style=\"color:#905\">2.889</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "1-pt(2.889, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-pt(<span class=\"pythonnumbercolor\" style=\"color:#905\">2.889</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data supports the claim that \"The average age of Nobel Prize winners when they received the prize is more than 55\" at a 10%, 5%, or 1% significance level.",
          "html": "<p>The sample data <strong>supports</strong> the claim that \"The average age of Nobel Prize winners when they received the prize is more than 55\" at a <strong>10%, 5%, or 1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar = 62.1\ns = 13.46\nmu_null = 55\nn = 30\n\n# Calculate the test statistic\ntest_stat = (x_bar - mu_null)/(s/math.sqrt(n))\n\n# Output the p-value of the test statistic (right tailed test)\nprint(1-stats.t.cdf(test_stat, n-1))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null = <span class=\"pythonnumbercolor\" style=\"color:#905\">55\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (x_bar - mu_null)/(s/math.sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the p-value of the test statistic (right tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-stats.t.cdf(test_stat, n-<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar <- 62.1\ns <- 13.46\nmu_null <- 55\nn <- 30\n\n# Calculate the test statistic\ntest_stat = (x_bar - mu_null)/(s/sqrt(n))\n\n# P-value the p-value of the test statistic (right tailed test)\n1-pt(test_stat, n-1)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">55\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (x_bar - mu_null)/(s/sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># P-value the p-value of the test statistic (right tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-pt(test_stat, n-<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_hypothesis_testing_mean.php"
      }
    },
    {
      "title": "Statistics - Hypothesis Testing a Proportion (Left Tailed)",
      "code": [
        {
          "text": "\"Less than 45% of Nobel Prize winners were born in the US\"",
          "html": "<p>\"<strong>Less</strong> than 45% of Nobel Prize winners were born in the US\"</p>"
        },
        {
          "text": "10 out of 40 Nobel Prize winners in the sample were born in the US",
          "html": "<p>10 out of 40 Nobel Prize winners in the sample were born in the US</p>"
        },
        {
          "text": "Null hypothesis: 45% of Nobel Prize winners were born in the US.\nAlternative hypothesis: Less than 45% of Nobel Prize winners were born in the US.",
          "html": "<p><strong>Null hypothesis</strong>: 45% of Nobel Prize winners were born in the US.</p>\n  <p><strong>Alternative hypothesis</strong>: <strong>Less</strong> than 45% of Nobel Prize winners were born in the US.</p>"
        },
        {
          "text": "H\n0\n:\np\n=\n0.45\nH\n1\n:\np\n<\n0.45",
          "html": "<p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"4\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi><mo>=</mo><mn>0.45</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"7\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3C\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi><mo>&lt;</mo><mn>0.45</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "The claimed (\nH\n0\n) population proportion (\np\n) was\n0.45\nThe sample proportion (\np\n^\n) was 10 out of 40, or:\n10\n40\n=\n0.25\nThe sample size (\nn\n) was\n40",
          "html": "<p>The claimed (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"17\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) population proportion (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"18\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"19\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>0.45</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample proportion (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"20\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.335em; margin-bottom: -0.531em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-c5E\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>p</mi><mo stretchy=\"false\">^</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) was 10 out of 40, or: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"21\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mstyle><mjx-mfrac><mjx-frac type=\"d\"><mjx-num><mjx-nstrut type=\"d\"/><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type=\"d\"/><mjx-row><mjx-den><mjx-dstrut type=\"d\"/><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c35\"/></mjx-mn></mjx-mstyle></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>10</mn><mn>40</mn></mfrac><mo>=</mo><mn>0.25</mn></mstyle></math></mjx-assistive-mml></mjx-container>\n  </p><p>The sample size (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"22\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45B TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"23\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>40</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\nx = 10\nn = 40\np = 0.45\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate and print the test statistic\nprint((p_hat-p)/(math.sqrt((p*(1-p))/(n))))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.45\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and print the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>((p_hat-p)/(math.sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n))))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\nx <- 10\nn <- 40\np <- 0.45\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate and output the test statistic\n(p_hat-p)/(sqrt((p*(1-p))/(n)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">0.45\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and output the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    (p_hat-p)/(sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.norm.ppf(0.01))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.01</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qnorm(0.01)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.01</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data supports the claim that \"less than 45% of Nobel Prize winners were born in the US\" at a 1% significance level.",
          "html": "<p>The sample data <strong>supports</strong> the claim that \"less than 45% of Nobel Prize winners were born in the US\" at a <strong>1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.norm.cdf(-2.543))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.cdf(-<span class=\"pythonnumbercolor\" style=\"color:#905\">2.543</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "pnorm(-2.543)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    pnorm(-<span class=\"pythonnumbercolor\" style=\"color:#905\">2.543</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data supports the claim that \"less than 45% of Nobel Prize winners were born in the US\" at a 10%, 5%, and 1% significance level.",
          "html": "<p>The sample data <strong>supports</strong>  the claim that \"less than 45% of Nobel Prize winners were born in the US\" at a <strong>10%, 5%, and 1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\nx = 10\nn = 40\np = 0.45\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate the test statistic\ntest_stat = (p_hat-p)/(math.sqrt((p*(1-p))/(n)))\n\n# Output the p-value of the test statistic (left tailed test)\nprint(stats.norm.cdf(test_stat))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.45\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (p_hat-p)/(math.sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the p-value of the test statistic (left tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.cdf(test_stat))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\nx <- 10\nn <- 40\np <- 0.45\n\n# P-value from left-tail proportion test at 0.01 significance level\nprop.test(x, n, p, alternative = c(\"less\"), conf.level = 0.99, correct = FALSE)$p.value",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">40\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">0.45\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># P-value from left-tail proportion test at 0.01 significance level\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    prop.test(x, n, p, alternative = c(<span class=\"pythonstringcolor\" style=\"color:green\">\"less\"</span>), conf.level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.99</span>, correct = FALSE)$p.value\n   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_hypothesis_testing_proportion_left.php"
      }
    },
    {
      "title": "Statistics - Hypothesis Testing a Proportion (Two Tailed)",
      "code": [
        {
          "text": "\"The share of Nobel Prize winners that are women is not 50%\"",
          "html": "<p>\"The share of Nobel Prize winners that are women is <strong>not</strong> 50%\"</p>"
        },
        {
          "text": "10 out of 100 Nobel Prize winners in the sample were women",
          "html": "<p>10 out of 100 Nobel Prize winners in the sample were women</p>"
        },
        {
          "text": "Null hypothesis: 50% of Nobel Prize winners were women.\nAlternative hypothesis: The share of Nobel Prize winners that are women is not 50%",
          "html": "<p><strong>Null hypothesis</strong>: 50% of Nobel Prize winners were women.</p>\n  <p><strong>Alternative hypothesis</strong>: The share of Nobel Prize winners that are women is <strong>not</strong> 50%</p>"
        },
        {
          "text": "H\n0\n:\np\n=\n0.50\nH\n1\n:\np\n≠\n0.50",
          "html": "<p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"4\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c35\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi><mo>=</mo><mn>0.50</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"7\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c2260\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c35\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi><mo>≠</mo><mn>0.50</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "The claimed (\nH\n0\n) population proportion (\np\n) was\n0.50\nThe sample proportion (\np\n^\n) was 10 out of 100, or:\n10\n100\n=\n0.10\nThe sample size (\nn\n) was\n100",
          "html": "<p>The claimed (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"17\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) population proportion (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"18\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>p</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"19\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c35\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>0.50</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample proportion (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"20\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.335em; margin-bottom: -0.531em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-c5E\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45D TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>p</mi><mo stretchy=\"false\">^</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) was 10 out of 100, or: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"21\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mstyle><mjx-mfrac><mjx-frac type=\"d\"><mjx-num><mjx-nstrut type=\"d\"/><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-num><mjx-dbox><mjx-dtable><mjx-line type=\"d\"/><mjx-row><mjx-den><mjx-dstrut type=\"d\"/><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-den></mjx-row></mjx-dtable></mjx-dbox></mjx-frac></mjx-mfrac><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-mstyle></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>10</mn><mn>100</mn></mfrac><mo>=</mo><mn>0.10</mn></mstyle></math></mjx-assistive-mml></mjx-container>\n  </p><p>The sample size (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"22\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45B TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"23\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c30\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>100</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\nx = 10\nn = 100\np = 0.5\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate and print the test statistic\nprint((p_hat-p)/(math.sqrt((p*(1-p))/(n))))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">100\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.5\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and print the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>((p_hat-p)/(math.sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n))))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\nx <- 10\nn <- 100\np <- 0.5\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate and output the test statistic\n(p_hat-p)/(sqrt((p*(1-p))/(n)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">100\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">0.5\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and output the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    (p_hat-p)/(sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.norm.ppf(0.005))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.norm.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.005</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qnorm(0.005)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qnorm(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.005</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data supports the claim that \"The share of Nobel Prize winners that are women is not 50%\" at a 1% significance level.",
          "html": "<p>The sample data <strong>supports</strong> the claim that \"The share of Nobel Prize winners that are women is <strong>not</strong> 50%\" at a <strong>1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(2*stats.norm.cdf(-8))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*stats.norm.cdf(-<span class=\"pythonnumbercolor\" style=\"color:#905\">8</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "2*pnorm(-8)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*pnorm(-<span class=\"pythonnumbercolor\" style=\"color:#905\">8</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data supports the claim that \"The share of Nobel Prize winners that are women is not 50%\" at a 10%, 5%, and 1% significance level.",
          "html": "<p>The sample data <strong>supports</strong>  the claim that \"The share of Nobel Prize winners that are women is not 50%\" at a <strong>10%, 5%, and 1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\nx = 10\nn = 100\np = 0.5\n\n# Calculate the sample proportion\np_hat = x/n\n\n# Calculate the test statistic\ntest_stat = (p_hat-p)/(math.sqrt((p*(1-p))/(n)))\n\n# Output the p-value of the test statistic (two-tailed test)\nprint(2*stats.norm.cdf(test_stat))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the number of occurrences (x), the sample size (n), and the proportion claimed in the null-hypothesis (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x = <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">100\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.5\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the sample proportion\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p_hat = x/n\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (p_hat-p)/(math.sqrt((p*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-p))/(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the p-value of the test statistic (two-tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*stats.norm.cdf(test_stat))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\nx <- 10\nn <- 100\np <- 0.5\n\n# P-value from left-tail proportion test at 0.01 significance level\nprop.test(x, n, p, alternative = c(\"two.sided\"), conf.level = 0.99, correct = FALSE)$p.value",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample occurrences (x), the sample size (n), and the null-hypothesis claim (p)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">10\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">100\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    p &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">0.5\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># P-value from left-tail proportion test at 0.01 significance level\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    prop.test(x, n, p, alternative = c(<span class=\"pythonstringcolor\" style=\"color:green\">\"two.sided\"</span>), conf.level = <span class=\"pythonnumbercolor\" style=\"color:#905\">0.99</span>, correct = FALSE)$p.value\n   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_hypothesis_testing_proportion_2tail.php"
      }
    },
    {
      "title": "Statistics - Hypothesis Testing a Mean (Left Tailed)",
      "code": [
        {
          "text": "\"The average age of Nobel Prize winners when they received the prize is less than 60\"",
          "html": "<p>\"The average age of Nobel Prize winners when they received the prize is <strong>less</strong> than 60\"</p>"
        },
        {
          "text": "The mean age in the sample (\nx\n¯\n) is 62.1\nThe standard deviation of age in the sample (\ns\n) is 13.46",
          "html": "<p>The mean age in the sample (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"0\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.314em; margin-bottom: -0.544em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-cAF\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D465 TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>x</mi><mo stretchy=\"false\">¯</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) is 62.1</p>\n  <p>The standard deviation of age in the sample (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"1\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D460 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>s</mi></math></mjx-assistive-mml></mjx-container>) is 13.46</p>"
        },
        {
          "text": "Null hypothesis: The average age was 60.\nAlternative hypothesis: The average age was less than 60.",
          "html": "<p><strong>Null hypothesis</strong>: The average age was 60.</p>\n  <p><strong>Alternative hypothesis</strong>: The average age was <strong>less</strong> than 60.</p>"
        },
        {
          "text": "H\n0\n:\nμ\n=\n60\nH\n1\n:\nμ\n<\n60",
          "html": "<p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>=</mo><mn>60</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"7\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"8\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3C\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>&lt;</mo><mn>60</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "The claimed (\nH\n0\n) population mean (\nμ\n) was\n60\nThe sample mean (\nx\n¯\n) was\n62.1\nThe sample standard deviation (\ns\n) was\n13.46\nThe sample size (\nn\n) was\n30",
          "html": "<p>The claimed (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"19\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) population mean (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"20\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"21\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>60</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample mean (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"22\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.314em; margin-bottom: -0.544em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-cAF\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D465 TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>x</mi><mo stretchy=\"false\">¯</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"23\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>62.1</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample standard deviation (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"24\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D460 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>s</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"25\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c33\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c36\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>13.46</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample size (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"26\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45B TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"27\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c33\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>30</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar = 62.1\ns = 13.46\nmu_null = 60\nn = 30\n\n# Calculate and print the test statistic\nprint((x_bar - mu_null)/(s/math.sqrt(n)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null = <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and print the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>((x_bar - mu_null)/(s/math.sqrt(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar <- 62.1\ns <- 13.46\nmu_null <- 60\nn <- 30\n\n# Output the test statistic\n(x_bar - mu_null)/(s/sqrt(n))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    (x_bar - mu_null)/(s/sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.t.ppf(0.05, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.05</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qt(0.05, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qt(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.05</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data does not support the claim that \"The average age of Nobel Prize winners when they received the prize is less than 60\" at a 5% significance level.",
          "html": "<p>The sample data does <strong>not</strong> support the claim that \"The average age of Nobel Prize winners when they received the prize is less than 60\" at a <strong>5% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.t.cdf(0.855, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.cdf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.855</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "pt(0.855, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    pt(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.855</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data does not support the claim that \"The average age of Nobel Prize winners when they received the prize is less than 60\" at a 10%, 5%, or 1% significance level.",
          "html": "<p>The sample data does <strong>not</strong> support the claim that \"The average age of Nobel Prize winners when they received the prize is less than 60\" at a <strong>10%, 5%, or 1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar = 62.1\ns = 13.46\nmu_null = 60\nn = 30\n\n# Calculate the test statistic\ntest_stat = (x_bar - mu_null)/(s/math.sqrt(n))\n\n# Output the p-value of the test statistic (left tailed test)\nprint(stats.t.cdf(test_stat, n-1))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null = <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (x_bar - mu_null)/(s/math.sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the p-value of the test statistic (left tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.cdf(test_stat, n-<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar <- 62.1\ns <- 13.46\nmu_null <- 60\nn <- 30\n\n# Calculate the test statistic\ntest_stat = (x_bar - mu_null)/(s/sqrt(n))\n\n# P-value the p-value of the test statistic (left tailed test)\npt(test_stat, n-1)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (x_bar - mu_null)/(s/sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># P-value the p-value of the test statistic (left tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    pt(test_stat, n-<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_hypothesis_testing_mean_left.php"
      }
    },
    {
      "title": "Statistics - Hypothesis Testing a Mean (Two Tailed)",
      "code": [
        {
          "text": "\"The average age of Nobel Prize winners when they received the prize is not 60\"",
          "html": "<p>\"The average age of Nobel Prize winners when they received the prize is <strong>not</strong> 60\"</p>"
        },
        {
          "text": "The mean age in the sample (\nx\n¯\n) is 62.1\nThe standard deviation of age in the sample (\ns\n) is 13.46",
          "html": "<ul>\n    <li>The mean age in the sample (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"0\" style=\"font-size: 110.9%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.314em; margin-bottom: -0.544em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-cAF\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D465 TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>x</mi><mo stretchy=\"false\">¯</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) is 62.1</li>\n    <li>The standard deviation of age in the sample (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"1\" style=\"font-size: 110.9%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D460 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>s</mi></math></mjx-assistive-mml></mjx-container>) is 13.46</li>\n  </ul>"
        },
        {
          "text": "Null hypothesis: The average age was 60.\nAlternative hypothesis: The average age is not 60.",
          "html": "<p><strong>Null hypothesis</strong>: The average age was 60.</p>\n  <p><strong>Alternative hypothesis</strong>: The average age is <strong>not</strong> 60.</p>"
        },
        {
          "text": "H\n0\n:\nμ\n=\n60\nH\n1\n:\nμ\n≠\n60",
          "html": "<p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c3D\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>=</mo><mn>60</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"7\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>: <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"8\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c2260\"/></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi><mo>≠</mo><mn>60</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "The claimed (\nH\n0\n) population mean (\nμ\n) was\n60\nThe sample mean (\nx\n¯\n) was\n62.1\nThe sample standard deviation (\ns\n) was\n13.46\nThe sample size (\nn\n) was\n30",
          "html": "<p>The claimed (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"19\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-msub><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D43B TEX-I\"/></mjx-mi><mjx-script style=\"vertical-align: -0.15em; margin-left: -0.057em;\"><mjx-texatom size=\"s\" texclass=\"ORD\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-texatom></mjx-script></mjx-msub></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>H</mi><mrow data-mjx-texclass=\"ORD\"><mn>0</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>) population mean (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"20\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D707 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>μ</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"21\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>60</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample mean (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"22\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-texatom texclass=\"ORD\"><mjx-mover><mjx-over style=\"padding-bottom: 0.105em; padding-left: 0.314em; margin-bottom: -0.544em;\"><mjx-mo class=\"mjx-n\" style=\"width: 0px; margin-left: -0.25em;\"><mjx-c class=\"mjx-cAF\"/></mjx-mo></mjx-over><mjx-base><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D465 TEX-I\"/></mjx-mi></mjx-base></mjx-mover></mjx-texatom></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow data-mjx-texclass=\"ORD\"><mover><mi>x</mi><mo stretchy=\"false\">¯</mo></mover></mrow></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"23\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c36\"/><mjx-c class=\"mjx-c32\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c31\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>62.1</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample standard deviation (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"24\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D460 TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>s</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"25\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c31\"/><mjx-c class=\"mjx-c33\"/><mjx-c class=\"mjx-c2E\"/><mjx-c class=\"mjx-c34\"/><mjx-c class=\"mjx-c36\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>13.46</mn></math></mjx-assistive-mml></mjx-container></p>\n  <p>The sample size (<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"26\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mi class=\"mjx-i\"><mjx-c class=\"mjx-c1D45B TEX-I\"/></mjx-mi></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></mjx-assistive-mml></mjx-container>) was <mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" tabindex=\"0\" ctxtmenu_counter=\"27\" style=\"font-size: 111%; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\"><mjx-mn class=\"mjx-n\"><mjx-c class=\"mjx-c33\"/><mjx-c class=\"mjx-c30\"/></mjx-mn></mjx-math><mjx-assistive-mml unselectable=\"on\" display=\"inline\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>30</mn></math></mjx-assistive-mml></mjx-container></p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar = 62.1\ns = 13.46\nmu_null = 60\nn = 30\n\n# Calculate and print the test statistic\nprint((x_bar - mu_null)/(s/math.sqrt(n)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null = <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate and print the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>((x_bar - mu_null)/(s/math.sqrt(n)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar <- 62.1\ns <- 13.46\nmu_null <- 60\nn <- 30\n\n# Output the test statistic\n(x_bar - mu_null)/(s/sqrt(n))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    (x_bar - mu_null)/(s/sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "import scipy.stats as stats\nprint(stats.t.ppf(0.025, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(stats.t.ppf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.025</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "qt(0.025, 29)",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    qt(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.025</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data does not support the claim that \"The average age of Nobel Prize winners when they received the prize is not 60\" at a 5% significance level.",
          "html": "<p>The sample data does <strong>not</strong> support the claim that \"The average age of Nobel Prize winners when they received the prize is not 60\" at a <strong>5% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nprint(2*(1-stats.t.cdf(0.855, 29)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-stats.t.cdf(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.855</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "2*(1-pt(0.855, 29))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-pt(<span class=\"pythonnumbercolor\" style=\"color:#905\">0.855</span>, <span class=\"pythonnumbercolor\" style=\"color:#905\">29</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "The sample data does not support the claim that \"The average age of Nobel Prize winners when they received the prize is not 60\" at a 10%, 5%, or 1% significance level.",
          "html": "<p>The sample data does <strong>not</strong> support the claim that \"The average age of Nobel Prize winners when they received the prize is not 60\" at a <strong>10%, 5%, or 1% significance level</strong>.</p>"
        },
        {
          "text": "import scipy.stats as stats\nimport math\n\n# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar = 62.1\ns = 13.46\nmu_null = 60\nn = 30\n\n# Calculate the test statistic\ntest_stat = (x_bar - mu_null)/(s/math.sqrt(n))\n\n# Output the p-value of the test statistic (two tailed test)\nprint(2*(1-stats.t.cdf(test_stat, n-1)))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> scipy.stats <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">as</span> stats\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">import</span> math\n    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar = <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s = <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null = <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n = <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (x_bar - mu_null)/(s/math.sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Output the p-value of the test statistic (two tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonkeywordcolor\" style=\"color:#005cc5\">print</span>(<span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-stats.t.cdf(test_stat, n-<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>)))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        },
        {
          "text": "# Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\nx_bar <- 62.1\ns <- 13.46\nmu_null <- 60\nn <- 30\n\n# Calculate the test statistic\ntest_stat = (x_bar - mu_null)/(s/sqrt(n))\n\n# P-value the p-value of the test statistic (two tailed test)\n2*(1-pt(test_stat, n-1))",
          "html": "<span class=\"pythoncolor\" style=\"color:black\"><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Specify the sample mean (x_bar), the sample standard deviation (s), the mean claimed in the null-hypothesis (mu_null), and the sample size (n)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    x_bar &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">62.1\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    s &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">13.46\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    mu_null &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">60\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    n &lt;- <span class=\"pythonnumbercolor\" style=\"color:#905\">30\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># Calculate the test statistic\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    test_stat = (x_bar - mu_null)/(s/sqrt(n))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <br/><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"commentcolor\" style=\"color:slategray\"># P-value the p-value of the test statistic (two tailed test)\n    <br/></span><span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>    <span class=\"pythonnumbercolor\" style=\"color:#905\">2</span>*(<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>-pt(test_stat, n-<span class=\"pythonnumbercolor\" style=\"color:#905\">1</span>))<span class=\"pythonnumbercolor\" style=\"color:#905\">\n</span>   </span>"
        }
      ],
      "metadata": {
        "url": "https://www.w3schools.com/statistics/statistics_hypothesis_testing_mean_2tail.php"
      }
    }
  ]
}